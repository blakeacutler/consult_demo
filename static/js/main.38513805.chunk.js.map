{"version":3,"sources":["reportWebVitals.js","styles/globalCSS.js","utilities/decodeHTML.js","utilities/getCumulativeDuration.js","utilities/getCurrentDateTime.js","utilities/calculateTimeOnPage.js","utilities/millisecondsToTime.js","globalState/createConfigSettingsSlice.js","globalState/createLanguageSettingsSlice.js","globalState/createMapSettingsSlice.js","globalState/createStatementsSettingsSlice.js","globalState/useSettingsStore.js","globalState/createLocalPanelSlice.js","globalState/createPresortSlice.js","globalState/createLandingSlice.js","globalState/createFooterSlice.js","globalState/createSortSlice.js","globalState/createPostsortSlice.js","globalState/createSubmitSlice.js","globalState/createSurveySlice.js","globalState/useStore.js","pages/landing/LandingModal.jsx","pages/landing/LogInSubmitButton.jsx","pages/landing/LogInScreen.jsx","pages/landing/PartIdScreen.jsx","pages/landing/AccessCodeScreen.jsx","pages/landing/checkForIeBrowser.js","pages/landing/InternetExplorerWarning.jsx","pages/landing/parseParams.js","pages/landing/LocalStartButton.jsx","pages/landing/LocalDeleteButton.jsx","pages/landing/LocalSortsDownloadButton.jsx","globalState/useLocalPersist.js","pages/landing/LocalConfirmDeleteButton.jsx","pages/landing/LocalDeleteModal.jsx","pages/landing/LocalSaveBeforeDeleteModal.jsx","pages/landing/LocalStart.jsx","pages/landing/Landing.jsx","utilities/sanitizeString.js","utilities/useLocalStorage.js","pages/postsort/LowCards.jsx","pages/postsort/LowCards2.jsx","pages/postsort/HighCards.jsx","pages/postsort/HighCards2.jsx","pages/postsort/PostsortHelpModal.jsx","utilities/PromptUnload.jsx","pages/postsort/PostsortPreventNavModal.jsx","pages/postsort/Postsort.jsx","pages/presort/PresortModal.jsx","pages/presort/PresortDND.jsx","pages/presort/PresortPreventNavModal.jsx","pages/presort/PresortFinishedModal.jsx","pages/presort/PresortIsComplete.jsx","pages/presort/PleaseLogInFirst.jsx","pages/presort/PresortDndImages.jsx","pages/presort/Presort.jsx","pages/sort/checkForColumnOverload.js","pages/sort/move.js","pages/sort/reorder.js","pages/sort/getItemStyle.js","pages/sort/getListStyle.js","pages/sort/SortColumn.jsx","pages/sort/getListStyleHori.js","pages/sort/getItemStyleHori.js","pages/sort/calculateDragResults.js","pages/sort/SortGrid.jsx","pages/sort/getItemStyleImages.js","pages/sort/getListStyleImages.js","pages/sort/SortColumnImages.jsx","pages/sort/getItemStyleHoriImages.js","pages/sort/calculateDragResultsImages.js","pages/sort/SortGridImages.jsx","pages/sort/SortHelpModal.jsx","utilities/SortingFinishedModal.jsx","pages/sort/PreventSortNavModal.jsx","pages/sort/OverloadedColumnModal.jsx","pages/sort/SortColGuides.jsx","pages/sort/Sort.jsx","pages/submit/SubmitSuccessModal.jsx","pages/submit/SubmitFailureModal.jsx","pages/submit/SubmitButton.jsx","pages/submit/calculatePostsortResults.js","pages/submit/FallbackButtons.jsx","pages/submit/SubmitFallback.jsx","pages/submit/SaveLocalDataToLocalStorageButton.jsx","pages/submit/ReturnToLocalPanelButton.jsx","pages/submit/LocalSubmitSuccessModal.jsx","pages/submit/SubmitButtonGS.jsx","pages/submit/CopyToClipboardButton.jsx","pages/submit/SubmitButtonEmail.jsx","pages/sort/convertObjectToResults.js","pages/submit/SubmitButtonNetlify.jsx","pages/submit/Submit.jsx","pages/survey/SurveyTextElement.jsx","pages/survey/SurveyTextAreaElement.jsx","pages/survey/SurveyRadioElement.jsx","pages/survey/SurveyDropdownElement.jsx","pages/survey/SurveyCheckboxElement.jsx","pages/survey/SurveyRating2Element.jsx","pages/survey/SurveyRating5Element.jsx","pages/survey/SurveyRating10Element.jsx","pages/survey/SurveyLikertElement.jsx","pages/survey/SurveyInformationElement.jsx","pages/survey/AnswerAllSurveyQuestionsModal.jsx","pages/survey/SurveyHelpModal.jsx","pages/survey/Survey.jsx","utilities/NoPageFound.jsx","utilities/processConfigXMLData.js","utilities/processMapXMLData.js","utilities/processLanguageXMLData.js","utilities/processStatementsXMLData.js","pages/landing/LoadingScreen.jsx","pages/footer/NextButton.jsx","pages/footer/FooterFontSizer.jsx","pages/footer/CardHeightSizer.jsx","pages/footer/calcProgressScore.js","pages/footer/HelpButton.jsx","pages/footer/getNextPage.js","pages/footer/PostsortBackButton.jsx","pages/footer/StyledFooter.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","decodeHTML","string","includes","replace","error","console","log","getCumulativeDuration","startTime","cumulativeDuration2","cumulativeDuration","Date","now","getCurrentDateTime","currentDate","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","seconds","getSeconds","calculateTimeOnPage","prefix","prefix2","identifier","identifier3","identifier4","durationCumulative","localStorage","getItem","undefined","newDurationCumulative","setItem","dateString","formattedDuration","s","pad","n","slice","millisecondsToTime","createConfigSettingsSlice","set","get","configObj","surveyQuestionObjArray","requiredAnswersObj","setConfigObj","configObjInput","setSurveyQuestionObjArray","setRequiredAnswersObj","createLanguageSettingsSlice","langObj","setLangObj","langObjInput","createMapSettingsSlice","mapObj","setMapObj","mapObjInput","createStatementsSettingsSlice","statementsObj","columnStatements","resetColumnStatements","setStatementsObj","statementsObjInput","setColumnStatements","columnStatementsInput","setResetColumnStatements","inputValue","useSettingsStore","create","createLocalPanelSlice","displayLocalPartIdWarning1","displayLocalPartIdWarning2","triggerLocalDeleteModal","localParticipantName","setLocalParticipantName","setLocalPartIdWarning1","bool","setLocalPartIdWarning2","setLocalDeleteModal","createPresortSlice","triggerPresortModal","presortNoReturn","presortPosCards","presortNeuCards","presortNegCards","presortCards","presortSortedStatementsNumInitial","presortFinished","triggerPresortFinishedModal","triggerPresortPreventNavModal","results","setPresortNoReturn","setPresortPosCards","setPresortNeuCards","setPresortNegCards","setPresortCards","setPresortSortedStatementsNumInitial","setPresortFinished","setTriggerPresortFinishedModal","setTriggerPresortPreventNavModal","setResults","setTriggerPresortModal","createLandingSlice","dataLoaded","isLoggedIn","triggerLandingModal","usercode","urlUsercode","partId","localUsercode","displayAccessCodeWarning","userInputAccessCode","displayLandingContent","triggerSaveBeforeDeleteModal","userInputPartId","displayPartIdWarning","setUrlUsercode","setDisplayPartIdWarning","setUserInputPartId","setTriggerSaveBeforeDeleteModal","setDataLoaded","setIsLoggedIn","setTriggerLandingModal","setUsercode","setPartId","setLocalUsercode","input","setDisplayAccessCodeWarning","setUserInputAccessCode","setDisplayLandingContent","createFooterSlice","cardFontSizePresort","cardFontSizeSort","cardFontSizePostsort","currentPage","progressScore","progressScoreAdditional","progressScoreAdditionalSort","displayNextButton","minCardHeightSort","minCardHeightPostsort","setMinCardHeightPostsort","setMinCardHeightSort","setCardFontSizePostsort","setCardFontSizeSort","setCardFontSizePresort","setCurrentPage","setProgressScore","setProgressScoreAdditional","setProgressScoreAdditionalSort","setDisplayNextButton","createSortSlice","cardHeightSort","cardHeightPostsort","columnWidth","draggingOverColumnId","hasOverloadedColumn","isSortingCards","isSortingFinished","overloadedColumn","sortCompleted","sortFinished","sortFinishedModalHasBeenShown","sortCharacteristics","topMargin","triggerSortModal","triggerSortPreventNavModal","triggerSortOverloadedColumnModal","triggerSortingFinishedModal","sortGridResults","bypassSort","bypassPresort","setBypassPresort","setBypassSort","setDraggingOverColumnId","setOverloadedColumn","setTriggerSortingFinishedModal","setSortGridResults","setColumnWidth","setTopMargin","setIsSortingCards","setSortCompleted","setSortFinished","setSortFinishedModalHasBeenShown","setSortCharacteristics","setCardHeightSort","setCardHeightPostsort","setTriggerSortModal","setIsSortingFinished","setHasOverloadedColumn","setTriggerSortPreventNavModal","setTriggerSortOverloadedColumnModal","createPostsortSlice","resultsPostsort","statementCommentsObj","triggerPostsortModal","postsortCommentCheckObj","showPostsortCommentHighlighting","triggerPostsortPreventNavModal","postsortDualImageArray","setPostsortDualImageArray","setResultsPostsort","setStatementCommentsObj","setTriggerPostsortModal","setPostsortCommentCheckObj","setShowPostsortCommentHighlighting","setTriggerPostsortPreventNavModal","createSubmitSlice","disableRefreshCheck","displaySubmitFallback","displayGoodbyeMessage","triggerLocalSubmitSuccessModal","triggerTransmissionOKModal","triggerTransmissionFailModal","submitFailNumber","transmittingData","checkInternetConnection","setDisableRefreshCheck","setCheckInternetConnection","setTransmittingData","setTriggerTransmissionFailModal","setTriggerTransmissionOKModal","setTriggerLocalSubmitSuccessModal","setDisplaySubmitFallback","setDisplayGoodbyeMessage","createSurveySlice","triggerSurveyModal","resultsSurvey","triggerSurveyPreventNavModal","checkRequiredQuestionsComplete","answersStorage","setAnswersStorage","setTriggerSurveyModal","setResultsSurvey","setTriggerSurveyPreventNavModal","setCheckRequiredQuestionsComplete","useStore","getLangObj","state","getTriggerLandingModal","getSetTriggerLandingModal","LandingModal","loginHelpModalHead","ReactHtmlParser","landingHelpModalHead","loginHelpModalText","landingHelpModalText","className","open","onClose","center","ModalHeader","ModalContent","styled","div","LogInSubmitButton","props","loginSubmitButtonText","StyledSubmitButton","tabindex","type","onClick","button","theme","active","secondary","primary","focus","getConfigObj","getDisplayAccessCodeWarning","getDisplayPartIdWarning","getSetUserInputPartId","getSetUserInputAccessCode","getUserInputPartId","getUserInputAccessCode","getSetDisplayLandingContent","getSetPartId","getSetDisplayNextButton","getSetIsLoggedIn","getSetDisplayAccessCodeWarning","getSetDisplayPartIdWarning","LogInScreen","welcomeText","loginWelcomeText","loginHeaderText","loginPartIdText","partIdWarning","accessCodeWarning","accessInputText","useEffect","handleKeyUpStart","event","key","userPartIdOK","userAccessOK","projectAccessCode","accessCode","length","setTimeout","window","addEventListener","removeEventListener","Fragment","LogInWelcomeText","Container","StyledHr","StyledInputDiv","StyledInput","onChange","e","target","value","autoFocus","WarningText","hr","checkForIeBrowser","ua","navigator","userAgent","indexOf","detectIEEdge","ieWarningHeaderText","ieWarningText","parseParams","returnVal","params","rawParams1","split","getLocalParticipantName","getLocalUsercode","getSetLocalParticipantName","getSetLocalUsercode","getSetLocalPartIdWarning1","getSetLocalPartIdWarning2","getSetTriggerLocalSubmitSuccessModal","getSetResults","getResults","withRouter","localStartButtonText","checkForNextPageConditions","useCallback","value1","value2","history","to","location","match","staticContext","rest","push","localDeleteButtonText","LocalSortsDownloadButton","localDownloadButtonText","useLocalPersist","persist","localStoredQsorts","hasDownloadedQsorts","setHasDownloadedQsorts","setLocalStoredQsorts","name","getSetLocalDeleteModal","getLocalStoredQsorts","getSetLocalStoredQsorts","setDisplayLocalDeleteModal","dateTime","getTime","JSON","stringify","getTriggerLocalDeleteModal","LocalDeleteModal","localDeleteModalHead","localDeleteModalText","ButtonContainer","LocalConfirmDeleteButton","getTriggerSaveBeforeDeleteModal","getSetTriggerSaveBeforeDeleteModal","localSaveBeforeDeleteModalHeader","localSaveBeforeDeleteModalText","getDisplayLocalPartIdWarn1","getDisplayLocalPartIdWarn2","getSetHasDownloadedQsorts","getHasDownloadedQsorts","displayPartIdWarning1","displayPartIdWarning2","localHeader","partIdText","usercodeText","localParticipantsText","storedQsortsHeaderText","headerText","Object","keys","LocalSaveBeforeDeleteModal","LocalStartButton","Container2","StoredHeader","LocalDeleteButton","studyTitle","myDate","exportName","exportObj","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","getDataLoaded","getSetCurrentPage","getSetProgressScore","getSetUrlUsercode","getDisplayLandingContent","getMapObject","getSetPostsortCommentCheckObj","getSetCardFontSizeSort","getSetCardFontSizePostsort","getSetMinCardHeightSort","getSetMinCardHeightPostsort","LandingPage","headerBarColor","landingHead","welcomeTextHtml","removeItem","archive","parse","forEach","initialScreen","setDefaultFontSizePresort","defaultFontSizePresort","setDefaultFontSizeSort","defaultFontSizeSort","setDefaultFontSizePostsort","defaultFontSizePostsort","urlString","href","urlName","codeName","setDefaultFontSize","defaultFontSize","objectKeys","qSortPattern","mostPos","Math","max","mostNeg","min","MostPos2","MostNeg2","highVal","highVal2","lowVal","lowVal2","showSecondMostPos","showSecondPosColumn","showSecondMostNeg","showSecondNegColumn","i","j","k","l","displayLogInScreen","displayPartIdScreen","displayAccessCodeScreen","setupTarget","ContainerDiv","LocalStart","initialScreenSetting","isIeBrowser","SortTitleBar","background","InternetExplorerWarning","PartIdScreen","AccessCodeScreen","ContentDiv","fadeIn","keyframes","fadeOut","view","sanitizeString","shouldDoReplace","shouldDoReplace2","useLocalStorage","initialValue","useState","item","storedValue","setStoredValue","valueToStore","getPostsortCommentCheckObj","getShowPostsortCommentHighlighting","getPostsortDualImageArray","getSetPostsortDualImageArray","LowCards","asyncLocalStorage","openImageModal","setOpenImageModal","imageSource","setImageSource","openDualImageModal","setOpenDualImageModal","requiredCommentsObject","setRequiredCommentsObject","height","width","cardFontSize","disagreeObj","lowCards","vCols","columnDisplay","disagreeText","placeholder","map","index","content","statement","cardComment","useImages","element","src","alt","highlighting","postsortCommentsRequired","classNames","modal","imageFormat","overlay","style","marginLeft","CardTag","CardAndTextHolder","Card","detail","shiftKey","handleOpenImageModal","TagContainerDiv","CommentArea","bgColor","border","id","defaultValue","itemId","allCommentsObj","cards","targetCard","userEnteredText","el","comment","trim","textarea","LowCards2","lowCards2","columnDisplay2","HighCards","agreeObj","highCards","agreeText","cardColor","handleChange","HighCards2Display","highCards2","getTriggerPostsortModal","getSetTriggerPostsortModal","PostsortHelpModal","postsortHelpModalHead","postsortModalHead","postsortHelpModalText","postsortModalText","PromptUnload","alertUser","returnValue","when","message","getTriggerModalOpen","getSetTrigPostPrevNavModal","PostsortPreventNavModal","triggerModalOpen","modalHead","postsortPreventNavModalHead","modalText","postsortPreventNavModalText","getMapObj","getCardHeightPostsort","getCardFontSizePostsort","PostSort","ElementRef","useRef","cardFontSizePersist","cardHeightPersist","postsortInstructions","Elementcount","current","childNodes","setStateAsync","a","titleText","postsortHeader","agree","postsortAgreement","disagree","postsortDisagreement","postsortConvertObj","agreeColDisp1","pop","agreeColDisp2","disagreeColDisp1","shift","disagreeColDisp2","postsortAgreeColDisp1","postsortAgreeColDisp2","postsortDisagreeColDisp1","postsortDisagreeColDisp2","displaySecondColumn","CardsContainer","ref","PostsortInstructions","HighCards2","PresortModal","header","presortModalHead","presortModalText","getStatementsObj","getColumnStatements","getPreSortedStateNumInit","getSetPresortFinished","getSetTrigPresortFinModal","getSetProgressScoreAdditional","PresortDND","statementsName","presortStatements","btnDisagreement","presortDisagreement","btnAgreement","presortAgreement","btnNeutral","presortNeutral","onPageInstructions","presortOnPageInstructions","presortSortedStatementsNum","setPresortSortedStatementsNum","defaultFontColor","statementsLength","statementList","items","statements","neg","neutral","pos","columns","setColumns","pinkArraySortValue","greenArraySortValue","sortDirection","onDragEnd","result","destination","droppableId","source","statementsArray","destinationId","draggableId","divColor","pinkChecked","yellowChecked","greenChecked","sortValue","listIndex","sortedStatements","sourceColumn","destColumn","sourceItems","destItems","splice","removed","backgroundColor","greenCardColor","pinkCardColor","yellowCardColor","totalStatements","completedPercent","toFixed","sourceCol","copiedItems","handleKeyUp","reason","mode","combine","posText","neutralText","negText","statementNum","projectResultsObj","npos","posStateNums","nneu","neuStateNums","nneg","negStateNums","PresortGrid","ImageEnlargeInstructionsDiv","CompletionRatioDiv","ColumnNamesNeg","ColumnNamesNeu","ColumnNamesPos","entries","columnId","column","AllColWrapper","ThreeColCardWrapper","provided","snapshot","droppableProps","innerRef","isDraggingOver","padding","statementHtml","DroppableContainer","draggableProps","dragHandleProps","userSelect","margin","overflow","fontSize","filter","isDragging","color","getSetTrigPrePrevNavModal","PresortPreventNavModal","presortPreventNavModalHead","presortPreventNavModalText","getTriggerModal","getSetTriggerModal","PresortFinishedModal","triggerModal","setTriggerModal","presortFinishedModalHead","presortFinishedModalText","PresortIsComplete","mainText","stepCompleteMessage","titleBarText","PleaseLogInFirst","logInFirst","PresortDNDImages","imageWidth","enlargeText","presortImageSortInstructions","dualPhotoArray","setDualPhotoArray","imagesList","imagesArray","getCardFontSizePresort","getIsLoggedIn","getPresortNoReturn","getResetColumnStatements","PresortPage","cloneDeep","imageSort","PresortDndImages","checkForColumnOverload","columnLengthCheckArray","forcedSorts","qSortHeaderNumbers","tempArray","setState","numSortedStatements","reduce","acc","val","move","sourceListArray","destinationListArray","droppableSource","droppableDestination","allowUnforcedSorts","qSortHeaders","destClone","currentColumnLength","qSortPatternClone","overloadArrayCheck","isEqual","reorder","columnToBeReordered","startIndex","endIndex","list","getItemStyle","draggableStyle","cardWidth","cardHeight","fontColor","newCardColor","lineHeight","borderRadius","display","justifyContent","alignItems","zIndex","textAlign","getListStyle","columnColor","isUnderMaxCards","columnStatementsArray","maxCards","minWidth","marginTop","marginRight","minHeight","outline","outlineOffset","SortColumn","SortColumnsDiv","direction","currentSortValue","DroppableColDiv","StatementDiv","React","memo","getListStyleHori","horiCardMinHeight","flexDirection","flexWrap","paddingRight","overflowX","scrollBehavior","getItemStyleHori","newSortValue","isNaN","WebkitUserSelect","maxWidth","paddingLeft","touchAction","marginBottom","order","calculateDragResults","outcome","sortValue1","parseInt","testForCompleteArray","catchNan","resultsText","newValue","charAt","substring","sort","returnObj","getSetIsSortingCards","getSetSortCompleted","getSetProgScoreAddSort","getSortFinModalHasBeenShown","getSortGridResults","getSetIsSortingFinished","getSetTriggerSortingFinModal","getSetSortGridResults","SortGrid","columnColorsArray","columnHeadersColorsArray","presortColumnStatements","sortCharacterisiticsPrep","warnOverloadedColumn","highlightedColHeader","qSortHeaderNumber","columnHeadersColor","InnerList","manageDragResults","newCols","hasShownSortFinModal","totalStatements2","SortFooterDiv","CardSlider","HorizontalFeederDiv","getItemStyleImages","maxHeight","SortColumnImages","getListStyleImages","ImageDiv","getItemStyleHoriImages","calculateDragResultsImages","SortGridImages","numImages","FeederCard","getTriggerSortModal","getSetTriggerSortModal","SortHelpModal","helpModalHead","sortHelpModalHead","helpModalText","sortHelpModalText","getTriggerSortFinishedMod","getSetTrigSortFinishMod","SortingFinishedModal","sortingCompleteModalHead","sortingCompleteModalText","getSetTriggerSortPreventNavModal","sortPreventNavModalHead","sortPreventNavModalText","getSetTrigOverColModal","OverloadedColumnModal","sortOverloadedColumnModalHead","sortOverloadedColumnModalText","SortColGuides","ColorBarDivContainer","ColorBarDiv","uuid","getCardFontSizeSort","getTopMargin","getSetPresortNoReturn","getSetTopMargin","getCardHeightSort","Sort","innerHeight","clientWidth","dimensions","setDimensions","sortDisagreement","sortAgreement","condOfInst","qlength","visibleWidthAdjust","useMemo","debouncedHandleResize","fn","ms","timer","_","clearTimeout","apply","arguments","debounce","sortGridMarginTop","getElementById","clientHeight","PreventSortNavModal","SortTitleBarContainer","Disagree","CondOfInst","condOfInstFontSize","Agree","SortGridContainer","getSetTriggerTransOKMod","getSetDisplayGoodbyeMessage","SubmitSuccessModal","transferOkModalHeader","transferOkModalText","getSetTrigTransFailMod","SubmitFailureModal","transferFailModalHeader","transferFailModalText","getDisplaySubmitFallback","getSubmitFailNumber","getSetTrigTranFailMod","getSetTrigTransOKModal","getSetDisplaySubmitFallback","getTransmittingData","getSetTransmittingData","getCheckInternetConnection","getSetCheckInternetConnection","SubmitResultsButton","btnTransferText","btnTransfer","DisabledButton","TransmittingSpin","StyledButton","preventDefault","disabled","firebase","auth","signInAnonymously","rootRef","clear","linkToSecondProject","nextLinkAnchor","secondProjectUrl","toLowerCase","catch","errorCode","code","errorMessage","handleClick","WarningDiv","calculatePostsortResults","newObject","highCardNum","highCardVal","highCard2Num","highCard2Val","lowCardNum","lowCardVal","lowCard2Num","lowCard2Val","neuCardNum","hasOwnProperty","length2","ii","displayNeutralObjects","length5","jjj","length4","jj","length3","downloadButtonText","btnDownload","resultsWithId","finalResults","fileName","contentType","file","Blob","URL","createObjectURL","download","revokeObjectURL","SubmitFallback","fallbackMessage","StyledMessage","FallbackButtons","getSurveyQuestionObjArray","SubmitLocalResultsButton","localSaveDataButton","resultsProject","participantDesignation","question","getSetColumnStatements","newColumnStatements","returnToLocalPanelButtonText","reload","Promise","resolve","reject","getTrigLclSubmitSucMdl","LocalSubmitSuccessModal","localSubmitSuccessModalHeader","localSubmitSuccessModalText","apiString","api","rawData","store","SteinStore","formattedResultsObj","iterator","append","res","CopyToClipboardButton","copiedText","copyTextError","setResult","formattedResultsTxt","clipboard","writeText","copyToClipboard","text","MessageDiv","getSetDisableRefreshCheck","showEmailButtons","setShowEmailButtons","emailAddress","btnTransferEmail","defaultEmailClientFailText","defaultEmailClientFail","emailSubject","emailMessage1","EmailButtonDiv","clipboardEmail","clipboardResults","SpacerDiv","convertObjectToResults","resultsPresort","traceSorts","columnSortValues","sortArray","posStateNums2","neuStateNums2","negStateNums2","tempArray1","presortVal","tempObject","statementNum2","toString","b","presortTraceText","data","fetch","method","headers","qSortData","join","response","status","getDisplayGoodbyeMessage","getParticipantName","transmissionResults","SubmitPage","transferTextAbove","transferTextBelow","goodbyeMessage","linkedProjectFallbackMessage","linkedProjectBtnMessage","pageHeader","transferHead","resultsSortObj","showPostsort","showSurvey","numPos","numNeu","numNeg","newPostsortObject","keys2","resultsSort","property","GoodbyeDiv","targetNew","textDecoration","SaveLocalDataToLocalStorageButton","SubmitButtonGS","steinApiUrl","SubmitButtonEmail","SubmitButtonNetlify","SubmitButton","SurveyTextElement","questionId","opts","itemNum","check","labelText","label","noteText","note","displayNoteText","userText","setUserText","formatOptions","setFormatOptions","handleOnChange","valueLen","restricted","limited","limitLength","sanitizedText","required","userTextLen","TitleBar","NoteText","TextInput","SurveyTextAreaElement","TextAreaInput","SurveyRadioElement","optsArray","options","array","x","getOptionsArray","selected","setSelected","RadioInput","checked","setter","InputStyleDiv","LabelDiv","setYellow","RadioItems","radioList","RadioContainer","SurveyDropdownElement","tempObj","originalOptions","newArray","flatten","selected2","selectedLen","labelledBy","SurveyCheckboxElement","localStore","nameValue","Array","fill","checkedState","setCheckedState","position","updatedCheckedState","currentState","substr","flattenedCheckedState","countBy","htmlFor","SurveyRatings2Element","rows","from","scaleArray","scale","selectedRow","newCheckedState","row","arrayLen2","flattenedCheckedState2","objTestValue2","textString","arrayLen","itemText","ItemContainer","indexVal","OptionsText","RatingTitle","ScaleDiv","span","SurveyRatings5Element","checked5State","setChecked5State","newChecked5State","CircleDiv","SurveyRatings10Element","SurveyLikertElement","scaleList","RadioButtons","cols","SurveyInformationElement","infoText","getSetTrigSurvPrevNavModal","AnswerAllSurveyQuestionsModal","surveyPreventNavModalHead","surveyPreventNavModalText","getTriggerSurveyModal","getSetTriggerSurveyModal","SurveyHelpModal","surveyModalHead","surveyModalText","getRequiredAnswersObj","getSetRequiredAnswersObj","getCheckReqQuesComplete","SurveyPage","surveyQuestionObjects","surveyHeader","SurveyQuestions","object","SurveyRating2Element","SurveyRating5Element","SurveyRating10Element","NoQuestionsDiv","NonExistentPage","Component","processConfigXMLData","dataObject","surveyQuestionArray","elements","surveyData","attributes","questionType","bg","isRequired","maxlength","oldMaxLength","hasBeenAnswered","shuffleCards","processMapXMLData","vColsObj","colInfoArray","_attributes","labelInt","abs","colNum","colour","numCards","_text","splitArray","headerNumbers","processLanguageXMLData","language","processStatementsXMLData","shuffledCards","shuffle","LoadingScreen","TextDiv","getPresortFinished","getCurrentPage","getSetCheckReqQuesCompl","getIsSortingFinished","getHasOverloadedColumn","getSetTrigSortPrevNavModal","getSetTrigSortOverColMod","getSetShowPostsortCommentHighlighting","getSetTriggerPostsortPreventNavModal","goToNextPage","setTriggerSortOverloadedColModal","sortColumns","isPresortFinished","sortResults1","postsortCommentCardCount","required1","getObjectValues","required2","required3","required4","checkArray2","NextButton","getSetCardFontSizePresort","FooterFontSizer","fontSizeText","cardFontSizeSortPersist","cardFontSizePostsortPersist","cardFontSizePresortPersist","SpanDiv","SizeButton","padBottom","newSize","getSetCardHeightSort","getSetCardHeightPostsort","CardHeightSizer","cardHeightPersistSort","cardHeightPersistPostsort","cardHeightText","calcProgressScore","additionalProgress1","additionalProgressSort","additionalProgressState","additionalProgressStateSort","adjustmentValue1","adjustmentValue2","adjustmentValue3","additionalProgress","getSetTriggerPresortModal","getSetTriggerSubmitModal","setTriggerSubmitModal","HelpButton","buttonText","btnHelp","StyledHelpButton","getNextPage","getDisplayNextButton","getAdditionalProgress","getAdditionalProgressSort","StyledFooter","showBackButton","showAdjustmentContainer","showCardHeightSizer","displayHelpButton","showFooterFontSizer","backButtonText","postsortBackButtonText","logoHtml","nextButtonText","btnNext","projectName","today","totalProgressScore","CenterContent","AdjustmentsContainer","ProgressBarDiv","completed","labelColor","baseBgColor","nextPage","StyledFooterDiv","LogoContainer","CenterDiv","ButtonDiv","PostsortBackButton","footer","getSetConfigObj","getSetLangObj","getSetMapObj","getSetStatementsObj","getSetResetColumnStatements","getSetSurveyQuesObjArray","getSetDataLoaded","getDisableRefreshCheck","App","isLoading","setLoading","unloadCallback","axios","languageData","convert","xml2js","compact","ignoreComment","spaces","configData","info","imageFileType","mapData","statementsData","exact","path","component","SortPage","PostsortPage","NoPageFound","ReactDOM","render","StrictMode","Suspense","fallback"],"mappings":"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","file":"static/js/main.38513805.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline:0;\r\n        box-sizing:border-box;\r\n        font-family: 'Open Sans', sans-serif; \r\n    }\r\n    #root{\r\n        margin:0 auto;\r\n    }\r\n\r\n    /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n */\r\n\r\nhtml {\r\n  line-height: 1.15; /* 1 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n  overflow: -moz-scrollbars-vertical; \r\n  overflow-y: scroll;\r\n  -ms-touch-action: manipulation;\r\ntouch-action: manipulation;\r\n}\r\n\r\n\r\n\r\n/* Sections\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the margin in all browsers.\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n  height:calc(100vh-50px);\r\n  overscroll-behavior: none;\r\n  overflow: hidden;\r\n}\r\n\r\n/**\r\n * Render the main element consistently in IE.\r\n */\r\n\r\nmain {\r\n  display: block;\r\n}\r\n\r\n/**\r\n * Correct the font size and margin on 'h1' elements within 'section' and\r\n * 'article' contexts in Chrome, Firefox, and Safari.\r\n */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Add the correct box sizing in Firefox.\r\n * 2. Show the overflow in Edge and IE.\r\n */\r\n\r\nhr {\r\n  box-sizing: content-box; /* 1 */\r\n  height: 0; /* 1 */\r\n  overflow: visible; /* 2 */\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd 'em' font sizing in all browsers.\r\n */\r\n\r\npre {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background on active links in IE 10.\r\n */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n * 1. Remove the bottom border in Chrome 57-\r\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: none; /* 1 */\r\n  text-decoration: underline; /* 2 */\r\n  text-decoration: underline dotted; /* 2 */\r\n}\r\n\r\n/**\r\n * Add the correct font weight in Chrome, Edge, and Safari.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n  display: inline !important;\r\n}\r\n\r\n/**\r\n * 1. Correct the inheritance and scaling of font size in all browsers.\r\n * 2. Correct the odd 'em' font sizing in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: monospace, monospace; /* 1 */\r\n  font-size: 1em; /* 2 */\r\n}\r\n\r\n/**\r\n * Add the correct font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent 'sub' and 'sup' elements from affecting the line height in\r\n * all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the border on images inside links in IE 10.\r\n */\r\n\r\nimg {\r\n  border-style: none;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Change the font styles in all browsers.\r\n * 2. Remove the margin in Firefox and Safari.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-family: inherit; /* 1 */\r\n  font-size: 100%; /* 1 */\r\n  line-height: 1.15; /* 1 */\r\n  margin: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Show the overflow in IE.\r\n * 1. Show the overflow in Edge.\r\n */\r\n\r\nbutton,\r\ninput { /* 1 */\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n * 1. Remove the inheritance of text transform in Firefox.\r\n */\r\n\r\nbutton,\r\nselect { /* 1 */\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * Correct the inability to style clickable types in iOS and Safari.\r\n */\r\n\r\nbutton,\r\n[type=\"button\"],\r\n[type=\"reset\"],\r\n[type=\"submit\"] {\r\n  -webkit-appearance: button;\r\n}\r\n\r\n/**\r\n * Remove the inner border and padding in Firefox.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\n[type=\"button\"]::-moz-focus-inner,\r\n[type=\"reset\"]::-moz-focus-inner,\r\n[type=\"submit\"]::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Restore the focus styles unset by the previous rule.\r\n */\r\n\r\nbutton:-moz-focusring,\r\n[type=\"button\"]:-moz-focusring,\r\n[type=\"reset\"]:-moz-focusring,\r\n[type=\"submit\"]:-moz-focusring {\r\n  outline: 1px dotted ButtonText;\r\n}\r\n\r\n/**\r\n * Correct the padding in Firefox.\r\n */\r\n\r\nfieldset {\r\n  padding: 0.35em 0.75em 0.625em;\r\n}\r\n\r\n/**\r\n * 1. Correct the text wrapping in Edge and IE.\r\n * 2. Correct the color inheritance from 'fieldset' elements in IE.\r\n * 3. Remove the padding so developers are not caught out when they zero out\r\n *    'fieldset' elements in all browsers.\r\n */\r\n\r\nlegend {\r\n  box-sizing: border-box; /* 1 */\r\n  color: inherit; /* 2 */\r\n  display: table; /* 1 */\r\n  max-width: 100%; /* 1 */\r\n  padding: 0; /* 3 */\r\n  white-space: normal; /* 1 */\r\n}\r\n\r\n/**\r\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n */\r\n\r\nprogress {\r\n  vertical-align: baseline;\r\n}\r\n\r\n/**\r\n * Remove the default vertical scrollbar in IE 10+.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * 1. Add the correct box sizing in IE 10.\r\n * 2. Remove the padding in IE 10.\r\n */\r\n\r\n[type=\"checkbox\"],\r\n[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Correct the cursor style of increment and decrement buttons in Chrome.\r\n */\r\n\r\n[type=\"number\"]::-webkit-inner-spin-button,\r\n[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Correct the odd appearance in Chrome and Safari.\r\n * 2. Correct the outline style in Safari.\r\n */\r\n\r\n[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  outline-offset: -2px; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove the inner padding in Chrome and Safari on macOS.\r\n */\r\n\r\n[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * 1. Correct the inability to style clickable types in iOS and Safari.\r\n * 2. Change font properties to 'inherit' in Safari.\r\n */\r\n\r\n::-webkit-file-upload-button {\r\n  -webkit-appearance: button; /* 1 */\r\n  font: inherit; /* 2 */\r\n}\r\n\r\n/* Interactive\r\n   ========================================================================== */\r\n\r\n/*\r\n * Add the correct display in Edge, IE 10+, and Firefox.\r\n */\r\n\r\ndetails {\r\n  display: block;\r\n}\r\n\r\n/*\r\n * Add the correct display in all browsers.\r\n */\r\n\r\nsummary {\r\n  display: list-item;\r\n}\r\n\r\n/* Misc\r\n   ========================================================================== */\r\n\r\n/**\r\n * Add the correct display in IE 10+.\r\n */\r\n\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/**\r\n * Add the correct display in IE 10.\r\n */\r\n\r\n[hidden] {\r\n  display: none;\r\n}\r\n\r\n\r\n/***********************************\r\n  FOOTER CSS\r\n *******************************************************************************/\r\nfooter { \r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  background: #ececec; \r\n}\r\n\r\n/***********************************\r\n  PRESORT CSS\r\n *******************************************************************************/\r\n\r\n  /* to speed up react beautiful dnd */\r\n[data-rbd-draggable-id] { will-change: transform, opacity }\r\n/*\r\n[data-rbd-draggable-id] { left: auto !important; top: auto !important; }\r\n*/\r\n  .dragObject {\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    display: flex;\r\n  }\r\n\r\n\r\n\r\n  .react-responsive-modal-modal {\r\n  background: white;\r\n  max-width: 700px;\r\n  width: 100%;\r\n  padding: 15px;\r\n\r\n}\r\n\r\n  #cardsDiv{\r\n    grid-column-start: 3;\r\n    overflow: hidden;\r\n    align-self: end;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  #cards{\r\n    max-height: 215px;\r\n    min-height:150px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  #completionRatio {\r\n    grid-row-start: 1;\r\n    grid-column-start: 4;\r\n    text-align: center;\r\n    font-weight: bold;\r\n  }\r\n\r\n  #negDiv{\r\n    grid-row-start: 3;\r\n    grid-column-start: 2;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    min-height: 300px;\r\n    height: 58vh;\r\n    padding-top: 5px;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n    border: 1px solid #aeaeae;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 10px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n  }\r\n  \r\n\r\n  #neutralDiv{\r\n    grid-row-start: 3;\r\n    grid-column-start: 3;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    min-height: 300px;\r\n    height: 58vh;\r\n    padding-top: 5px;\r\n    border: 1px solid #aeaeae;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 10px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n\r\n  }\r\n\r\n  #posDiv{\r\n    grid-row-start: 3;\r\n    grid-column-start: 4;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    height: 58vh;\r\n    padding-top: 5px;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    border: 1px solid #aeaeae;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 10px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n  }\r\n\r\n  #pos{\r\n    min-height: 52vh;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  #neutral{\r\n    min-height: 52vh;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  #neg{\r\n    min-height: 52vh;\r\n    border-radius: 3px;\r\n  }\r\n}\r\n\r\n\r\n\r\n/***********************************\r\n  PRESORT CSS  ** IMAGES ** \r\n *******************************************************************************/\r\n\r\n\r\n\r\n#imageGrid .cardsDivImg{\r\n    grid-column-start: 3;\r\n    overflow: hidden;\r\n    padding-top: 10px;\r\n  }\r\n\r\n\r\n\r\n #imageGrid .cardsDivImg  img {\r\n    width: 100%;\r\n  }\r\n\r\n  \r\n  #imageGrid #cards{\r\n    min-height:34vh;\r\n   overflow: hidden;\r\n  }\r\n  \r\n\r\n  #imageGrid #completionRatioImg {\r\n    grid-row-start: 1;\r\n    grid-column-start: 4;\r\n    text-align: center;\r\n    font-weight: bold;\r\n  }\r\n\r\n  #imageEnlargeInstructionsDiv {\r\n    grid-row-start: 1;\r\n    grid-column-start: 2;\r\n    text-align: center;\r\n  }\r\n\r\n  #imageGrid .negDivImg{\r\n    grid-row-start: 3;\r\n    grid-column-start: 2;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    min-height: 300px;\r\n    height: 50vh;\r\n    padding-top: 5px;\r\n    border-top-left-radius: 3px;\r\n    overflow-x: hidden;\r\n    border-bottom-left-radius: 3px;\r\n    border: 1px solid #aeaeae;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 3px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n  }\r\n  \r\n\r\n  #imageGrid .neutralDivImg{\r\n    grid-row-start: 3;\r\n    grid-column-start: 3;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    min-height: 300px;\r\n    height: 50vh;\r\n    padding-top: 5px;\r\n    overflow-x: hidden;\r\n    border: 1px solid #aeaeae;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 3px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n\r\n  }\r\n\r\n  #imageGrid .posDivImg{\r\n    grid-row-start: 3;\r\n    grid-column-start: 4;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    height: 50vh;\r\n    padding-top: 5px;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    border: 1px solid #aeaeae;\r\n    overflow-x: hidden;\r\n\r\n    ::-webkit-scrollbar {\r\n      // Width of vertical scroll bar\r\n      width: 3px;\r\n      // Height of horizontal scroll bar\r\n      height: 10px;\r\n\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 8px;\r\n      background: gray;\r\n    }\r\n  }\r\n\r\n  .pos{\r\n    min-height: 25vh;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .neutral{\r\n    min-height: 38vh;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  .neg{\r\n    min-height: 38vh;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  #imageGrid .cards{\r\n    border-radius: 3px;\r\n    \r\n  }\r\n  \r\n  #imageGrid .cards > :not(:first-child) {\r\n    opacity: 0;\r\n    }\r\n  \r\n\r\n/***********************************\r\n  SORT CSS\r\n *******************************************************************************/\r\n.sortContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 5px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  min-height: 400px;\r\n  max-height: 800px;\r\n  overflow: auto;\r\n}\r\n\r\n.rootDiv {\r\n  background-color: white;\r\n  /* background-color: #6a9bc3; */\r\n  padding: 0px, 0px, 10px, 10px;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  -webkit-user-select: none;\r\n  -webkit-touch-callout: none;\r\n}\r\n\r\n.headersContainer {\r\n  display: flex;\r\n  position: fixed;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  height: 50px;\r\n  flex-direction: \"row-reverse\";\r\n}\r\n\r\n.greenSortCard {\r\n  display: flex;\r\n  justify-content: center;\r\n  background: lightgreen;\r\n  border: 2px solid gray;\r\n}\r\n\r\n.pinkSortCard {\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: rgba(255, 182, 193, 0.4);\r\n  border: 2px solid gray;\r\n}\r\n\r\n.yellowSortCard {\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: lightgray;\r\n  border: 2px solid gray;\r\n}\r\n\r\n/* \r\n.isPositiveStatement {\r\n  background-color: rgba(199, 246, 199, 0.6);\r\n} */\r\n\r\n.sortFooter {\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: #e4e4e4;\r\n  position: fixed;\r\n  left: 0px;\r\n  bottom: 50px !important;\r\n  width: 100%;\r\n  height: 150px;\r\n}\r\n\r\n.footerMessageBox {\r\n  flex-basis: 100px;\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 2px solid lightgray;\r\n  text-align: center;\r\n}\r\n\r\n.footerMessageBox p {\r\n  padding: 0px;\r\n  margin-top: 10px;\r\n  font-size: 10px;\r\n  color: #3273dc;\r\n}\r\n\r\n.sortEndButton {\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: 0;\r\n  margin: 10px;\r\n}\r\n\r\n.cardSlider {\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: right;\r\n}\r\n\r\n.placeholder {\r\n  width: 100px;\r\n  -webkit-animation: placeholderAnimate 3s ease-in;\r\n}\r\n\r\n/*\r\n\r\n#DroppableContainer > img {\r\n  width: 23.5vw !important;\r\n  height: auto;\r\n}\r\n\r\n.imageModal {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n\r\n  img {\r\n  width: 100%;\r\n  height: auto;\r\n  }\r\n}\r\n*/\r\n\r\n/***********************************\r\n  POST SORT \r\n *******************************************************************************/\r\n.dropdown-heading-value {\r\n  padding-top: 5px;\r\n  min-height: 30px;\r\n}\r\n\r\n/***********************************\r\n  IMAGE MODAL CSS\r\n *******************************************************************************/\r\n\r\n\r\n  .postSortImageModal169 {\r\n    background: black;\r\n    width: 70vw;\r\n    max-width: none;\r\n   }\r\n\r\n\r\n  .postSortImageModal43 {\r\n    background: black;\r\n    width: 30vw;\r\n    max-width: none;\r\n   }\r\n\r\n\r\n   .dualImageModal {\r\n    background: black;\r\n    width: 85vw;\r\n    max-width: none;\r\n   }\r\n\r\n   .dualImageOverlay {\r\n    background: black;\r\n    opacity: 0.85;\r\n  }\r\n\r\n  /***********************************\r\n  LANDING MODAL CSS\r\n *******************************************************************************/\r\n\r\n\r\n  /*\r\n  spinner css\r\n  */\r\n\r\n  #loading {\r\n  display: inline-block;\r\n  width: 100px;\r\n  margin-top: 40px;\r\n  height: 100px;\r\n  border: 10px solid lightgray;\r\n  border-radius: 50%;\r\n  border-top-color: #337ab7;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to { -webkit-transform: rotate(360deg); }\r\n}\r\n@-webkit-keyframes spin {\r\n  to { -webkit-transform: rotate(360deg); }\r\n}\r\n\r\n\r\n@keyframes opacity {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n\r\n@-webkit-keyframes slide {\r\n    100% { left: 0; }\r\n}\r\n\r\n@keyframes slide {\r\n    100% { left: 0; }\r\n}\r\n\r\n@-webkit-keyframes placeholderAnimate {\r\n  100% {\r\n    width: 100%;\r\n  }\r\n  0% {\r\n    width: 0px;\r\n  }\r\n}\r\n\r\n`;\r\n","const decodeHTML = (string) => {\r\n  try {\r\n    let shouldDoReplace = string.includes(\"{{{\");\r\n\r\n    if (shouldDoReplace === true) {\r\n      const replaceLeft = /{{{/gi;\r\n      const replaceRight = /}}}/gi;\r\n      const stringText2 = string.replace(replaceLeft, \"<\");\r\n      const stringText3 = stringText2.replace(replaceRight, \">\");\r\n      return stringText3;\r\n    } else {\r\n      return string;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"There was an error decoding into HTML\");\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default decodeHTML;\r\n","const getCumulativeDuration = (startTime, cumulativeDuration2) => {\r\n  const cumulativeDuration = +cumulativeDuration2;\r\n  // duration, location\r\n  let dateNow = Date.now();\r\n\r\n  let fullTime = dateNow - startTime + cumulativeDuration;\r\n\r\n  return fullTime;\r\n};\r\n\r\nexport default getCumulativeDuration;\r\n","const getCurrentDateTime = () => {\r\n  const currentDate = new Date();\r\n  const date = currentDate.getDate();\r\n  const month = currentDate.getMonth(); //Be careful! January is 0 not 1\r\n  const year = currentDate.getFullYear();\r\n  const hour = currentDate.getHours();\r\n  let minute = currentDate.getMinutes();\r\n  let seconds = currentDate.getSeconds();\r\n  if (seconds < 10) {\r\n    seconds = \"0\" + seconds;\r\n  }\r\n  if (minute < 10) {\r\n    minute = \"0\" + minute;\r\n  }\r\n\r\n  let dateString =\r\n    year +\r\n    \"/\" +\r\n    (month + 1) +\r\n    \"/\" +\r\n    date +\r\n    \"@\" +\r\n    hour +\r\n    \":\" +\r\n    minute +\r\n    \":\" +\r\n    seconds;\r\n  return dateString;\r\n};\r\n\r\nexport default getCurrentDateTime;\r\n","import getCumulativeDuration from \"./getCumulativeDuration\";\r\nimport millisecondsToTime from \"./millisecondsToTime\";\r\nimport getCurrentDateTime from \"./getCurrentDateTime\";\r\n\r\nconst calculateTimeOnPage = (startTime, prefix, prefix2) => {\r\n  const identifier = `cumulative${prefix}Duration`;\r\n  // const identifier2 = `set${prefix2}DurationCumulative`;\r\n  const identifier3 = `timeOn${prefix2}`;\r\n  const identifier4 = `lastAccess${prefix2}`;\r\n\r\n  // const durationCumulative = store.getState()[identifier];\r\n  let durationCumulative = localStorage.getItem(identifier) || 0;\r\n  if (durationCumulative === undefined) {\r\n    durationCumulative = 0;\r\n  }\r\n\r\n  const newDurationCumulative = getCumulativeDuration(\r\n    startTime,\r\n    +durationCumulative\r\n  );\r\n  // send to state\r\n  localStorage.setItem(identifier, newDurationCumulative);\r\n\r\n  // send last access time to state\r\n  const dateString = getCurrentDateTime();\r\n  localStorage.setItem(identifier4, dateString);\r\n\r\n  // send to memory\r\n  const formattedDuration = millisecondsToTime(newDurationCumulative);\r\n  localStorage.setItem(identifier3, formattedDuration);\r\n\r\n  return;\r\n};\r\n\r\nexport default calculateTimeOnPage;\r\n","export default function msToTime(s) {\r\n  // Pad to 2 or 3 digits, default is 2\r\n  var pad = (n, z = 2) => (\"00\" + n).slice(-z);\r\n  return (\r\n    pad((s / 3.6e6) | 0) +\r\n    \":\" +\r\n    pad(((s % 3.6e6) / 6e4) | 0) +\r\n    \":\" +\r\n    pad(((s % 6e4) / 1000) | 0) // +\r\n    // \".\" +\r\n    // pad(s % 1000, 3)\r\n  );\r\n}\r\n","const createConfigSettingsSlice = (set, get) => ({\r\n  configObj: {},\r\n  surveyQuestionObjArray: [],\r\n  requiredAnswersObj: {},\r\n\r\n  setConfigObj: (configObjInput) => {\r\n    set(() => ({ configObj: configObjInput }));\r\n  },\r\n  setSurveyQuestionObjArray: (configObjInput) => {\r\n    set(() => ({ surveyQuestionObjArray: configObjInput }));\r\n  },\r\n  setRequiredAnswersObj: (configObjInput) => {\r\n    set(() => ({ requiredAnswersObj: configObjInput }));\r\n  },\r\n});\r\n\r\nexport default createConfigSettingsSlice;\r\n","const createLanguageSettingsSlice = (set, get) => ({\r\n  langObj: {},\r\n\r\n  setLangObj: (langObjInput) => {\r\n    set(() => ({ langObj: langObjInput }));\r\n  },\r\n});\r\n\r\nexport default createLanguageSettingsSlice;\r\n","const createMapSettingsSlice = (set, get) => ({\r\n  // includes qSortPattern, qSortHeaderNumbers, etc...\r\n  mapObj: {},\r\n\r\n  setMapObj: (mapObjInput) => {\r\n    set(() => ({ mapObj: mapObjInput }));\r\n  },\r\n});\r\n\r\nexport default createMapSettingsSlice;\r\n","const createStatementsSettingsSlice = (set, get) => ({\r\n  statementsObj: {},\r\n  columnStatements: {},\r\n  resetColumnStatements: {},\r\n\r\n  setStatementsObj: (statementsObjInput) => {\r\n    set(() => ({ statementsObj: statementsObjInput }));\r\n  },\r\n  setColumnStatements: (columnStatementsInput) => {\r\n    set(() => ({ columnStatements: columnStatementsInput }));\r\n  },\r\n  setResetColumnStatements: (inputValue) => {\r\n    set(() => ({ resetColumnStatements: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createStatementsSettingsSlice;\r\n","import create from \"zustand\";\r\nimport createConfigSettingsSlice from \"./createConfigSettingsSlice\";\r\nimport createLanguageSettingsSlice from \"./createLanguageSettingsSlice\";\r\nimport createMapSettingsSlice from \"./createMapSettingsSlice\";\r\nimport createStatementsSettingsSlice from \"./createStatementsSettingsSlice\";\r\n\r\nconst useSettingsStore = create((set, get) => ({\r\n  ...createConfigSettingsSlice(set, get),\r\n  ...createLanguageSettingsSlice(set, get),\r\n  ...createMapSettingsSlice(set, get),\r\n  ...createStatementsSettingsSlice(set, get),\r\n}));\r\n\r\nexport default useSettingsStore;\r\n","const createLocalPanelSlice = (set, get) => ({\r\n  displayLocalPartIdWarning1: false,\r\n  displayLocalPartIdWarning2: false,\r\n  triggerLocalDeleteModal: false,\r\n  localParticipantName: \"\",\r\n\r\n  setLocalParticipantName: (inputValue) => {\r\n    set(() => ({ localParticipantName: inputValue }));\r\n  },\r\n  setLocalPartIdWarning1: (bool) => {\r\n    set(() => ({ displayLocalPartIdWarning1: bool }));\r\n  },\r\n  setLocalPartIdWarning2: (bool) => {\r\n    set(() => ({ displayLocalPartIdWarning2: bool }));\r\n  },\r\n  setLocalDeleteModal: (bool) => {\r\n    set(() => ({ triggerLocalDeleteModal: bool }));\r\n  },\r\n});\r\n\r\nexport default createLocalPanelSlice;\r\n","const createPresortSlice = (set, get) => ({\r\n  triggerPresortModal: true,\r\n  presortNoReturn: false,\r\n  presortPosCards: [],\r\n  presortNeuCards: [],\r\n  presortNegCards: [],\r\n  presortCards: [],\r\n  presortSortedStatementsNumInitial: 0,\r\n  presortFinished: false,\r\n  triggerPresortFinishedModal: false,\r\n  triggerPresortPreventNavModal: false,\r\n  results: {},\r\n\r\n  setPresortNoReturn: (inputValue) => {\r\n    set(() => ({ presortNoReturn: inputValue }));\r\n  },\r\n  setPresortPosCards: (inputValue) => {\r\n    set(() => ({ presortPosCards: inputValue }));\r\n  },\r\n  setPresortNeuCards: (inputValue) => {\r\n    set(() => ({ presortNeuCards: inputValue }));\r\n  },\r\n  setPresortNegCards: (inputValue) => {\r\n    set(() => ({ presortNegCards: inputValue }));\r\n  },\r\n  setPresortCards: (inputValue) => {\r\n    set(() => ({ presortCards: inputValue }));\r\n  },\r\n  setPresortSortedStatementsNumInitial: (inputValue) => {\r\n    set(() => ({ presortSortedStatementsNumInitial: inputValue }));\r\n  },\r\n  setPresortFinished: (bool) => {\r\n    set(() => ({ presortFinished: bool }));\r\n  },\r\n  setTriggerPresortFinishedModal: (bool) => {\r\n    set(() => ({ triggerPresortFinishedModal: bool }));\r\n  },\r\n  setTriggerPresortPreventNavModal: (bool) => {\r\n    set(() => ({ triggerPresortPreventNavModal: bool }));\r\n  },\r\n  setResults: (inputValue) => {\r\n    set(() => ({ results: inputValue }));\r\n  },\r\n  setTriggerPresortModal: (inputValue) => {\r\n    set(() => ({ triggerPresortModal: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createPresortSlice;\r\n","const createLandingSlice = (set, get) => ({\r\n  dataLoaded: false,\r\n  isLoggedIn: false,\r\n  triggerLandingModal: false,\r\n  usercode: \"\",\r\n  urlUsercode: \"not set\",\r\n  partId: \"not required\",\r\n  localUsercode: \"\",\r\n  displayAccessCodeWarning: false,\r\n  userInputAccessCode: \"\",\r\n  displayLandingContent: false,\r\n  triggerSaveBeforeDeleteModal: false,\r\n  userInputPartId: \"\",\r\n  displayPartIdWarning: false,\r\n\r\n  setUrlUsercode: (inputValue) => {\r\n    set(() => ({ urlUsercode: inputValue }));\r\n  },\r\n  setDisplayPartIdWarning: (inputValue) => {\r\n    set(() => ({ displayPartIdWarning: inputValue }));\r\n  },\r\n  setUserInputPartId: (inputValue) => {\r\n    set(() => ({ userInputPartId: inputValue }));\r\n  },\r\n  setTriggerSaveBeforeDeleteModal: (inputValue) => {\r\n    set(() => ({ triggerSaveBeforeDeleteModal: inputValue }));\r\n  },\r\n  setDataLoaded: (inputValue) => {\r\n    set(() => ({ dataLoaded: inputValue }));\r\n  },\r\n  setIsLoggedIn: (inputValue) => {\r\n    set(() => ({ isLoggedIn: inputValue }));\r\n  },\r\n  setTriggerLandingModal: (inputValue) => {\r\n    set(() => ({ triggerLandingModal: inputValue }));\r\n  },\r\n  setUsercode: (inputValue) => {\r\n    set(() => ({ usercode: inputValue }));\r\n  },\r\n  setPartId: (inputValue) => {\r\n    set(() => ({ partId: inputValue }));\r\n  },\r\n  setLocalUsercode: (input) => {\r\n    set(() => ({ localUsercode: input }));\r\n  },\r\n  setDisplayAccessCodeWarning: (input) => {\r\n    set(() => ({ displayAccessCodeWarning: input }));\r\n  },\r\n  setUserInputAccessCode: (input) => {\r\n    set(() => ({ userInputAccessCode: input }));\r\n  },\r\n  setDisplayLandingContent: (input) => {\r\n    set(() => ({ displayLandingContent: input }));\r\n  },\r\n});\r\n\r\nexport default createLandingSlice;\r\n","const createFooterSlice = (set, get) => ({\r\n  cardFontSizePresort: 5,\r\n  cardFontSizeSort: 5,\r\n  cardFontSizePostsort: 5,\r\n  currentPage: \"landing\",\r\n  progressScore: 10,\r\n  progressScoreAdditional: 0,\r\n  progressScoreAdditionalSort: 0,\r\n  displayNextButton: false,\r\n  minCardHeightSort: 40,\r\n  minCardHeightPostsort: 40,\r\n\r\n  setMinCardHeightPostsort: (inputValue) => {\r\n    set(() => ({ minCardHeightPostsort: inputValue }));\r\n  },\r\n  setMinCardHeightSort: (inputValue) => {\r\n    set(() => ({ minCardHeightSort: inputValue }));\r\n  },\r\n  setCardFontSizePostsort: (inputValue) => {\r\n    set(() => ({ cardFontSizePostsort: inputValue }));\r\n  },\r\n  setCardFontSizeSort: (inputValue) => {\r\n    set(() => ({ cardFontSizeSort: inputValue }));\r\n  },\r\n  setCardFontSizePresort: (inputValue) => {\r\n    set(() => ({ cardFontSizePresort: inputValue }));\r\n  },\r\n  setCurrentPage: (inputValue) => {\r\n    set(() => ({ currentPage: inputValue }));\r\n  },\r\n  setProgressScore: (inputValue) => {\r\n    set(() => ({ progressScore: inputValue }));\r\n  },\r\n  setProgressScoreAdditional: (inputValue) => {\r\n    set(() => ({ progressScoreAdditional: inputValue }));\r\n  },\r\n  setProgressScoreAdditionalSort: (inputValue) => {\r\n    set(() => ({ progressScoreAdditionalSort: inputValue }));\r\n  },\r\n  setDisplayNextButton: (inputValue) => {\r\n    set(() => ({ displayNextButton: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createFooterSlice;\r\n","const createSortSlice = (set, get) => ({\r\n  cardHeightSort: 120,\r\n  cardHeightPostsort: 120,\r\n  columnWidth: 100,\r\n  draggingOverColumnId: \"\",\r\n  hasOverloadedColumn: false,\r\n  isSortingCards: true,\r\n  isSortingFinished: false,\r\n  overloadedColumn: \"\",\r\n  sortCompleted: false,\r\n  sortFinished: false,\r\n  sortFinishedModalHasBeenShown: false,\r\n  sortCharacteristics: {},\r\n  topMargin: 50,\r\n  triggerSortModal: true,\r\n  triggerSortPreventNavModal: false,\r\n  triggerSortOverloadedColumnModal: false,\r\n  triggerSortingFinishedModal: false,\r\n  sortGridResults: {},\r\n  bypassSort: false,\r\n  bypassPresort: false,\r\n\r\n  setBypassPresort: (inputValue) => {\r\n    set(() => ({ bypassPresort: inputValue }));\r\n  },\r\n  setBypassSort: (inputValue) => {\r\n    set(() => ({ bypassSort: inputValue }));\r\n  },\r\n  setDraggingOverColumnId: (inputValue) => {\r\n    set(() => ({ draggingOverColumnId: inputValue }));\r\n  },\r\n  setOverloadedColumn: (inputValue) => {\r\n    set(() => ({ overloadedColumn: inputValue }));\r\n  },\r\n  setTriggerSortingFinishedModal: (inputValue) => {\r\n    set(() => ({ triggerSortingFinishedModal: inputValue }));\r\n  },\r\n  setSortGridResults: (inputValue) => {\r\n    set(() => ({ sortGridResults: inputValue }));\r\n  },\r\n  setColumnWidth: (inputValue) => {\r\n    set(() => ({ columnWidth: inputValue }));\r\n  },\r\n  setTopMargin: (inputValue) => {\r\n    set(() => ({ topMargin: inputValue }));\r\n  },\r\n  setIsSortingCards: (inputValue) => {\r\n    set(() => ({ isSortingCards: inputValue }));\r\n  },\r\n  setSortCompleted: (inputValue) => {\r\n    set(() => ({ sortCompleted: inputValue }));\r\n  },\r\n  setSortFinished: (inputValue) => {\r\n    set(() => ({ sortFinished: inputValue }));\r\n  },\r\n  setSortFinishedModalHasBeenShown: (inputValue) => {\r\n    set(() => ({ sortFinishedModalHasBeenShown: inputValue }));\r\n  },\r\n  setSortCharacteristics: (inputValue) => {\r\n    set(() => ({ sortCharacteristics: inputValue }));\r\n  },\r\n  setCardHeightSort: (inputValue) => {\r\n    set(() => ({ cardHeightSort: inputValue }));\r\n  },\r\n  setCardHeightPostsort: (inputValue) => {\r\n    set(() => ({ cardHeightPostsort: inputValue }));\r\n  },\r\n  setTriggerSortModal: (inputValue) => {\r\n    set(() => ({ triggerSortModal: inputValue }));\r\n  },\r\n  setIsSortingFinished: (inputValue) => {\r\n    set(() => ({ isSortingFinished: inputValue }));\r\n  },\r\n  setHasOverloadedColumn: (inputValue) => {\r\n    set(() => ({ hasOverloadedColumn: inputValue }));\r\n  },\r\n  setTriggerSortPreventNavModal: (inputValue) => {\r\n    set(() => ({ triggerSortPreventNavModal: inputValue }));\r\n  },\r\n  setTriggerSortOverloadedColumnModal: (inputValue) => {\r\n    set(() => ({ triggerSortOverloadedColumnModal: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createSortSlice;\r\n","const createPostsortSlice = (set, get) => ({\r\n  resultsPostsort: {},\r\n  statementCommentsObj: {},\r\n  triggerPostsortModal: true,\r\n  postsortCommentCheckObj: {},\r\n  showPostsortCommentHighlighting: false,\r\n  triggerPostsortPreventNavModal: false,\r\n  postsortDualImageArray: [],\r\n\r\n  setPostsortDualImageArray: (inputValue) => {\r\n    set(() => ({ postsortDualImageArray: inputValue }));\r\n  },\r\n  setResultsPostsort: (inputValue) => {\r\n    set(() => ({ resultsPostsort: inputValue }));\r\n  },\r\n  setStatementCommentsObj: (inputValue) => {\r\n    set(() => ({ statementCommentsObj: inputValue }));\r\n  },\r\n  setTriggerPostsortModal: (inputValue) => {\r\n    set(() => ({ triggerPostsortModal: inputValue }));\r\n  },\r\n  setPostsortCommentCheckObj: (inputValue) => {\r\n    set(() => ({ postsortCommentCheckObj: inputValue }));\r\n  },\r\n  setShowPostsortCommentHighlighting: (inputValue) => {\r\n    set(() => ({ showPostsortCommentHighlighting: inputValue }));\r\n  },\r\n  setTriggerPostsortPreventNavModal: (inputValue) => {\r\n    set(() => ({ triggerPostsortPreventNavModal: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createPostsortSlice;\r\n","const createSubmitSlice = (set, get) => ({\r\n  disableRefreshCheck: false,\r\n  displaySubmitFallback: false,\r\n  displayGoodbyeMessage: false,\r\n  triggerLocalSubmitSuccessModal: false,\r\n  triggerTransmissionOKModal: false,\r\n  triggerTransmissionFailModal: false,\r\n  submitFailNumber: 0,\r\n  transmittingData: false,\r\n  checkInternetConnection: false,\r\n\r\n  setDisableRefreshCheck: (input) => {\r\n    set(() => ({ disableRefreshCheck: input }));\r\n  },\r\n  setCheckInternetConnection: (input) => {\r\n    set(() => ({ checkInternetConnection: input }));\r\n  },\r\n  setTransmittingData: (input) => {\r\n    set(() => ({ transmittingData: input }));\r\n  },\r\n  setTriggerTransmissionFailModal: (input) => {\r\n    set(() => ({ triggerTransmissionFailModal: input }));\r\n  },\r\n  setTriggerTransmissionOKModal: (input) => {\r\n    set(() => ({ triggerTransmissionOKModal: input }));\r\n  },\r\n  setTriggerLocalSubmitSuccessModal: (input) => {\r\n    set(() => ({ triggerLocalSubmitSuccessModal: input }));\r\n  },\r\n  setDisplaySubmitFallback: (input) => {\r\n    set(() => ({ displaySubmitFallback: input }));\r\n  },\r\n  setDisplayGoodbyeMessage: (inputValue) => {\r\n    set(() => ({ displayGoodbyeMessage: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createSubmitSlice;\r\n","const createSurveySlice = (set, get) => ({\r\n  triggerSurveyModal: true,\r\n  resultsSurvey: {},\r\n  triggerSurveyPreventNavModal: false,\r\n  checkRequiredQuestionsComplete: false,\r\n  requiredAnswersObj: {},\r\n  answersStorage: {},\r\n\r\n  setAnswersStorage: (inputValue) => {\r\n    set(() => ({ answersStorage: inputValue }));\r\n  },\r\n  setTriggerSurveyModal: (inputValue) => {\r\n    set(() => ({ triggerSurveyModal: inputValue }));\r\n  },\r\n  setResultsSurvey: (inputValue) => {\r\n    set(() => ({ resultsSurvey: inputValue }));\r\n  },\r\n\r\n  setTriggerSurveyPreventNavModal: (inputValue) => {\r\n    set(() => ({ triggerSurveyPreventNavModal: inputValue }));\r\n  },\r\n  setCheckRequiredQuestionsComplete: (inputValue) => {\r\n    set(() => ({ checkRequiredQuestionsComplete: inputValue }));\r\n  },\r\n  setRequiredAnswersObj: (inputValue) => {\r\n    set(() => ({ requiredAnswersObj: inputValue }));\r\n  },\r\n});\r\n\r\nexport default createSurveySlice;\r\n","import create from \"zustand\";\r\nimport createLocalPanelSlice from \"./createLocalPanelSlice\";\r\nimport createPresortSlice from \"./createPresortSlice\";\r\nimport createLandingSlice from \"./createLandingSlice\";\r\nimport createFooterSlice from \"./createFooterSlice\";\r\nimport createSortSlice from \"./createSortSlice\";\r\nimport createPostsortSlice from \"./createPostsortSlice\";\r\nimport createSubmitSlice from \"./createSubmitSlice\";\r\nimport createSurveySlice from \"./createSurveySlice\";\r\n\r\nconst useStore = create((set, get) => ({\r\n  ...createFooterSlice(set, get),\r\n  ...createLocalPanelSlice(set, get),\r\n  ...createLandingSlice(set, get),\r\n  ...createPresortSlice(set, get),\r\n  ...createSortSlice(set, get),\r\n  ...createPostsortSlice(set, get),\r\n  ...createSubmitSlice(set, get),\r\n  ...createSurveySlice(set, get),\r\n}));\r\n\r\nexport default useStore;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerLandingModal = (state) => state.triggerLandingModal;\r\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\r\n\r\nconst LandingModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerLandingModal = useStore(getTriggerLandingModal);\r\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\r\n\r\n  const loginHelpModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.landingHelpModalHead)) || \"\";\r\n  const loginHelpModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.landingHelpModalText)) || \"\";\r\n\r\n  const onCloseModal = () => {\r\n    setTriggerLandingModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerLandingModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{loginHelpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LandingModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst LogInSubmitButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const loginSubmitButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginSubmitButtonText)) || \"\";\r\n\r\n  return (\r\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\r\n      {loginSubmitButtonText}\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\nexport default LogInSubmitButton;\r\n\r\nconst StyledSubmitButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  align-self: end;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LogInSubmitButton from \"./LogInSubmitButton\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\r\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\r\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\r\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\r\nconst getUserInputPartId = (state) => state.userInputPartId;\r\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\r\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\r\nconst getSetPartId = (state) => state.setPartId;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\r\nconst getSetDisplayAccessCodeWarning = (state) =>\r\n  state.setDisplayAccessCodeWarning;\r\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\r\n\r\nconst LogInScreen = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\r\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\r\n  const setUserInputPartId = useStore(getSetUserInputPartId);\r\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\r\n  const userInputPartId = useStore(getUserInputPartId);\r\n  const userInputAccessCode = useStore(getUserInputAccessCode);\r\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\r\n  const setPartId = useStore(getSetPartId);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\r\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\r\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\r\n\r\n  const welcomeText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginWelcomeText)) || \"\";\r\n  const loginHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginHeaderText)) || \"\";\r\n  const loginPartIdText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginPartIdText)) || \"\";\r\n  const partIdWarning =\r\n    ReactHtmlParser(decodeHTML(langObj.partIdWarning)) || \"\";\r\n  const accessCodeWarning =\r\n    ReactHtmlParser(decodeHTML(langObj.accessCodeWarning)) || \"\";\r\n  const accessInputText =\r\n    ReactHtmlParser(decodeHTML(langObj.accessInputText)) || \"\";\r\n\r\n  const handleInput = (e) => {\r\n    setUserInputPartId(e.target.value);\r\n  };\r\n\r\n  const handleAccess = (e) => {\r\n    setUserInputAccessCode(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyUpStart = (event) => {\r\n      if (event.key === \"Enter\") {\r\n        try {\r\n          let userPartIdOK = false;\r\n          let userAccessOK = false;\r\n          const projectAccessCode = configObj.accessCode;\r\n\r\n          // get user input\r\n          if (userInputPartId.length > 1) {\r\n            userPartIdOK = true;\r\n          } else {\r\n            userPartIdOK = false;\r\n          }\r\n          if (userInputAccessCode === projectAccessCode) {\r\n            userAccessOK = true;\r\n          }\r\n\r\n          // invalid input ==> display warnings\r\n          if (userAccessOK && userPartIdOK) {\r\n            setDisplayLandingContent(true);\r\n            setPartId(userInputPartId);\r\n            localStorage.setItem(\"partId\", userInputPartId);\r\n\r\n            setDisplayNextButton(true);\r\n            setIsLoggedIn(true);\r\n          } else if (userAccessOK === false) {\r\n            console.log(\"no access code\");\r\n            setDisplayAccessCodeWarning(true);\r\n            setDisplayNextButton(false);\r\n            setTimeout(() => {\r\n              setDisplayAccessCodeWarning(false);\r\n            }, 5000);\r\n          } else if (userPartIdOK === false) {\r\n            setDisplayPartIdWarning(true);\r\n            setDisplayNextButton(false);\r\n            console.log(\"no id\");\r\n\r\n            setTimeout(() => {\r\n              setDisplayPartIdWarning(false);\r\n            }, 5000);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }; // end keyup\r\n    window.addEventListener(\"keyup\", handleKeyUpStart);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\r\n  }, [\r\n    setDisplayLandingContent,\r\n    setDisplayNextButton,\r\n    setIsLoggedIn,\r\n    configObj.accessCode,\r\n    setDisplayAccessCodeWarning,\r\n    userInputAccessCode,\r\n    setPartId,\r\n    setDisplayPartIdWarning,\r\n    userInputPartId,\r\n  ]);\r\n\r\n  const handleSubmit = () => {\r\n    try {\r\n      let userPartIdOK = false;\r\n      let userAccessOK = false;\r\n      const projectAccessCode = configObj.accessCode;\r\n\r\n      // get user input\r\n      if (userInputPartId.length > 1) {\r\n        userPartIdOK = true;\r\n      } else {\r\n        userPartIdOK = false;\r\n      }\r\n      if (userInputAccessCode === projectAccessCode) {\r\n        userAccessOK = true;\r\n      }\r\n\r\n      // invalid input ==> display warnings\r\n      if (userAccessOK && userPartIdOK) {\r\n        setDisplayLandingContent(true);\r\n        setPartId(userInputPartId);\r\n        localStorage.setItem(\"partId\", userInputPartId);\r\n\r\n        setDisplayNextButton(true);\r\n        setIsLoggedIn(true);\r\n      } else if (userAccessOK === false) {\r\n        console.log(\"no access code\");\r\n        setDisplayAccessCodeWarning(true);\r\n        setDisplayNextButton(false);\r\n        setTimeout(() => {\r\n          setDisplayAccessCodeWarning(false);\r\n        }, 5000);\r\n      } else if (userPartIdOK === false) {\r\n        setDisplayPartIdWarning(true);\r\n        setDisplayNextButton(false);\r\n        console.log(\"no id\");\r\n\r\n        setTimeout(() => {\r\n          setDisplayPartIdWarning(false);\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <LogInWelcomeText>{welcomeText}</LogInWelcomeText>\r\n      <Container>\r\n        <div>\r\n          <h2>{loginHeaderText}</h2>\r\n          <StyledHr />\r\n        </div>\r\n        <div>\r\n          <h3>{loginPartIdText}</h3>\r\n          <StyledInputDiv>\r\n            <StyledInput onChange={handleInput} type=\"text\" autoFocus />\r\n            {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\r\n          </StyledInputDiv>\r\n        </div>\r\n        <div>\r\n          <h3>{accessInputText}</h3>\r\n          <StyledInputDiv>\r\n            <StyledInput onChange={handleAccess} type=\"text\" />\r\n            {displayAccessCodeWarning && (\r\n              <WarningText>{accessCodeWarning}</WarningText>\r\n            )}\r\n          </StyledInputDiv>\r\n        </div>\r\n        <LogInSubmitButton onClick={handleSubmit} />\r\n      </Container>\r\n      <WarningText>{}</WarningText>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 23% 28% 28% 1fr;\r\n  margin-top: 50px;\r\n  width: 800px;\r\n  padding: 20px;\r\n  min-height: 400px;\r\n  margin-bottom: 200px;\r\n  border: 2px solid black;\r\n  justify-self: center;\r\n  background-color: whitesmoke;\r\n`;\r\n\r\nconst LogInWelcomeText = styled.div`\r\n  width: 900px;\r\n  font-size: 25px;\r\n  line-height: 1.3em;\r\n  padding-left: 35px;\r\n`;\r\n\r\nconst StyledHr = styled.hr`\r\n  margin-top: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  margin-top: 5px;\r\n  width: 400px;\r\n  height: 30px;\r\n  font-size: 1.4em;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledInputDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst WarningText = styled.div`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 1.4em;\r\n  margin-left: 10px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LogInSubmitButton from \"./LogInSubmitButton\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\r\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\r\nconst getUserInputPartId = (state) => state.userInputPartId;\r\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\r\nconst getSetPartId = (state) => state.setPartId;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\r\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\r\n\r\nconst LogInScreen = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\r\n  const setUserInputPartId = useStore(getSetUserInputPartId);\r\n  const userInputPartId = useStore(getUserInputPartId);\r\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\r\n  const setPartId = useStore(getSetPartId);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\r\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\r\n\r\n  const loginHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginHeaderText)) || \"\";\r\n  const loginPartIdText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginPartIdText)) || \"\";\r\n  const partIdWarning =\r\n    ReactHtmlParser(decodeHTML(langObj.partIdWarning)) || \"\";\r\n\r\n  const handleInput = (e) => {\r\n    setUserInputPartId(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyUpStart = (event) => {\r\n      if (event.key === \"Enter\") {\r\n        console.log(\"Enter\");\r\n        let userPartIdOK = false;\r\n\r\n        // get user input\r\n        if (userInputPartId.length > 0) {\r\n          userPartIdOK = true;\r\n          setDisplayLandingContent(true);\r\n          setPartId(userInputPartId);\r\n          localStorage.setItem(\"partId\", userInputPartId);\r\n          setDisplayNextButton(true);\r\n          setIsLoggedIn(true);\r\n        }\r\n\r\n        // invalid input ==> display warnings\r\n        if (userPartIdOK === false) {\r\n          setDisplayPartIdWarning(true);\r\n          setTimeout(() => {\r\n            setDisplayPartIdWarning(false);\r\n          }, 5000);\r\n        }\r\n      }\r\n    }; // end keyup\r\n\r\n    window.addEventListener(\"keyup\", handleKeyUpStart);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\r\n  }, [\r\n    setDisplayLandingContent,\r\n    setPartId,\r\n    setDisplayNextButton,\r\n    setIsLoggedIn,\r\n    userInputPartId,\r\n    setDisplayPartIdWarning,\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    let userPartIdOK = false;\r\n\r\n    // get user input\r\n    if (userInputPartId.length > 0) {\r\n      userPartIdOK = true;\r\n      setDisplayLandingContent(true);\r\n      setPartId(userInputPartId);\r\n      localStorage.setItem(\"partId\", userInputPartId);\r\n      setDisplayNextButton(true);\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    // invalid input ==> display warnings\r\n    if (userPartIdOK === false) {\r\n      setDisplayPartIdWarning(true);\r\n      setTimeout(() => {\r\n        setDisplayPartIdWarning(false);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h2>{loginHeaderText}</h2>\r\n        <StyledHr />\r\n      </div>\r\n      <div>\r\n        <h3>{loginPartIdText}</h3>\r\n        <StyledInputDiv>\r\n          <StyledInput onChange={handleInput} type=\"text\" autoFocus />\r\n          {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\r\n        </StyledInputDiv>\r\n      </div>\r\n\r\n      <LogInSubmitButton onClick={handleSubmit} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  margin-top: 50px;\r\n  width: 50vw;\r\n  padding: 1.5vw;\r\n  min-height: 300px;\r\n  margin-bottom: 200px;\r\n  border: 2px solid black;\r\n  justify-self: center;\r\n  background-color: whitesmoke;\r\n`;\r\n\r\nconst StyledHr = styled.hr`\r\n  margin-top: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  margin-top: 5px;\r\n  width: 400px;\r\n  height: 30px;\r\n  font-size: 1.4em;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledInputDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst WarningText = styled.div`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 1.4em;\r\n  margin-left: 10px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LogInSubmitButton from \"./LogInSubmitButton\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\r\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\r\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\r\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\r\nconst getSetDisplayAccessCodeWarning = (state) =>\r\n  state.setDisplayAccessCodeWarning;\r\n\r\nconst LogInScreen = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\r\n  const userInputAccessCode = useStore(getUserInputAccessCode);\r\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\r\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\r\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\r\n\r\n  // Language\r\n  const loginHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.loginHeaderText)) || \"\";\r\n  const accessInputText =\r\n    ReactHtmlParser(decodeHTML(langObj.accessInputText)) || \"\";\r\n  const accessCodeWarning =\r\n    ReactHtmlParser(decodeHTML(langObj.accessCodeWarning)) || \"\";\r\n\r\n  const handleAccess = (e) => {\r\n    setUserInputAccessCode(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyUpStart = (event) => {\r\n      if (event.key === \"Enter\") {\r\n        let userAccessOK = false;\r\n        const projectAccessCode = configObj.accessCode;\r\n\r\n        // get user input\r\n\r\n        if (userInputAccessCode === projectAccessCode) {\r\n          userAccessOK = true;\r\n          setDisplayLandingContent(true);\r\n          setDisplayNextButton(true);\r\n          setIsLoggedIn(true);\r\n        }\r\n\r\n        // invalid input ==> display warnings\r\n        if (userAccessOK === false) {\r\n          setDisplayAccessCodeWarning(true);\r\n          setTimeout(() => {\r\n            setDisplayAccessCodeWarning(false);\r\n          }, 3000);\r\n        }\r\n      }\r\n    }; // end keyup\r\n    window.addEventListener(\"keyup\", handleKeyUpStart);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\r\n  }, [\r\n    setDisplayLandingContent,\r\n    setDisplayNextButton,\r\n    setIsLoggedIn,\r\n    configObj.accessCode,\r\n    setDisplayAccessCodeWarning,\r\n    userInputAccessCode,\r\n  ]);\r\n\r\n  const handleSubmit = (e) => {\r\n    let userAccessOK = false;\r\n    const projectAccessCode = configObj.accessCode;\r\n\r\n    // get user input\r\n\r\n    if (userInputAccessCode === projectAccessCode) {\r\n      userAccessOK = true;\r\n      setDisplayLandingContent(true);\r\n      setDisplayNextButton(true);\r\n      setIsLoggedIn(true);\r\n    }\r\n\r\n    // invalid input ==> display warnings\r\n    if (userAccessOK === false) {\r\n      setDisplayAccessCodeWarning(true);\r\n      setTimeout(() => {\r\n        setDisplayAccessCodeWarning(false);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h2>{loginHeaderText}</h2>\r\n        <StyledHr />\r\n      </div>\r\n      <div>\r\n        <h3>{accessInputText}</h3>\r\n        <StyledInputDiv>\r\n          <StyledInput onChange={handleAccess} type=\"text\" autoFocus />\r\n          {displayAccessCodeWarning && (\r\n            <WarningText>{accessCodeWarning}</WarningText>\r\n          )}\r\n        </StyledInputDiv>\r\n      </div>\r\n\r\n      <LogInSubmitButton onClick={handleSubmit} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  margin-top: 50px;\r\n  width: 50vw;\r\n  padding: 1.5vw;\r\n  min-height: 300px;\r\n  margin-bottom: 200px;\r\n  border: 2px solid black;\r\n  justify-self: center;\r\n  background-color: whitesmoke;\r\n`;\r\n\r\nconst StyledHr = styled.hr`\r\n  margin-top: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  margin-top: 5px;\r\n  width: 400px;\r\n  height: 30px;\r\n  font-size: 1.4em;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledInputDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst WarningText = styled.div`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 1.4em;\r\n  margin-left: 10px;\r\n`;\r\n","/**\r\n * detect IEEdge\r\n * returns version of IE/Edge or false, if browser is not a Microsoft browser\r\n * stackoverflow\r\n * https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie\r\n */\r\nfunction detectIEEdge() {\r\n  var ua = window.navigator.userAgent;\r\n\r\n  var msie = ua.indexOf(\"MSIE \");\r\n  if (msie > 0) {\r\n    // IE 10 or older => return version number\r\n    // return parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie)), 10);\r\n    return true;\r\n  }\r\n\r\n  var trident = ua.indexOf(\"Trident/\");\r\n  if (trident > 0) {\r\n    // IE 11 => return version number\r\n    // var rv = ua.indexOf(\"rv:\");\r\n    // return parseInt(ua.substring(rv + 3, ua.indexOf(\".\", rv)), 10);\r\n    return true;\r\n  }\r\n\r\n  // other browser\r\n  return false;\r\n}\r\n\r\nconst checkForIeBrowser = () => {\r\n  const isIE = detectIEEdge();\r\n  return isIE;\r\n};\r\n\r\nexport default checkForIeBrowser;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst LogInScreen = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const ieWarningHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.ieWarningHeaderText)) || \"\";\r\n  const ieWarningText =\r\n    ReactHtmlParser(decodeHTML(langObj.ieWarningText)) || \"\";\r\n\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <center>\r\n          <h2>{ieWarningHeaderText}</h2>\r\n          <StyledHr />\r\n        </center>\r\n      </div>\r\n      <div>\r\n        <StyledInputDiv>\r\n          <h3>{ieWarningText}</h3>\r\n        </StyledInputDiv>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\nconst Container = styled.div`\r\n  //  display: grid;\r\n  //   grid-template-rows: 1fr 1fr 1fr;\r\n  margin-top: 50px;\r\n  width: 50vw;\r\n  padding: 2vw;\r\n  min-height: 250px;\r\n  margin-bottom: 20px;\r\n  border: 2px solid black;\r\n  justify-self: center;\r\n  background-color: lightgoldenrodyellow;\r\n  border-radius: 50px;\r\n`;\r\n\r\nconst StyledHr = styled.hr`\r\n  margin-top: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledInputDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 50px;\r\n`;\r\n","const parseParams = (params = \"\") => {\r\n  let returnVal;\r\n  if (params.includes(\"?\")) {\r\n    const rawParams1 = params.split(\"=\");\r\n    return rawParams1[1];\r\n  }\r\n  return returnVal;\r\n};\r\n\r\nexport default parseParams;\r\n","import styled from \"styled-components\";\r\nimport React, { useEffect, useCallback } from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport { withRouter } from \"react-router\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getLocalParticipantName = (state) => state.localParticipantName;\r\nconst getLocalUsercode = (state) => state.localUsercode;\r\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\r\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\r\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\r\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\r\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\r\n  state.setTriggerLocalSubmitSuccessModal;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getResults = (state) => state.results;\r\n\r\nconst LogInSubmitButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const localParticipantName = useStore(getLocalParticipantName);\r\n  const localUsercode = useStore(getLocalUsercode);\r\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\r\n  const setLocalUsercode = useStore(getSetLocalUsercode);\r\n  let setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\r\n  let setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\r\n  const setTriggerLocalSubmitSuccessModal = useStore(\r\n    getSetTriggerLocalSubmitSuccessModal\r\n  );\r\n  const setResults = useStore(getSetResults);\r\n  const results = useStore(getResults);\r\n\r\n  const localStartButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.localStartButtonText)) || \"\";\r\n\r\n  const checkForNextPageConditions = useCallback(() => {\r\n    let value0 = false;\r\n    let value1;\r\n    let value2;\r\n\r\n    if (localParticipantName.length === 0) {\r\n      value1 = false;\r\n      setLocalPartIdWarning1(true);\r\n    } else {\r\n      setLocalPartIdWarning1(false);\r\n      value1 = true;\r\n      localStorage.setItem(\"localParticipantName\", localParticipantName);\r\n    }\r\n\r\n    if (localUsercode.length === 0) {\r\n      value2 = false;\r\n      setLocalPartIdWarning2(true);\r\n    } else {\r\n      setLocalPartIdWarning2(false);\r\n      value2 = true;\r\n      localStorage.setItem(\"localUsercode\", localUsercode);\r\n    }\r\n\r\n    if (value1 === true && value2 === true) {\r\n      value0 = true;\r\n    } else {\r\n      value0 = false;\r\n    }\r\n\r\n    return value0;\r\n  }, [\r\n    setLocalPartIdWarning1,\r\n    setLocalPartIdWarning2,\r\n    localParticipantName,\r\n    localUsercode,\r\n  ]);\r\n\r\n  const {\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const handleKeyUpStart = (event) => {\r\n      // reset time stamp\r\n      setResults(results);\r\n\r\n      if (event.key === \"Enter\") {\r\n        let isInputComplete = checkForNextPageConditions();\r\n        if (isInputComplete) {\r\n          history.push(`/presort`);\r\n        }\r\n      }\r\n    }; // end keyup\r\n\r\n    window.addEventListener(\"keyup\", handleKeyUpStart);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\r\n  }, [history, checkForNextPageConditions, results, setResults]);\r\n\r\n  useEffect(() => {\r\n    setLocalParticipantName(\"\");\r\n    setLocalUsercode(\"\");\r\n    setLocalPartIdWarning1(false);\r\n    setLocalPartIdWarning2(false);\r\n  }, [\r\n    setLocalPartIdWarning1,\r\n    setLocalPartIdWarning2,\r\n    setLocalParticipantName,\r\n    setLocalUsercode,\r\n  ]);\r\n\r\n  return (\r\n    <StyledSubmitButton\r\n      {...rest} // `children` is just another prop!\r\n      onClick={(event) => {\r\n        onClick && onClick(event);\r\n        let isInputComplete = checkForNextPageConditions();\r\n        if (isInputComplete) {\r\n          history.push(to);\r\n        }\r\n        setTriggerLocalSubmitSuccessModal(false);\r\n      }}\r\n      tabindex=\"3\"\r\n    >\r\n      {localStartButtonText}\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\nexport default withRouter(LogInSubmitButton);\r\n\r\nconst StyledSubmitButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  align-self: end;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst LogInSubmitButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const localDeleteButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.localDeleteButtonText)) || \"\";\r\n\r\n  return (\r\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\r\n      {localDeleteButtonText}\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\nexport default LogInSubmitButton;\r\n\r\nconst StyledSubmitButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  align-self: end;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst LocalSortsDownloadButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const localDownloadButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.localDownloadButtonText)) || \"\";\r\n\r\n  return (\r\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\r\n      {localDownloadButtonText}\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\nexport default LocalSortsDownloadButton;\r\n\r\nconst StyledSubmitButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  align-self: end;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import create from \"zustand\";\r\nimport { persist } from \"zustand/middleware\";\r\n\r\nconst useLocalPersist = create(\r\n  persist(\r\n    (set, get) => ({\r\n      localStoredQsorts: {},\r\n      hasDownloadedQsorts: false,\r\n\r\n      setHasDownloadedQsorts: (inputValue) => {\r\n        set(() => ({ hasDownloadedQsorts: inputValue }));\r\n      },\r\n      setLocalStoredQsorts: (inputValue) => {\r\n        set(() => ({ localStoredQsorts: inputValue }));\r\n      },\r\n    }),\r\n    {\r\n      name: \"sorts-storage\", // unique name\r\n    }\r\n  )\r\n);\r\n\r\nexport default useLocalPersist;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\r\n\r\n// const getSetterLocalQsorts = (state) => state.setLocalStoredQsorts;\r\nconst getLangObj = (state) => state.langObj;\r\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\r\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\r\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\r\n\r\nconst LogInSubmitButton = (props) => {\r\n  // State\r\n  const setDisplayLocalDeleteModal = useStore(getSetLocalDeleteModal);\r\n  // const setLocalStoredQsorts = useStore(getSetterLocalQsorts);\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\r\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\r\n\r\n  const localDeleteButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.localDeleteButtonText)) || \"\";\r\n\r\n  const clearLocalStorage = () => {\r\n    console.log(\"deleted localStorage\");\r\n    // localStorage.setItem(\"localStoredQsorts\", JSON.stringify({}));\r\n    // setLocalStoredQsorts({});\r\n    const dateTime = `${new Date().getTime()}`;\r\n    localStorage.setItem(dateTime, JSON.stringify(localStoredQsorts));\r\n    setLocalStoredQsorts({});\r\n    setDisplayLocalDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={clearLocalStorage}>\r\n      {localDeleteButtonText}\r\n    </StyledSubmitButton>\r\n  );\r\n};\r\nexport default LogInSubmitButton;\r\n\r\nconst StyledSubmitButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  align-self: end;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: red;\r\n\r\n  &:hover {\r\n  }\r\n\r\n  &:focus {\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport LocalConfirmDeleteButton from \"./LocalConfirmDeleteButton\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerLocalDeleteModal = (state) => state.triggerLocalDeleteModal;\r\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\r\n\r\nconst LocalDeleteModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerLocalDeleteModal = useStore(getTriggerLocalDeleteModal);\r\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\r\n\r\n  const localDeleteModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.localDeleteModalHead)) || \"\";\r\n  const localDeleteModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.localDeleteModalText)) || \"\";\r\n\r\n  const onCloseModal = () => {\r\n    setLocalDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerLocalDeleteModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{localDeleteModalText}</ModalContent>\r\n      <ButtonContainer>\r\n        <LocalConfirmDeleteButton />\r\n      </ButtonContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LocalDeleteModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerSaveBeforeDeleteModal = (state) =>\r\n  state.triggerSaveBeforeDeleteModal;\r\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\r\n  state.setTriggerSaveBeforeDeleteModal;\r\n\r\nconst LocalDeleteModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerSaveBeforeDeleteModal = useStore(\r\n    getTriggerSaveBeforeDeleteModal\r\n  );\r\n  const setTriggerSaveBeforeDeleteModal = useStore(\r\n    getSetTriggerSaveBeforeDeleteModal\r\n  );\r\n\r\n  const localDeleteModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.localSaveBeforeDeleteModalHeader)) || \"\";\r\n  const localDeleteModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.localSaveBeforeDeleteModalText)) || \"\";\r\n\r\n  const onCloseModal = () => {\r\n    setTriggerSaveBeforeDeleteModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerSaveBeforeDeleteModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{localDeleteModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LocalDeleteModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LocalStartButton from \"./LocalStartButton\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport LocalDeleteButton from \"./LocalDeleteButton\";\r\nimport LocalSortsDownloadButton from \"./LocalSortsDownloadButton\";\r\nimport LocalDeleteModal from \"./LocalDeleteModal\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\r\nimport LocalSaveBeforeDeleteModal from \"./LocalSaveBeforeDeleteModal\";\r\n\r\nfunction downloadObjectAsJson(exportObj, exportName) {\r\n  console.log(\"download called\");\r\n  var dataStr =\r\n    \"data:text/json;charset=utf-8,\" +\r\n    encodeURIComponent(JSON.stringify(exportObj));\r\n  var downloadAnchorNode = document.createElement(\"a\");\r\n  downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n  downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n  document.body.appendChild(downloadAnchorNode); // required for firefox\r\n  downloadAnchorNode.click();\r\n  downloadAnchorNode.remove();\r\n}\r\n\r\nconst getDisplayLocalPartIdWarn1 = (state) => state.displayLocalPartIdWarning1;\r\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\r\nconst getDisplayLocalPartIdWarn2 = (state) => state.displayLocalPartIdWarning2;\r\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\r\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\r\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\r\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\r\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\r\nconst getHasDownloadedQsorts = (state) => state.hasDownloadedQsorts;\r\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\r\n  state.setTriggerSaveBeforeDeleteModal;\r\n\r\nconst LogInScreen = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const displayPartIdWarning1 = useStore(getDisplayLocalPartIdWarn1);\r\n  const setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\r\n  const displayPartIdWarning2 = useStore(getDisplayLocalPartIdWarn2);\r\n  const setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\r\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\r\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\r\n  const setLocalUsercode = useStore(getSetLocalUsercode);\r\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\r\n  const hasDownloadedQsorts = useLocalPersist(getHasDownloadedQsorts);\r\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\r\n  const setTriggerSaveBeforeDeleteModal = useStore(\r\n    getSetTriggerSaveBeforeDeleteModal\r\n  );\r\n\r\n  const loginHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.localHeader)) || \"\";\r\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.partIdText)) || \"\";\r\n  const partIdWarning =\r\n    ReactHtmlParser(decodeHTML(langObj.partIdWarning)) || \"\";\r\n  const usercodeText = ReactHtmlParser(decodeHTML(langObj.usercodeText)) || \"\";\r\n  const localParticipantsText =\r\n    ReactHtmlParser(decodeHTML(langObj.localParticipantsText)) || \"\";\r\n  const storedQsortsHeaderText =\r\n    ReactHtmlParser(decodeHTML(langObj.storedQsortsHeaderText)) || \"\";\r\n\r\n  const headerText = `${storedQsortsHeaderText}: ${\r\n    Object.keys(localStoredQsorts).length\r\n  } ${localParticipantsText}`;\r\n\r\n  const handleInput = (e) => {\r\n    setLocalParticipantName(e.target.value);\r\n    setLocalPartIdWarning1(false);\r\n  };\r\n\r\n  const handleUsercodeInput = (e) => {\r\n    setLocalUsercode(e.target.value);\r\n    // in case there is any value lingering from testing other setup targets\r\n    localStorage.setItem(\"urlUsercode\", \"\");\r\n    setLocalPartIdWarning2(false);\r\n  };\r\n\r\n  const handleDeleteLocal = (e) => {\r\n    // console.log(hasDownloadedQsorts);\r\n    if (hasDownloadedQsorts) {\r\n      setLocalDeleteModal(true);\r\n    } else {\r\n      // console.log(\"false branch\");\r\n      setTriggerSaveBeforeDeleteModal(true);\r\n    }\r\n  };\r\n\r\n  const handleDownloadLocal = (e) => {\r\n    // console.log(JSON.stringify(localStoredQsorts));\r\n    const studyTitle = configObj.studyTitle;\r\n    const myDate = new Date();\r\n    const myDateString =\r\n      (\"0\" + myDate.getFullYear()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + (myDate.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      myDate.getDate() +\r\n      \"_\" +\r\n      (\"0\" + myDate.getHours()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + myDate.getMinutes()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + myDate.getSeconds()).slice(-2);\r\n\r\n    const exportName = studyTitle + \"_\" + myDateString;\r\n    if (Object.keys(localStoredQsorts).length > 0) {\r\n      downloadObjectAsJson(localStoredQsorts, exportName);\r\n    }\r\n    setHasDownloadedQsorts(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <LocalDeleteModal />\r\n        <LocalSaveBeforeDeleteModal />\r\n        <div>\r\n          <h2>{loginHeaderText}</h2>\r\n          <StyledHr />\r\n        </div>\r\n\r\n        <div>\r\n          <h3>{loginPartIdText}</h3>\r\n          <StyledInputDiv>\r\n            <StyledInput tabindex=\"0\" onChange={handleInput} type=\"text\" />\r\n            {displayPartIdWarning1 && (\r\n              <WarningText>{partIdWarning}</WarningText>\r\n            )}\r\n          </StyledInputDiv>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <h3>{usercodeText}</h3>\r\n          <StyledInputDiv>\r\n            <StyledInput\r\n              tabindex=\"1\"\r\n              onChange={handleUsercodeInput}\r\n              type=\"text\"\r\n            />\r\n            {displayPartIdWarning2 && (\r\n              <WarningText>{partIdWarning}</WarningText>\r\n            )}\r\n          </StyledInputDiv>\r\n        </div>\r\n        <LocalStartButton tabindex=\"3\" to={`/presort`} />\r\n      </Container>\r\n      <Container2>\r\n        <StoredHeader>\r\n          <div>{headerText}</div>\r\n        </StoredHeader>\r\n        <ButtonContainer>\r\n          <LocalDeleteButton onClick={handleDeleteLocal}>\r\n            Delete\r\n          </LocalDeleteButton>\r\n          <LocalSortsDownloadButton onClick={handleDownloadLocal}>\r\n            Download\r\n          </LocalSortsDownloadButton>\r\n        </ButtonContainer>\r\n      </Container2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr;\r\n  margin-top: 10px;\r\n  width: 70vw;\r\n  padding: 1.5vw;\r\n  min-height: 350px;\r\n  margin-bottom: 0px;\r\n  border: 2px solid black;\r\n  border-top-right-radius: 10px;\r\n  border-top-left-radius: 10px;\r\n  justify-self: center;\r\n  background-color: whitesmoke;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr;\r\n  margin-top: 0px;\r\n  width: 70vw;\r\n  padding: 1.5vw;\r\n  min-height: 100px;\r\n  margin-bottom: 100px;\r\n  border-right: 2px solid black;\r\n  border-left: 2px solid black;\r\n  border-bottom: 2px solid black;\r\n  border-bottom-right-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  justify-self: center;\r\n  background-color: whitesmoke;\r\n`;\r\n\r\nconst StyledHr = styled.hr`\r\n  margin-top: 5px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  margin-top: 5px;\r\n  width: 400px;\r\n  height: 30px;\r\n  font-size: 1.4em;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledInputDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst WarningText = styled.div`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 1.4em;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst StoredHeader = styled.div`\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\r\nimport LandingModal from \"../landing/LandingModal\";\r\nimport LogInScreen from \"./LogInScreen\";\r\nimport PartIdScreen from \"./PartIdScreen\";\r\nimport AccessCodeScreen from \"./AccessCodeScreen\";\r\nimport checkForIeBrowser from \"./checkForIeBrowser\";\r\nimport InternetExplorerWarning from \"./InternetExplorerWarning\";\r\nimport parseParams from \"./parseParams\";\r\nimport LocalStart from \"./LocalStart\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDataLoaded = (state) => state.dataLoaded;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getSetProgressScore = (state) => state.setProgressScore;\r\nconst getSetUrlUsercode = (state) => state.setUrlUsercode;\r\nconst getDisplayLandingContent = (state) => state.displayLandingContent;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\nconst getMapObject = (state) => state.mapObj;\r\nconst getSetPostsortCommentCheckObj = (state) =>\r\n  state.setPostsortCommentCheckObj;\r\nconst getSetCardFontSizeSort = (state) => state.setCardFontSizeSort;\r\nconst getSetCardFontSizePostsort = (state) => state.setCardFontSizePostsort;\r\nconst getSetMinCardHeightSort = (state) => state.setMinCardHeightSort;\r\nconst getSetMinCardHeightPostsort = (state) => state.setMinCardHeightPostsort;\r\n\r\nconst LandingPage = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const mapObj = useSettingsStore(getMapObject);\r\n  const dataLoaded = useStore(getDataLoaded);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const setProgressScore = useStore(getSetProgressScore);\r\n  const setUrlUsercode = useStore(getSetUrlUsercode);\r\n  let displayLandingContent = useStore(getDisplayLandingContent);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const landingHead = ReactHtmlParser(decodeHTML(langObj.landingHead)) || \"\";\r\n  const welcomeTextHtml =\r\n    ReactHtmlParser(decodeHTML(langObj.welcomeText)) || \"\";\r\n  const setCardFontSizeSort = useStore(getSetCardFontSizeSort);\r\n  const setCardFontSizePostsort = useStore(getSetCardFontSizePostsort);\r\n  const setMinCardHeightSort = useStore(getSetMinCardHeightSort);\r\n  const setMinCardHeightPostsort = useStore(getSetMinCardHeightPostsort);\r\n\r\n  // clear local storage if previous sorts exist\r\n  localStorage.removeItem(\"columns\");\r\n  localStorage.removeItem(\"sortColumns\");\r\n  localStorage.removeItem(\"columnStatements\");\r\n  localStorage.removeItem(\"presortSortedCards\");\r\n  localStorage.removeItem(\"resultsPresort\");\r\n  localStorage.removeItem(\"allCommentsObj\");\r\n  localStorage.removeItem(\"resultsPostsort\");\r\n  localStorage.removeItem(\"HC-requiredCommentsObj\");\r\n  localStorage.removeItem(\"LC-requiredCommentsObj\");\r\n  localStorage.removeItem(\"HC2-requiredCommentsObj\");\r\n  localStorage.removeItem(\"LC2-requiredCommentsObj\");\r\n  let archive = JSON.parse(localStorage.getItem(\"resultsSurveyArchive\"));\r\n  console.log(archive);\r\n  if (archive) {\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(archive));\r\n    let keys = Object.keys(archive);\r\n    keys.forEach((key) => {\r\n      localStorage.removeItem(key);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // display \"Next\" button if anonymous log in\r\n    if (configObj.initialScreen === \"anonymous\") {\r\n      setDisplayNextButton(true);\r\n    }\r\n\r\n    // PRESORT font\r\n    if (\r\n      configObj.setDefaultFontSizePresort === \"true\" ||\r\n      configObj.setDefaultFontSizePresort === true\r\n    ) {\r\n      localStorage.setItem(\"fontSizePresort\", configObj.defaultFontSizePresort);\r\n    }\r\n\r\n    // SORT font\r\n    if (\r\n      configObj.setDefaultFontSizeSort === \"true\" ||\r\n      configObj.setDefaultFontSizeSort === true\r\n    ) {\r\n      localStorage.setItem(\"fontSizeSort\", configObj.defaultFontSizeSort);\r\n    }\r\n\r\n    // SORT card height\r\n    if (\r\n      configObj.setMinCardHeightSort === \"true\" ||\r\n      configObj.setMinCardHeightSort === true\r\n    ) {\r\n      localStorage.setItem(\"cardHeightSort\", configObj.minCardHeightSort);\r\n    }\r\n\r\n    // POSTSORT font\r\n    if (\r\n      configObj.setDefaultFontSizePostsort === \"true\" ||\r\n      configObj.setDefaultFontSizePostsort === true\r\n    ) {\r\n      setCardFontSizePostsort(configObj.defaultFontSizePostsort);\r\n      localStorage.setItem(\r\n        \"fontSizePostsort\",\r\n        configObj.defaultFontSizePostsort\r\n      );\r\n    }\r\n\r\n    // POSTSORT card height\r\n    if (\r\n      configObj.setMinCardHeightPostsort === \"true\" ||\r\n      configObj.setMinCardHeightPostsort === true\r\n    ) {\r\n      setMinCardHeightPostsort(configObj.minCardHeightPostsort);\r\n      localStorage.setItem(\r\n        \"cardHeightPostsort\",\r\n        configObj.minCardHeightPostsort\r\n      );\r\n    }\r\n\r\n    // set participant Id if set in URL\r\n    let urlString = parseParams(window.location.href);\r\n    // if nothing in URL, check local storage\r\n    if (urlString === undefined || urlString === null) {\r\n      let urlName = localStorage.getItem(\"urlUsercode\");\r\n      // if nothing in local storage, set to \"not_set\"\r\n      if (\r\n        urlName === null ||\r\n        urlName === undefined ||\r\n        urlName === \"undefined\"\r\n      ) {\r\n        console.log(\"no url usercode in storage\");\r\n        setUrlUsercode(\"not_set\");\r\n        localStorage.setItem(\"urlUsercode\", \"not_set\");\r\n      } else {\r\n        // if something in local storage, set state\r\n        console.log(\"URL usercode from storage: \", urlName);\r\n        if (urlName === \"not_set\") {\r\n          setUrlUsercode(\"not_set\");\r\n        } else {\r\n          setUrlUsercode(`${urlName} (stored)`);\r\n        }\r\n      }\r\n    } else {\r\n      // if something in URL, set it in state\r\n      let codeName = urlString;\r\n      codeName = codeName.replace(/\\/|#/g, \"\");\r\n      console.log(\"URL usercode: \", codeName);\r\n      setUrlUsercode(codeName);\r\n      localStorage.setItem(\"urlUsercode\", codeName);\r\n    }\r\n  }, [\r\n    setUrlUsercode,\r\n    configObj.initialScreen,\r\n    configObj.setDefaultFontSize,\r\n    configObj.defaultFontSize,\r\n    setDisplayNextButton,\r\n    mapObj,\r\n    setCardFontSizeSort,\r\n    setCardFontSizePostsort,\r\n    setMinCardHeightSort,\r\n    setMinCardHeightPostsort,\r\n    configObj,\r\n  ]);\r\n\r\n  // setup postsort comments object\r\n  useEffect(() => {\r\n    let objectKeys = Object.keys(mapObj.qSortPattern);\r\n    let mostPos = Math.max(...objectKeys);\r\n    let mostNeg = Math.min(...objectKeys);\r\n    let MostPos2 = mostPos - 1;\r\n    let MostNeg2 = mostNeg + 1;\r\n    let highVal = mapObj.qSortPattern[mostPos];\r\n    let highVal2 = mapObj.qSortPattern[MostPos2];\r\n    let lowVal = mapObj.qSortPattern[mostNeg];\r\n    let lowVal2 = mapObj.qSortPattern[MostNeg2];\r\n    let showSecondMostPos = configObj.showSecondPosColumn;\r\n    let showSecondMostNeg = configObj.showSecondNegColumn;\r\n    const postsortCommentCheckObj = {};\r\n    for (let i = 0; i < highVal; i++) {\r\n      let key = `hc-${i}`;\r\n      postsortCommentCheckObj[key] = false;\r\n    }\r\n    for (let j = 0; j < lowVal; j++) {\r\n      let key = `lc-${j}`;\r\n      postsortCommentCheckObj[key] = false;\r\n    }\r\n    if (showSecondMostPos === \"true\" || showSecondMostPos === true) {\r\n      for (let k = 0; k < highVal2; k++) {\r\n        let key = `hc2-${k}`;\r\n        postsortCommentCheckObj[key] = false;\r\n      }\r\n    }\r\n    if (showSecondMostNeg === \"true\" || showSecondMostNeg === true) {\r\n      for (let l = 0; l < lowVal2; l++) {\r\n        let key = `lc2-${l}`;\r\n        postsortCommentCheckObj[key] = false;\r\n      }\r\n    }\r\n    setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n  }, [mapObj, configObj, setPostsortCommentCheckObj]);\r\n\r\n  // calc time on page\r\n  useEffect(() => {\r\n    const startTime = Date.now();\r\n    setProgressScore(10);\r\n    setCurrentPage(\"landing\");\r\n    return () => {\r\n      // will persist in localStorage\r\n      calculateTimeOnPage(startTime, \"landingPage\", \"landingPage\");\r\n    };\r\n  }, [setCurrentPage, setProgressScore]);\r\n\r\n  // check for complete\r\n  let displayLogInScreen = false;\r\n  let displayPartIdScreen = false;\r\n  let displayAccessCodeScreen = false;\r\n\r\n  if (configObj.setupTarget === \"local\") {\r\n    return (\r\n      <>\r\n        {dataLoaded && (\r\n          <ContainerDiv>\r\n            <LocalStart />\r\n          </ContainerDiv>\r\n        )}\r\n      </>\r\n    );\r\n  } else {\r\n    // determine access mode\r\n    const initialScreenSetting = configObj.initialScreen;\r\n    if (initialScreenSetting === \"anonymous\") {\r\n      displayLandingContent = true;\r\n    }\r\n    if (\r\n      initialScreenSetting === \"partId-access\" &&\r\n      displayLandingContent === false\r\n    ) {\r\n      displayLogInScreen = true;\r\n    }\r\n    if (initialScreenSetting === \"partId\" && displayLandingContent === false) {\r\n      displayPartIdScreen = true;\r\n    }\r\n    if (initialScreenSetting === \"access\" && displayLandingContent === false) {\r\n      displayAccessCodeScreen = true;\r\n    }\r\n\r\n    // if isIE, hide all content except warning.\r\n    let isIeBrowser = checkForIeBrowser();\r\n    if (isIeBrowser) {\r\n      displayLandingContent = false;\r\n      displayLogInScreen = false;\r\n      displayAccessCodeScreen = false;\r\n      displayPartIdScreen = false;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {dataLoaded && (\r\n          <React.Fragment>\r\n            <SortTitleBar background={headerBarColor}>\r\n              {landingHead}\r\n            </SortTitleBar>\r\n            <LandingModal />\r\n            <ContainerDiv>\r\n              {isIeBrowser && <InternetExplorerWarning />}\r\n              {displayLogInScreen && <LogInScreen />}\r\n              {displayPartIdScreen && <PartIdScreen />}\r\n              {displayAccessCodeScreen && <AccessCodeScreen />}\r\n              {displayLandingContent && (\r\n                <ContentDiv>\r\n                  <div>{welcomeTextHtml}</div>\r\n                </ContentDiv>\r\n              )}\r\n            </ContainerDiv>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LandingPage;\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst fadeOut = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 70px;\r\n  padding-top: 50px;\r\n  transition: 0.3s ease all;\r\n  margin-top: 50px;\r\n\r\n  img {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  iframe {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  display: flex;\r\n  width: 75vw;\r\n  font-size: 1.25em;\r\n  visibility: ${(props) => (props.view ? \"hidden\" : \"visible\")};\r\n  animation: ${(props) => (props.view ? fadeOut : fadeIn)} 0.5s linear;\r\n  transition: visibility 0.5s linear;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: 100vw;\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 8px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  position: fixed;\r\n  top: 0;\r\n`;\r\n","const sanitizeString = (string) => {\r\n  try {\r\n    let shouldDoReplace = string.includes(\"<\");\r\n    let shouldDoReplace2 = string.includes(\">\");\r\n\r\n    if (shouldDoReplace === true || shouldDoReplace2 === true) {\r\n      const replaceLeft = /</gi;\r\n      const replaceRight = />/gi;\r\n      const stringText2 = string.replace(replaceLeft, \"&lt\");\r\n      const stringText3 = stringText2.replace(replaceRight, \"&gt\");\r\n      return stringText3;\r\n    } else {\r\n      return string;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"There was an error sanitizing User Input\");\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default sanitizeString;\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\r\n\r\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\r\nconst getSetPostsortCommentCheckObj = (state) =>\r\n  state.setPostsortCommentCheckObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getShowPostsortCommentHighlighting = (state) =>\r\n  state.showPostsortCommentHighlighting;\r\nconst getPostsortDualImageArray = (state) => state.postsortDualImageArray;\r\nconst getSetPostsortDualImageArray = (state) => state.setPostsortDualImageArray;\r\n\r\nconst LowCards = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(key, value) {\r\n      await null;\r\n      return localStorage.setItem(key, value);\r\n    },\r\n  };\r\n\r\n  // LOCAL STATE\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  // PERSISTED STATE\r\n  const columnStatements = JSON.parse(localStorage.getItem(\"sortColumns\"));\r\n  const [requiredCommentsObject, setRequiredCommentsObject] = useLocalStorage(\r\n    \"LC-requiredCommentsObj\",\r\n    {}\r\n  );\r\n\r\n  // GLOBAL STATE\r\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\r\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const showPostsortCommentHighlighting = useStore(\r\n    getShowPostsortCommentHighlighting\r\n  );\r\n  const postsortDualImageArray = useStore(getPostsortDualImageArray);\r\n  const setPostsortDualImageArray = useStore(getSetPostsortDualImageArray);\r\n\r\n  const { height, width, cardFontSize, disagreeObj } = props;\r\n  const lowCards = columnStatements.vCols[disagreeObj.columnDisplay];\r\n  const { disagreeText, placeholder } = disagreeObj;\r\n  let columnDisplay = disagreeObj.columnDisplay;\r\n\r\n  // on double click of card, enlarge image\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        postsortDualImageArray.push(e.target.src);\r\n        setPostsortDualImageArray(postsortDualImageArray);\r\n        if (postsortDualImageArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // on change, get text and add comment to card object\r\n  const onChange = (event, itemId) => {\r\n    const results = JSON.parse(localStorage.getItem(\"resultsPostsort\")) || {};\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n\r\n    // set comment check object for Results formatting on Submit page\r\n    let commentLength = event.target.value.length;\r\n    if (commentLength > 0) {\r\n      postsortCommentCheckObj[`lc-${itemId}`] = true;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n      // setCommentCheckObj({ ...postsortCommentCheckObj });\r\n    } else {\r\n      postsortCommentCheckObj[`lc-${itemId}`] = false;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n      // setCommentCheckObj({ ...postsortCommentCheckObj });\r\n    }\r\n    const cards = columnStatements.vCols[disagreeObj.columnDisplay];\r\n    const targetCard = event.target.id;\r\n    const userEnteredText = event.target.value;\r\n    const identifier = `${columnDisplay}_${itemId}`;\r\n\r\n    // to update just the card that changed\r\n    // results format  ===> { column3_1: \"(image3) yes I think so\" }\r\n    cards.map((el) => {\r\n      if (el.id === targetCard) {\r\n        const comment3 = userEnteredText;\r\n        // remove new line and commas to make csv export easier\r\n        const comment2 = comment3.replace(/\\n/g, \" \");\r\n        const comment = comment2.replace(/,/g, \" \").trim();\r\n        // assign to main data object for confirmation / debugging\r\n        if (comment.length > 0) {\r\n          el.comment = sanitizeString(comment);\r\n          // assign to comments object\r\n\r\n          results[identifier] = `(${el.id}) ${comment}`;\r\n          // setup persistence for comments\r\n          allCommentsObj[identifier] = `(${el.id}) ${comment}`;\r\n          allCommentsObj[\r\n            `textArea-${columnDisplay}_${itemId + 1}`\r\n          ] = `${comment}`;\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`lc-${itemId}`]: true };\r\n          });\r\n        } else {\r\n          el.comment = \"\";\r\n          results[identifier] = \"\";\r\n          allCommentsObj[identifier] = \"\";\r\n          allCommentsObj[`textArea-${columnDisplay}_${itemId + 1}`] = \"\";\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`lc-${itemId}`]: false };\r\n          });\r\n        }\r\n      }\r\n      return el;\r\n    });\r\n    asyncLocalStorage.setItem(\"allCommentsObj\", JSON.stringify(allCommentsObj));\r\n    asyncLocalStorage.setItem(\"resultsPostsort\", JSON.stringify(results));\r\n  }; // end onBlur\r\n\r\n  // MAP cards to DOM\r\n  return lowCards.map((item, index) => {\r\n    let content = ReactHtmlParser(`<div>${decodeHTML(item.statement)}</div>`);\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n    let cardComment =\r\n      allCommentsObj[`textArea-${columnDisplay}_${+index + 1}`] || \"\";\r\n\r\n    if (configObj.useImages === true) {\r\n      content = ReactHtmlParser(\r\n        `<img src=\"${item.element.props.src}\" style=\"pointer-events: all\" alt=${item.element.props.alt} />`\r\n      );\r\n    }\r\n\r\n    let highlighting = true;\r\n    if (\r\n      configObj.postsortCommentsRequired === \"true\" ||\r\n      configObj.postsortCommentsRequired === true\r\n    ) {\r\n      if (showPostsortCommentHighlighting === true) {\r\n        highlighting = requiredCommentsObject[`lc-${index}`];\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container key={item.statement}>\r\n        <Modal\r\n          open={openImageModal}\r\n          center\r\n          onClose={() => setOpenImageModal(false)}\r\n          classNames={{\r\n            modal: `${configObj.imageFormat}`,\r\n            overlay: \"dualImageOverlay\",\r\n          }}\r\n        >\r\n          <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n        </Modal>\r\n        <Modal\r\n          open={openDualImageModal}\r\n          center\r\n          onClose={() => {\r\n            setOpenDualImageModal(false);\r\n            setPostsortDualImageArray([]);\r\n          }}\r\n          classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n        >\r\n          <img\r\n            src={postsortDualImageArray[0]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            alt=\"modalImage\"\r\n          />\r\n          <img\r\n            src={postsortDualImageArray[1]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            style={{ marginLeft: \"1%\" }}\r\n            alt=\"modalImage2\"\r\n          />\r\n        </Modal>\r\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\r\n        <CardAndTextHolder>\r\n          <Card\r\n            cardFontSize={cardFontSize}\r\n            width={width}\r\n            height={height}\r\n            onClick={(e) => handleOpenImageModal(e, item.element.props.src)}\r\n          >\r\n            {content}\r\n          </Card>\r\n          <TagContainerDiv>\r\n            <CommentArea\r\n              bgColor={highlighting}\r\n              border={highlighting}\r\n              data-gramm_editor=\"false\"\r\n              height={height}\r\n              cardFontSize={cardFontSize}\r\n              id={item.id}\r\n              placeholder={placeholder}\r\n              defaultValue={cardComment}\r\n              onChange={(e) => {\r\n                onChange(e, index);\r\n              }}\r\n            />\r\n          </TagContainerDiv>\r\n        </CardAndTextHolder>\r\n      </Container>\r\n    );\r\n  });\r\n};\r\n\r\nexport default LowCards;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  max-width: 1100px;\r\n  margin-top: 50px;\r\n  border-radius: 3px;\r\n  border: 1px solid darkgray;\r\n`;\r\n\r\nconst CardTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background: lightpink;\r\n  color: black;\r\n  text-align: center;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  height: 1.5em;\r\n`;\r\n\r\nconst CardAndTextHolder = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  background: rgb(224, 224, 224);\r\n  width: 100%;\r\n`;\r\n\r\nconst CommentArea = styled.textarea`\r\n  padding: 10px;\r\n  margin-top: 2px;\r\n  background-color: ${(props) =>\r\n    props.bgColor ? \"whitesmoke\" : \"rgba(253, 224, 71, .5)\"};\r\n  height: ${(props) => `${props.height}px;`};\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  width: calc(100% - 6px);\r\n  border: 2px solid darkgray;\r\n  border-radius: 3px;\r\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\r\n`;\r\n\r\nconst TagContainerDiv = styled.div`\r\n  padding-top: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  user-select: \"none\";\r\n  padding: 0 2px 0 2px;\r\n  margin: 5px 5px 5px 5px;\r\n  line-height: 1em;\r\n  height: ${(props) => `${props.height}px;`};\r\n  width: 35vw;\r\n  // max-width: ${(props) => `${props.width}px;`};\r\n  border-radius: 5px;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid black;\r\n  background-color: #f6f6f6;\r\n  text-align: center;\r\n\r\n  img {\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\r\n\r\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\r\nconst getSetPostsortCommentCheckObj = (state) =>\r\n  state.setPostsortCommentCheckObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getShowPostsortCommentHighlighting = (state) =>\r\n  state.showPostsortCommentHighlighting;\r\nconst getPostsortDualImageArray = (state) => state.postsortDualImageArray;\r\nconst getSetPostsortDualImageArray = (state) => state.setPostsortDualImageArray;\r\n\r\nconst LowCards2 = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(key, value) {\r\n      await null;\r\n      return localStorage.setItem(key, value);\r\n    },\r\n  };\r\n\r\n  // LOCAL STATE\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  // PERSISTED STATE\r\n  const columnStatements = JSON.parse(localStorage.getItem(\"sortColumns\"));\r\n  const [requiredCommentsObject, setRequiredCommentsObject] = useLocalStorage(\r\n    \"LC2-requiredCommentsObj\",\r\n    {}\r\n  );\r\n\r\n  // GLOBAL STATE\r\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\r\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const showPostsortCommentHighlighting = useStore(\r\n    getShowPostsortCommentHighlighting\r\n  );\r\n  const postsortDualImageArray = useStore(getPostsortDualImageArray);\r\n  const setPostsortDualImageArray = useStore(getSetPostsortDualImageArray);\r\n\r\n  const { height, width, cardFontSize, disagreeObj } = props;\r\n  const lowCards2 = columnStatements.vCols[disagreeObj.columnDisplay2];\r\n  const { disagreeText, placeholder } = disagreeObj;\r\n  const columnDisplay = disagreeObj.columnDisplay2;\r\n\r\n  // on double click of card, enlarge image\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        postsortDualImageArray.push(e.target.src);\r\n        setPostsortDualImageArray(postsortDualImageArray);\r\n        if (postsortDualImageArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // on blur, get text and add comment to card object\r\n  const onChange = (event, itemId) => {\r\n    const results = JSON.parse(localStorage.getItem(\"resultsPostsort\")) || {};\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n\r\n    // set comment check object for Results formatting on Submit page\r\n    let commentLength = event.target.value.length;\r\n    if (commentLength > 0) {\r\n      postsortCommentCheckObj[`lc2-${itemId}`] = true;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    } else {\r\n      postsortCommentCheckObj[`lc2-${itemId}`] = false;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    }\r\n    const cards = [...columnStatements.vCols[disagreeObj.columnDisplay2]];\r\n    const targetCard = event.target.id;\r\n    const userEnteredText = event.target.value;\r\n    const identifier = `${columnDisplay}_${itemId}`;\r\n\r\n    // to update just the card that changed\r\n    cards.map((el) => {\r\n      if (el.id === targetCard) {\r\n        const comment3 = userEnteredText;\r\n        // remove new line and commas to make csv export easier\r\n        const comment2 = comment3.replace(/\\n/g, \" \");\r\n        const comment = comment2.replace(/,/g, \" \").trim();\r\n        // assign to main data object for confirmation / debugging\r\n        if (comment.length > 0) {\r\n          el.comment = sanitizeString(comment);\r\n\r\n          results[identifier] = `(${el.id}) ${comment}`;\r\n          // setup persistence for comments\r\n          allCommentsObj[identifier] = `(${el.id}) ${comment}`;\r\n          allCommentsObj[\r\n            `textArea-${columnDisplay}_${itemId + 1}`\r\n          ] = `${comment}`;\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`lc2-${itemId}`]: true };\r\n          });\r\n        } else {\r\n          el.comment = \"\";\r\n          results[identifier] = \"\";\r\n          allCommentsObj[identifier] = \"\";\r\n          allCommentsObj[`textArea-${columnDisplay}_${itemId + 1}`] = \"\";\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`lc2-${itemId}`]: false };\r\n          });\r\n        }\r\n      }\r\n      return el;\r\n    });\r\n    asyncLocalStorage.setItem(\"allCommentsObj\", JSON.stringify(allCommentsObj));\r\n    asyncLocalStorage.setItem(\"resultsPostsort\", JSON.stringify(results));\r\n  }; // end onBlur\r\n\r\n  // MAP cards to DOM\r\n  return lowCards2.map((item, index) => {\r\n    let content = ReactHtmlParser(`<div>${decodeHTML(item.statement)}</div>`);\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n    let cardComment =\r\n      allCommentsObj[`textArea-${columnDisplay}_${+index + 1}`] || \"\";\r\n\r\n    if (configObj.useImages === true) {\r\n      content = ReactHtmlParser(\r\n        `<img src=\"${item.element.props.src}\" style=\"pointer-events: all\" alt=${item.element.props.alt} />`\r\n      );\r\n    }\r\n\r\n    let highlighting = true;\r\n    if (\r\n      configObj.postsortCommentsRequired === \"true\" ||\r\n      configObj.postsortCommentsRequired === true\r\n    ) {\r\n      if (showPostsortCommentHighlighting === true) {\r\n        highlighting = requiredCommentsObject[`lc2-${index}`];\r\n      }\r\n    }\r\n    return (\r\n      <Container key={item.statement}>\r\n        <Modal\r\n          open={openImageModal}\r\n          center\r\n          onClose={() => setOpenImageModal(false)}\r\n          classNames={{\r\n            modal: `${configObj.imageFormat}`,\r\n            overlay: \"dualImageOverlay\",\r\n          }}\r\n        >\r\n          <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n        </Modal>\r\n        <Modal\r\n          open={openDualImageModal}\r\n          center\r\n          onClose={() => {\r\n            setOpenDualImageModal(false);\r\n            setPostsortDualImageArray([]);\r\n          }}\r\n          classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n        >\r\n          <img\r\n            src={postsortDualImageArray[0]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            alt=\"modalImage\"\r\n          />\r\n          <img\r\n            src={postsortDualImageArray[1]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            style={{ marginLeft: \"1%\" }}\r\n            alt=\"modalImage2\"\r\n          />\r\n        </Modal>\r\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\r\n        <CardAndTextHolder>\r\n          <Card\r\n            cardFontSize={cardFontSize}\r\n            width={width}\r\n            height={height}\r\n            onClick={(e) => handleOpenImageModal(e, item.element.props.src)}\r\n          >\r\n            {content}\r\n          </Card>\r\n          <TagContainerDiv>\r\n            <CommentArea\r\n              bgColor={highlighting}\r\n              border={highlighting}\r\n              data-gramm_editor=\"false\"\r\n              id={item.id}\r\n              height={height}\r\n              cardFontSize={cardFontSize}\r\n              className=\"commentTextArea\"\r\n              placeholder={placeholder}\r\n              defaultValue={cardComment}\r\n              onChange={(e) => {\r\n                onChange(e, index);\r\n              }}\r\n            />\r\n          </TagContainerDiv>\r\n        </CardAndTextHolder>\r\n      </Container>\r\n    );\r\n  });\r\n};\r\n\r\nexport default LowCards2;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  max-width: 1100px;\r\n  margin-top: 50px;\r\n  border-radius: 3px;\r\n  border: 1px solid darkgray;\r\n`;\r\n\r\nconst CardTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background: lightpink;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  color: black;\r\n  text-align: center;\r\n  height: 1.5em;\r\n`;\r\n\r\nconst CardAndTextHolder = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  background: rgb(224, 224, 224);\r\n  width: 100%;\r\n`;\r\n\r\nconst CommentArea = styled.textarea`\r\n  padding: 10px;\r\n  background-color: ${(props) =>\r\n    props.bgColor ? \"whitesmoke\" : \"rgba(253, 224, 71, .5)\"};\r\n  height: ${(props) => `${props.height}px;`};\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  width: calc(100% - 6px);\r\n  border: 2px solid darkgray;\r\n  border-radius: 3px;\r\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\r\n`;\r\n\r\nconst TagContainerDiv = styled.div`\r\n  padding-top: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  user-select: \"none\";\r\n  padding: 0 2px 0 2px;\r\n  margin: 5px 5px 5px 5px;\r\n  line-height: 1em;\r\n  height: ${(props) => `${props.height}px;`};\r\n  width: 35vw;\r\n  border-radius: 5px;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid black;\r\n  background-color: #f6f6f6;\r\n  text-align: center;\r\n\r\n  img {\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\r\n\r\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\r\nconst getSetPostsortCommentCheckObj = (state) =>\r\n  state.setPostsortCommentCheckObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getShowPostsortCommentHighlighting = (state) =>\r\n  state.showPostsortCommentHighlighting;\r\nconst getPostsortDualImageArray = (state) => state.postsortDualImageArray;\r\nconst getSetPostsortDualImageArray = (state) => state.setPostsortDualImageArray;\r\n\r\nconst HighCards = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(key, value) {\r\n      await null;\r\n      return localStorage.setItem(key, value);\r\n    },\r\n  };\r\n\r\n  // LOCAL STATE\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  // PERSISTED STATE\r\n  const columnStatements = JSON.parse(localStorage.getItem(\"sortColumns\"));\r\n  const [requiredCommentsObject, setRequiredCommentsObject] = useLocalStorage(\r\n    \"HC-requiredCommentsObj\",\r\n    {}\r\n  );\r\n\r\n  // GLOBAL STATE\r\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\r\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const showPostsortCommentHighlighting = useStore(\r\n    getShowPostsortCommentHighlighting\r\n  );\r\n  const postsortDualImageArray = useStore(getPostsortDualImageArray);\r\n  const setPostsortDualImageArray = useStore(getSetPostsortDualImageArray);\r\n\r\n  const { agreeObj, cardFontSize, width, height } = props;\r\n  const highCards = columnStatements.vCols[agreeObj.columnDisplay];\r\n  const { agreeText, placeholder } = agreeObj;\r\n  let columnDisplay = agreeObj.columnDisplay;\r\n\r\n  // on double click of card, enlarge image\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        postsortDualImageArray.push(e.target.src);\r\n        setPostsortDualImageArray(postsortDualImageArray);\r\n        if (postsortDualImageArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // on leaving card comment section\r\n  const handleChange = (event, itemId) => {\r\n    const results = JSON.parse(localStorage.getItem(\"resultsPostsort\")) || {};\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n\r\n    // set comment check object for Results formatting on Submit page\r\n    let commentLength = event.target.value.length;\r\n    if (commentLength > 0) {\r\n      postsortCommentCheckObj[`hc-${itemId}`] = true;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    } else {\r\n      postsortCommentCheckObj[`hc-${itemId}`] = false;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    }\r\n    const cards = columnStatements.vCols[agreeObj.columnDisplay];\r\n    const targetCard = event.target.id;\r\n    const userEnteredText = event.target.value;\r\n    const identifier = `${columnDisplay}_${+itemId}`;\r\n\r\n    // to update RESULTS storage for just the card that changed\r\n    // results format  ===> { column3_1: \"(image3) yes I think so\" }\r\n    cards.map((el) => {\r\n      if (el.id === targetCard) {\r\n        const comment3 = userEnteredText;\r\n        // remove new line and commas to make csv export easier\r\n        const comment2 = comment3.replace(/\\n/g, \" \");\r\n        let comment = comment2.replace(/,/g, \" \").trim();\r\n        // assign to main data object for confirmation / debugging\r\n        if (comment.length > 0) {\r\n          el.comment = sanitizeString(comment);\r\n\r\n          results[identifier] = `(${el.id}) ${comment}`;\r\n          // setup persistence for comments\r\n          allCommentsObj[identifier] = `(${el.id}) ${comment}`;\r\n          allCommentsObj[\r\n            `textArea-${columnDisplay}_${itemId + 1}`\r\n          ] = `${comment}`;\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`hc-${itemId}`]: true };\r\n          });\r\n        } else {\r\n          el.comment = \"\";\r\n          results[identifier] = \"\";\r\n          allCommentsObj[identifier] = \"\";\r\n          allCommentsObj[`textArea-${columnDisplay}_${itemId + 1}`] = \"\";\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`hc-${itemId}`]: false };\r\n          });\r\n        }\r\n      }\r\n      return el;\r\n    });\r\n    asyncLocalStorage.setItem(\"allCommentsObj\", JSON.stringify(allCommentsObj));\r\n    asyncLocalStorage.setItem(\"resultsPostsort\", JSON.stringify(results));\r\n  }; // END handleChange\r\n\r\n  // MAP cards to DOM\r\n  return highCards.map((item, index) => {\r\n    let content = ReactHtmlParser(`<div>${decodeHTML(item.statement)}</div>`);\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n    let cardComment = allCommentsObj[`textArea-${columnDisplay}_${+index + 1}`];\r\n\r\n    if (configObj.useImages === true) {\r\n      content = ReactHtmlParser(\r\n        `<img src=\"${item.element.props.src}\" style=\"pointer-events: all\" alt=${item.element.props.alt} />`\r\n      );\r\n    }\r\n\r\n    let highlighting = true;\r\n    if (\r\n      configObj.postsortCommentsRequired === \"true\" ||\r\n      configObj.postsortCommentsRequired === true\r\n    ) {\r\n      // if comments are required, highlight if no comment\r\n      if (showPostsortCommentHighlighting === true) {\r\n        highlighting = requiredCommentsObject[`hc-${index}`];\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container id=\"postSortImageModal\" key={item.statement}>\r\n        <Modal\r\n          open={openImageModal}\r\n          center\r\n          onClose={() => setOpenImageModal(false)}\r\n          classNames={{\r\n            modal: `${configObj.imageFormat}`,\r\n            overlay: \"dualImageOverlay\",\r\n          }}\r\n        >\r\n          <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n        </Modal>\r\n        <Modal\r\n          open={openDualImageModal}\r\n          center\r\n          onClose={() => {\r\n            setOpenDualImageModal(false);\r\n            setPostsortDualImageArray([]);\r\n          }}\r\n          classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n        >\r\n          <img\r\n            src={postsortDualImageArray[0]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            alt=\"modalImage\"\r\n          />\r\n          <img\r\n            src={postsortDualImageArray[1]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            style={{ marginLeft: \"1%\" }}\r\n            alt=\"modalImage2\"\r\n          />\r\n        </Modal>\r\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\r\n        <CardAndTextHolder>\r\n          <Card\r\n            cardFontSize={cardFontSize}\r\n            width={width}\r\n            height={height}\r\n            cardColor={item.cardColor}\r\n            onClick={(e) => handleOpenImageModal(e, item.element.props.src)}\r\n          >\r\n            {content}\r\n          </Card>\r\n          <TagContainerDiv>\r\n            <CommentArea\r\n              bgColor={highlighting}\r\n              border={highlighting}\r\n              data-gramm_editor=\"false\"\r\n              height={height}\r\n              cardFontSize={cardFontSize}\r\n              id={item.id}\r\n              placeholder={placeholder}\r\n              defaultValue={cardComment}\r\n              onChange={(e) => {\r\n                handleChange(e, index);\r\n              }}\r\n            />\r\n          </TagContainerDiv>\r\n        </CardAndTextHolder>\r\n      </Container>\r\n    );\r\n  });\r\n};\r\n\r\nexport default HighCards;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  max-width: 1100px;\r\n  margin-top: 50px;\r\n  border-radius: 3px;\r\n  border: 1px solid darkgray;\r\n`;\r\n\r\nconst CardTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background: #c7f6c7;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  color: black;\r\n  text-align: center;\r\n  height: 1.5em;\r\n`;\r\n\r\nconst CardAndTextHolder = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  background: rgb(224, 224, 224);\r\n  width: 100%;\r\n`;\r\n\r\nconst CommentArea = styled.textarea`\r\n  padding: 10px;\r\n  margin-top: 2px;\r\n  background-color: ${(props) =>\r\n    props.bgColor ? \"whitesmoke\" : \"rgba(253, 224, 71, .5)\"};\r\n  height: ${(props) => `${props.height}px;`};\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  width: calc(100% - 6px);\r\n  border: 2px solid darkgray;\r\n  border-radius: 3px;\r\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\r\n`;\r\n\r\nconst TagContainerDiv = styled.div`\r\n  padding-top: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  user-select: \"none\";\r\n  padding: 0 2px 0 2px;\r\n  margin: 5px 5px 5px 5px;\r\n  line-height: 1em;\r\n  height: ${(props) => `${props.height}px;`};\r\n  width: 35vw;\r\n  //max-width: ${(props) => (props.useImages ? `none` : `${props.width}px;`)};\r\n  border-radius: 5px;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid darkslategray;\r\n  background-color: #f6f6f6;\r\n  text-align: center;\r\n\r\n  img {\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\r\n\r\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\r\nconst getSetPostsortCommentCheckObj = (state) =>\r\n  state.setPostsortCommentCheckObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getShowPostsortCommentHighlighting = (state) =>\r\n  state.showPostsortCommentHighlighting;\r\nconst getPostsortDualImageArray = (state) => state.postsortDualImageArray;\r\nconst getSetPostsortDualImageArray = (state) => state.setPostsortDualImageArray;\r\n\r\nconst HighCards2Display = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(key, value) {\r\n      await null;\r\n      return localStorage.setItem(key, value);\r\n    },\r\n  };\r\n\r\n  // LOCAL STATE\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  // PERSISTED STATE\r\n  const columnStatements = JSON.parse(localStorage.getItem(\"sortColumns\"));\r\n\r\n  const [requiredCommentsObject, setRequiredCommentsObject] = useLocalStorage(\r\n    \"HC2-requiredCommentsObj\",\r\n    {}\r\n  );\r\n  // GLOBAL STATE\r\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\r\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const showPostsortCommentHighlighting = useStore(\r\n    getShowPostsortCommentHighlighting\r\n  );\r\n  const postsortDualImageArray = useStore(getPostsortDualImageArray);\r\n  const setPostsortDualImageArray = useStore(getSetPostsortDualImageArray);\r\n\r\n  const { height, width, agreeObj, cardFontSize } = props;\r\n  const highCards2 = columnStatements.vCols[agreeObj.columnDisplay2];\r\n  const { agreeText, placeholder } = agreeObj;\r\n  let columnDisplay = agreeObj.columnDisplay2;\r\n\r\n  // enlarge images on double click\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        postsortDualImageArray.push(e.target.src);\r\n        setPostsortDualImageArray(postsortDualImageArray);\r\n        if (postsortDualImageArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // on leaving card comment section,\r\n  const onChange = (event, itemId) => {\r\n    const results = JSON.parse(localStorage.getItem(\"resultsPostsort\")) || {};\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n\r\n    // set comment check object for Results formatting on Submit page\r\n    let commentLength = event.target.value.length;\r\n    if (commentLength > 0) {\r\n      postsortCommentCheckObj[`hc2-${itemId}`] = true;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    } else {\r\n      postsortCommentCheckObj[`hc2-${itemId}`] = false;\r\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\r\n    }\r\n    const cards = columnStatements?.vCols[agreeObj.columnDisplay2];\r\n    const targetCard = event.target.id;\r\n    const userEnteredText = event.target.value;\r\n    const identifier = `${columnDisplay}_${+itemId}`;\r\n\r\n    // to update RESULTS storage for just the card that changed\r\n    // results format  ===> { column3_1: \"(image3) yes I think so\" }\r\n    cards.map((el) => {\r\n      if (el.id === targetCard) {\r\n        const comment3 = userEnteredText;\r\n        // remove new line and commas to make csv export easier\r\n        const comment2 = comment3.replace(/\\n/g, \" \");\r\n        const comment = comment2.replace(/,/g, \" \").trim();\r\n        // assign to main data object for confirmation / debugging\r\n        if (comment.length > 0) {\r\n          el.comment = sanitizeString(comment);\r\n          // assign to comments object\r\n\r\n          results[identifier] = `(${el.id}) ${comment}`;\r\n          // setup persistence for comments\r\n          allCommentsObj[identifier] = `(${el.id}) ${comment}`;\r\n          allCommentsObj[\r\n            `textArea-${columnDisplay}_${itemId + 1}`\r\n          ] = `${comment}`;\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`hc2-${itemId}`]: true };\r\n          });\r\n        } else {\r\n          el.comment = \"\";\r\n          results[identifier] = \"\";\r\n          allCommentsObj[identifier] = \"\";\r\n          allCommentsObj[`textArea-${columnDisplay}_${itemId + 1}`] = \"\";\r\n          setRequiredCommentsObject((requiredCommentsObject) => {\r\n            return { ...requiredCommentsObject, [`hc2-${itemId}`]: false };\r\n          });\r\n        }\r\n      }\r\n      return el;\r\n    });\r\n    asyncLocalStorage.setItem(\"allCommentsObj\", JSON.stringify(allCommentsObj));\r\n    asyncLocalStorage.setItem(\"resultsPostsort\", JSON.stringify(results));\r\n  }; // end onBlur\r\n\r\n  // render elements\r\n  return highCards2.map((item, index) => {\r\n    let content = ReactHtmlParser(`<div>${decodeHTML(item.statement)}</div>`);\r\n    let allCommentsObj =\r\n      JSON.parse(localStorage.getItem(\"allCommentsObj\")) || {};\r\n    let cardComment =\r\n      allCommentsObj[`textArea-${columnDisplay}_${+index + 1}`] || \"\";\r\n\r\n    if (configObj.useImages === true) {\r\n      content = ReactHtmlParser(\r\n        `<img src=\"${item.element.props.src}\" style=\"pointer-events: all\" alt=${item.element.props.alt} />`\r\n      );\r\n    }\r\n\r\n    let highlighting = true;\r\n    if (\r\n      configObj.postsortCommentsRequired === \"true\" ||\r\n      configObj.postsortCommentsRequired === true\r\n    ) {\r\n      if (showPostsortCommentHighlighting === true) {\r\n        highlighting = requiredCommentsObject[`hc2-${index}`];\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container key={item.statement}>\r\n        <Modal\r\n          open={openImageModal}\r\n          center\r\n          onClose={() => setOpenImageModal(false)}\r\n          classNames={{\r\n            modal: `${configObj.imageFormat}`,\r\n            overlay: \"dualImageOverlay\",\r\n          }}\r\n        >\r\n          <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n        </Modal>\r\n        <Modal\r\n          open={openDualImageModal}\r\n          center\r\n          onClose={() => {\r\n            setOpenDualImageModal(false);\r\n            setPostsortDualImageArray([]);\r\n          }}\r\n          classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n        >\r\n          <img\r\n            src={postsortDualImageArray[0]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            alt=\"modalImage\"\r\n          />\r\n          <img\r\n            src={postsortDualImageArray[1]}\r\n            width=\"49.5%\"\r\n            height=\"auto\"\r\n            style={{ marginLeft: \"1%\" }}\r\n            alt=\"modalImage2\"\r\n          />\r\n        </Modal>\r\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\r\n        <CardAndTextHolder>\r\n          <Card\r\n            cardFontSize={cardFontSize}\r\n            width={width}\r\n            height={height}\r\n            onClick={(e) => handleOpenImageModal(e, item.element.props.src)}\r\n          >\r\n            {content}\r\n          </Card>\r\n          <TagContainerDiv>\r\n            <CommentArea\r\n              bgColor={highlighting}\r\n              border={highlighting}\r\n              data-gramm_editor=\"false\"\r\n              height={height}\r\n              cardFontSize={cardFontSize}\r\n              id={item.id}\r\n              placeholder={placeholder}\r\n              defaultValue={cardComment}\r\n              onChange={(e) => {\r\n                onChange(e, index);\r\n              }}\r\n            />\r\n          </TagContainerDiv>\r\n        </CardAndTextHolder>\r\n      </Container>\r\n    );\r\n  });\r\n};\r\n\r\nexport default HighCards2Display;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  max-width: 1100px;\r\n  margin-top: 50px;\r\n  border-radius: 3px;\r\n  border: 1px solid darkgray;\r\n`;\r\n\r\nconst CardTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  background: #c7f6c7;\r\n  color: black;\r\n  text-align: center;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  height: 1.5em;\r\n`;\r\n\r\nconst CardAndTextHolder = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  background: rgb(224, 224, 224);\r\n  width: 100%;\r\n`;\r\n\r\nconst CommentArea = styled.textarea`\r\n  padding: 10px;\r\n  margin-top: 2px;\r\n  background-color: ${(props) =>\r\n    props.bgColor ? \"whitesmoke\" : \"rgba(253, 224, 71, .5)\"};\r\n  height: ${(props) => `${props.height}px;`};\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  width: calc(100% - 6px);\r\n  border: 2px solid darkgray;\r\n  border-radius: 3px;\r\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\r\n`;\r\n\r\nconst TagContainerDiv = styled.div`\r\n  padding-top: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  user-select: \"none\";\r\n  padding: 0 2px 0 2px;\r\n  margin: 5px 5px 5px 5px;\r\n  line-height: 1em;\r\n  height: ${(props) => `${props.height}px;`};\r\n  width: 35vw;\r\n  // max-width: ${(props) => `${props.width}px;`};\r\n  border-radius: 5px;\r\n  font-size: ${(props) => `${props.cardFontSize}px`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 2px solid black;\r\n  background-color: #f6f6f6;\r\n  text-align: center;\r\n\r\n  img {\r\n    object-fit: contain;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerPostsortModal = (state) => state.triggerPostsortModal;\r\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\r\n\r\nconst PostsortHelpModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerPostsortModal = useStore(getTriggerPostsortModal);\r\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\r\n\r\n  const postsortHelpModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortModalHead)) || \"\";\r\n  const postsortHelpModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerPostsortModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerPostsortModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{postsortHelpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{postsortHelpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PostsortHelpModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React, { useEffect } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nconst PromptUnload = () => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", alertUser);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", alertUser);\r\n    };\r\n  }, []);\r\n\r\n  const alertUser = (e) => {\r\n    // e.preventDefault();\r\n    // e.returnValue = \"\";\r\n    var message = \"o/\";\r\n\r\n    (e || window.event).returnValue = message; //Gecko + IE\r\n    return message;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Prompt\r\n        when={false}\r\n        message={() => \"Are you sure you want to leave this page?\"}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PromptUnload;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerPostsortPreventNavModal;\r\nconst getSetTrigPostPrevNavModal = (state) =>\r\n  state.setTriggerPostsortPreventNavModal;\r\n\r\nconst PostsortPreventNavModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n\r\n  const setTriggerPostsortPreventNavModal = useStore(\r\n    getSetTrigPostPrevNavModal\r\n  );\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortPreventNavModalHead)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortPreventNavModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerPostsortPreventNavModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PostsortPreventNavModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport LowCards from \"./LowCards\";\r\nimport LowCards2 from \"./LowCards2\";\r\nimport HighCards from \"./HighCards\";\r\nimport HighCards2 from \"./HighCards2\";\r\nimport styled from \"styled-components\";\r\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport PostsortHelpModal from \"./PostsortHelpModal\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\nimport PostsortPreventNavModal from \"./PostsortPreventNavModal\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getMapObj = (state) => state.mapObj;\r\nconst getSetProgressScore = (state) => state.setProgressScore;\r\nconst getCardHeightPostsort = (state) => state.cardHeightPostsort;\r\nconst getCardFontSizePostsort = (state) => state.cardFontSizePostsort;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\n\r\nconst PostSort = () => {\r\n  const ElementRef = useRef(null);\r\n\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const mapObj = useSettingsStore(getMapObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const setProgressScore = useStore(getSetProgressScore);\r\n  let cardHeightPostsort = useStore(getCardHeightPostsort);\r\n  let cardFontSizePostsort = useStore(getCardFontSizePostsort);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n\r\n  // PERSISTENT STATE\r\n  const columnStatements = JSON.parse(localStorage.getItem(\"columnStatements\"));\r\n  let cardFontSizePersist = +JSON.parse(\r\n    localStorage.getItem(\"fontSizePostsort\")\r\n  );\r\n  let cardHeightPersist = +JSON.parse(\r\n    localStorage.getItem(\"cardHeightPostsort\")\r\n  );\r\n\r\n  if (cardFontSizePersist) {\r\n    cardFontSizePostsort = cardFontSizePersist;\r\n  }\r\n\r\n  if (cardHeightPersist) {\r\n    cardHeightPostsort = cardHeightPersist;\r\n  }\r\n\r\n  // set next button display\r\n  setDisplayNextButton(true);\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const postsortInstructions =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortInstructions)) || \"\";\r\n\r\n  useEffect(() => {\r\n    const Elementcount = ElementRef.current.childNodes.length;\r\n    localStorage.setItem(\"postsortCommentCardCount\", Elementcount - 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    let startTime = Date.now();\r\n    const setStateAsync = async () => {\r\n      await setCurrentPage(\"postsort\");\r\n      await setProgressScore(50);\r\n    };\r\n    setStateAsync();\r\n    return () => {\r\n      calculateTimeOnPage(startTime, \"postsortPage\", \"postsortPage\");\r\n    };\r\n  }, [setCurrentPage, setProgressScore]);\r\n\r\n  // pull data from localStorage\r\n  const columnWidth = 250;\r\n\r\n  const titleText = ReactHtmlParser(decodeHTML(langObj.postsortHeader)) || \"\";\r\n  const agree = ReactHtmlParser(decodeHTML(langObj.postsortAgreement)) || \"\";\r\n  const disagree =\r\n    ReactHtmlParser(decodeHTML(langObj.postsortDisagreement)) || \"\";\r\n  const placeholder = langObj.placeholder;\r\n\r\n  const keys = Object.keys(mapObj.postsortConvertObj);\r\n  const agreeColDisp1 = keys.pop();\r\n  const agreeColDisp2 = keys.pop();\r\n  const disagreeColDisp1 = keys.shift();\r\n  const disagreeColDisp2 = keys.shift();\r\n\r\n  const postsortAgreeColDisp1 = agreeColDisp1;\r\n  const postsortAgreeColDisp2 = agreeColDisp2;\r\n  const showSecondPosColumn = configObj.showSecondPosColumn;\r\n  const postsortDisagreeColDisp1 = disagreeColDisp1;\r\n  const postsortDisagreeColDisp2 = disagreeColDisp2;\r\n  const showSecondNegColumn = configObj.showSecondNegColumn;\r\n\r\n  const agreeObj = {};\r\n  agreeObj.agreeText = agree;\r\n  agreeObj.columnDisplay = [postsortAgreeColDisp1];\r\n  agreeObj.columnDisplay2 = [postsortAgreeColDisp2];\r\n  agreeObj.displaySecondColumn = showSecondPosColumn;\r\n  agreeObj.placeholder = placeholder;\r\n\r\n  const disagreeObj = {};\r\n  disagreeObj.disagreeText = disagree;\r\n  disagreeObj.columnDisplay = [postsortDisagreeColDisp1];\r\n  disagreeObj.columnDisplay2 = [postsortDisagreeColDisp2];\r\n  disagreeObj.displaySecondColumn = showSecondNegColumn;\r\n  disagreeObj.placeholder = placeholder;\r\n\r\n  const highCards = columnStatements?.vCols[agreeObj.columnDisplay];\r\n  const highCards2 = columnStatements?.vCols[agreeObj.columnDisplay2];\r\n  // const neutralCards = columnStatements.vCols[neutralObj.columnDisplay];\r\n  const lowCards = columnStatements?.vCols[disagreeObj.columnDisplay];\r\n  const lowCards2 = columnStatements?.vCols[disagreeObj.columnDisplay2];\r\n\r\n  return (\r\n    <div>\r\n      <PromptUnload />\r\n      <PostsortHelpModal />\r\n      <PostsortPreventNavModal />\r\n      <SortTitleBar background={headerBarColor}>{titleText}</SortTitleBar>\r\n      <CardsContainer ref={ElementRef}>\r\n        <PostsortInstructions>{postsortInstructions}</PostsortInstructions>\r\n        <HighCards\r\n          agreeObj={agreeObj}\r\n          height={cardHeightPostsort}\r\n          cardFontSize={cardFontSizePostsort}\r\n          width={columnWidth}\r\n          highCards={highCards}\r\n        />\r\n        {agreeObj.displaySecondColumn && (\r\n          <HighCards2\r\n            agreeObj={agreeObj}\r\n            height={cardHeightPostsort}\r\n            cardFontSize={cardFontSizePostsort}\r\n            width={columnWidth}\r\n            highCards2={highCards2}\r\n          />\r\n        )}\r\n        {disagreeObj.displaySecondColumn && (\r\n          <LowCards2\r\n            disagreeObj={disagreeObj}\r\n            height={cardHeightPostsort}\r\n            cardFontSize={cardFontSizePostsort}\r\n            width={columnWidth}\r\n            lowCards2={lowCards2}\r\n          />\r\n        )}\r\n        <LowCards\r\n          disagreeObj={disagreeObj}\r\n          height={cardHeightPostsort}\r\n          cardFontSize={cardFontSizePostsort}\r\n          width={columnWidth}\r\n          lowCards={lowCards}\r\n        />\r\n      </CardsContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostSort;\r\n\r\nconst CardsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-bottom: 150px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: 100vw;\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 5px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  position: fixed;\r\n  top: 0;\r\n`;\r\n\r\nconst PostsortInstructions = styled.div`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-self: center;\r\n  margin-top: 30px;\r\n  text-align: center;\r\n  color: black;\r\n  font-size: 2vh;\r\n  font-weight: normal;\r\n  max-width: 1100px;\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst PresortModal = () => {\r\n  const getLangObj = (state) => state.langObj;\r\n  const getTriggerPresortModal = (state) => state.triggerPresortModal;\r\n  const getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\r\n\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerPresortModal = useStore(getTriggerPresortModal);\r\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\r\n\r\n  /*\r\n  const hasPresortSortingStarted = localStorage.getItem(\"columns\");\r\n  if (hasPresortSortingStarted && hasPresortSortingStarted.length > 0) {\r\n    setTriggerPresortModal(false);\r\n  }\r\n  */\r\n\r\n  const onCloseModal = () => {\r\n    setTriggerPresortModal(false);\r\n  };\r\n\r\n  const header = ReactHtmlParser(decodeHTML(langObj.presortModalHead)) || \"\";\r\n  const modalText = ReactHtmlParser(decodeHTML(langObj.presortModalText)) || \"\";\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerPresortModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{header}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PresortModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getStatementsObj = (state) => state.statementsObj;\r\nconst getColumnStatements = (state) => state.columnStatements;\r\nconst getPreSortedStateNumInit = (state) =>\r\n  state.presortSortedStatementsNumInitial;\r\n// const getSetColumnStatements = (state) => state.setColumnStatements;\r\nconst getSetPresortFinished = (state) => state.setPresortFinished;\r\nconst getSetTrigPresortFinModal = (state) =>\r\n  state.setTriggerPresortFinishedModal;\r\nconst getResults = (state) => state.results;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getSetProgressScoreAdditional = (state) =>\r\n  state.setProgressScoreAdditional;\r\n\r\nfunction PresortDND(props) {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const statementsObj = useSettingsStore(getStatementsObj);\r\n  const columnStatements = useSettingsStore(getColumnStatements);\r\n  const presortSortedStatementsNumInitial = useStore(getPreSortedStateNumInit);\r\n  // const setColumnStatements = useSettingsStore(getSetColumnStatements);\r\n  const setPresortFinished = useStore(getSetPresortFinished);\r\n  const setTriggerPresortFinishedModal = useStore(getSetTrigPresortFinModal);\r\n  const results = useStore(getResults);\r\n  const setResults = useStore(getSetResults);\r\n  const setProgressScoreAdditional = useStore(getSetProgressScoreAdditional);\r\n\r\n  const statementsName =\r\n    ReactHtmlParser(decodeHTML(langObj.presortStatements)) || \"\";\r\n  const btnDisagreement =\r\n    ReactHtmlParser(decodeHTML(langObj.presortDisagreement)) || \"\";\r\n  const btnAgreement =\r\n    ReactHtmlParser(decodeHTML(langObj.presortAgreement)) || \"\";\r\n  const btnNeutral = ReactHtmlParser(decodeHTML(langObj.presortNeutral)) || \"\";\r\n  const onPageInstructions =\r\n    ReactHtmlParser(decodeHTML(langObj.presortOnPageInstructions)) || \"\";\r\n\r\n  // initialize local state\r\n  let [presortSortedStatementsNum, setPresortSortedStatementsNum] = useState(\r\n    presortSortedStatementsNumInitial\r\n  );\r\n\r\n  const cardFontSize = `${props.cardFontSize}px`;\r\n  let defaultFontColor = configObj.defaultFontColor;\r\n  let statementsLength = columnStatements.statementList.length;\r\n\r\n  const cardHeight = 210;\r\n\r\n  const [columns, setColumns] = useLocalStorage(\"columns\", {\r\n    cards: {\r\n      name: statementsName,\r\n      items: [...props.statements],\r\n      id: \"cards\",\r\n    },\r\n    neg: {\r\n      name: btnDisagreement,\r\n      items: [],\r\n      id: \"neg\",\r\n    },\r\n    neutral: {\r\n      name: btnNeutral,\r\n      items: [],\r\n      id: \"neutral\",\r\n    },\r\n    pos: {\r\n      name: btnAgreement,\r\n      id: \"pos\",\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  // default = positive sort direction\r\n  let pinkArraySortValue = 333,\r\n    greenArraySortValue = 111;\r\n  if (configObj.sortDirection === \"negative\") {\r\n    pinkArraySortValue = 111;\r\n    greenArraySortValue = 333;\r\n  }\r\n\r\n  const onDragEnd = useCallback(\r\n    (result, columns, setColumns) => {\r\n      if (!result.destination || result.destination.droppableId === \"cards\") {\r\n        return;\r\n      }\r\n      const { source, destination } = result;\r\n\r\n      // update statement characteristics\r\n      const statementsArray = [...columnStatements.statementList];\r\n      const destinationId = result.destination.droppableId;\r\n      const draggableId = result.draggableId;\r\n\r\n      // set METADATA FOR SORTING\r\n      for (let i = 0; i < statementsArray.length; i++) {\r\n        if (statementsArray[i].id === draggableId) {\r\n          if (destinationId === \"neg\") {\r\n            statementsArray[i].divColor = \"isNegativeStatement\";\r\n            statementsArray[i].cardColor = \"pinkSortCard\";\r\n            statementsArray[i].pinkChecked = true;\r\n            statementsArray[i].yellowChecked = false;\r\n            statementsArray[i].greenChecked = false;\r\n            statementsArray[i].sortValue = pinkArraySortValue;\r\n          }\r\n          if (destinationId === \"neutral\") {\r\n            statementsArray[i].divColor = \"isUncertainStatement\";\r\n            statementsArray[i].cardColor = \"yellowSortCard\";\r\n            statementsArray[i].pinkChecked = false;\r\n            statementsArray[i].yellowChecked = true;\r\n            statementsArray[i].greenChecked = false;\r\n            statementsArray[i].sortValue = 222;\r\n          }\r\n          if (destinationId === \"pos\") {\r\n            statementsArray[i].divColor = \"isPositiveStatement\";\r\n            statementsArray[i].cardColor = \"greenSortCard\";\r\n            statementsArray[i].pinkChecked = false;\r\n            statementsArray[i].yellowChecked = false;\r\n            statementsArray[i].greenChecked = true;\r\n            statementsArray[i].sortValue = greenArraySortValue;\r\n          }\r\n        }\r\n      }\r\n\r\n      // set new ordering\r\n      for (let i = 0; i < statementsArray.length; i++) {\r\n        statementsArray[i].listIndex = i + 1;\r\n      }\r\n\r\n      // save to memory\r\n      columnStatements.statementList = [...statementsArray];\r\n      //setColumnStatements(columnStatements);\r\n      localStorage.setItem(\r\n        \"columnStatements\",\r\n        JSON.stringify(columnStatements)\r\n      );\r\n\r\n      // when dropped on different droppable\r\n      if (source.droppableId !== destination.droppableId) {\r\n        try {\r\n          const sourceColumn = columns[source.droppableId];\r\n          const destColumn = columns[destination.droppableId];\r\n          const sourceItems = [...sourceColumn.items];\r\n          const destItems = [...destColumn.items];\r\n          const [removed] = sourceItems.splice(source.index, 1);\r\n\r\n          // change background color\r\n          if (destColumn.id === \"pos\") {\r\n            removed.backgroundColor = configObj.greenCardColor;\r\n          }\r\n          if (destColumn.id === \"neg\") {\r\n            removed.backgroundColor = configObj.pinkCardColor;\r\n          }\r\n          if (destColumn.id === \"neutral\") {\r\n            removed.backgroundColor = configObj.yellowCardColor;\r\n          }\r\n\r\n          destItems.splice(destination.index, 0, removed);\r\n\r\n          // update columns\r\n          setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n              ...sourceColumn,\r\n              items: sourceItems,\r\n            },\r\n            [destination.droppableId]: {\r\n              ...destColumn,\r\n              items: destItems,\r\n            },\r\n          });\r\n\r\n          // calc remaining statements\r\n          let sortedStatements;\r\n          if (sourceColumn.id === \"cards\") {\r\n            sortedStatements =\r\n              statementsObj.totalStatements - sourceColumn.items.length + 1;\r\n            setPresortSortedStatementsNum(sortedStatements);\r\n            const ratio = sortedStatements / statementsObj.totalStatements;\r\n            const completedPercent = (ratio * 30).toFixed();\r\n\r\n            // update Progress Bar State\r\n            setProgressScoreAdditional(completedPercent);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      } else {\r\n        try {\r\n          // MOVING BETWEEN COLUMNS\r\n          const sourceCol = columns[source.droppableId];\r\n          const copiedItems = [...sourceCol.items];\r\n          const [removed] = copiedItems.splice(source.index, 1);\r\n          copiedItems.splice(destination.index, 0, removed);\r\n          setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n              ...sourceCol,\r\n              items: copiedItems,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    },\r\n    [\r\n      configObj,\r\n      columnStatements,\r\n      statementsObj,\r\n      setProgressScoreAdditional,\r\n      greenArraySortValue,\r\n      pinkArraySortValue,\r\n    ]\r\n  ); // END DRAG-END\r\n\r\n  useEffect(() => {\r\n    const handleKeyUp = (event) => {\r\n      let target;\r\n      if (event.key === \"1\" || event.key === 1) {\r\n        target = \"neg\";\r\n      } else if (event.key === \"2\" || event.key === 2) {\r\n        target = \"neutral\";\r\n      } else if (event.key === \"3\" || event.key === 3) {\r\n        target = \"pos\";\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      if (columns.cards.items.length > 0) {\r\n        let source = columns.cards.items[0].id;\r\n        const results = {\r\n          draggableId: source,\r\n          type: \"DEFAULT\",\r\n          source: {\r\n            index: 0,\r\n            droppableId: \"cards\",\r\n          },\r\n          reason: \"DROP\",\r\n          mode: \"FLUID\",\r\n          destination: {\r\n            droppableId: target,\r\n            index: 0,\r\n          },\r\n          combine: null,\r\n        };\r\n\r\n        onDragEnd(results, columns, setColumns);\r\n      }\r\n    }; // end keyup\r\n\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\r\n  }, [onDragEnd, setColumns, columns]);\r\n\r\n  useEffect(() => {\r\n    let posText = \"\";\r\n    let neutralText = \"\";\r\n    let negText = \"\";\r\n\r\n    columns.pos.items.forEach((item) => {\r\n      if (columns.pos.items[0]) {\r\n        posText += item.statementNum + \",\";\r\n      }\r\n    });\r\n\r\n    if (columns.neutral.items[0]) {\r\n      columns.neutral.items.forEach((item) => {\r\n        neutralText += item.statementNum + \",\";\r\n      });\r\n    }\r\n\r\n    if (columns.neg.items[0]) {\r\n      columns.neg.items.forEach((item) => {\r\n        negText += item.statementNum + \",\";\r\n      });\r\n    }\r\n\r\n    let projectResultsObj = results;\r\n    projectResultsObj.npos = columns.pos.items.length;\r\n    projectResultsObj.posStateNums = posText;\r\n    projectResultsObj.nneu = columns.neutral.items.length;\r\n    projectResultsObj.neuStateNums = neutralText;\r\n    projectResultsObj.nneg = columns.neg.items.length;\r\n    projectResultsObj.negStateNums = negText;\r\n    setResults(projectResultsObj);\r\n    localStorage.setItem(\"resultsPresort\", JSON.stringify(projectResultsObj));\r\n  }, [columns, results, setResults]);\r\n\r\n  useEffect(() => {\r\n    if (columns.cards.items.length === 0) {\r\n      setPresortFinished(true);\r\n      setTriggerPresortFinishedModal(true);\r\n    }\r\n  }, [\r\n    columns.cards.items.length,\r\n    setPresortFinished,\r\n    setTriggerPresortFinishedModal,\r\n  ]);\r\n\r\n  // RENDER COMPONENT\r\n\r\n  return (\r\n    <PresortGrid id=\"statementsGrid\">\r\n      <ImageEnlargeInstructionsDiv id=\"imageEnlargeInstructionsDiv\">\r\n        <div>{onPageInstructions}</div>\r\n      </ImageEnlargeInstructionsDiv>\r\n      <CompletionRatioDiv id=\"completionRatio\">\r\n        {presortSortedStatementsNum}/{statementsLength}\r\n      </CompletionRatioDiv>\r\n      <ColumnNamesNeg id=\"negDivImg\">\r\n        <div>{columns.neg.name}</div>\r\n      </ColumnNamesNeg>\r\n      <ColumnNamesNeu id=\"negDivImg\">\r\n        <div>{columns.neutral.name}</div>\r\n      </ColumnNamesNeu>\r\n      <ColumnNamesPos id=\"negDivImg\">\r\n        <div>{columns.pos.name}</div>\r\n      </ColumnNamesPos>\r\n      <DragDropContext\r\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([columnId, column], index) => {\r\n          return (\r\n            <AllColWrapper\r\n              key={columnId}\r\n              id={`${columnId}Div`}\r\n              className={`${columnId}Div`}\r\n            >\r\n              <ThreeColCardWrapper>\r\n                <Droppable\r\n                  droppableId={columnId}\r\n                  className={columnId}\r\n                  key={columnId}\r\n                >\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        id={columnId}\r\n                        className={columnId}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                            ? \"lightblue\"\r\n                            : \"white\",\r\n                          padding: 4,\r\n                          width: \"100%\",\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          const statementHtml = ReactHtmlParser(\r\n                            `<div>${decodeHTML(item.statement)}</div>`\r\n                          );\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              id={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                              className=\"dragObject\"\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <DroppableContainer\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 6,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      width: \"100%\",\r\n                                      height: cardHeight,\r\n                                      overflow: \"hidden\",\r\n                                      fontSize: cardFontSize,\r\n                                      filter: snapshot.isDragging\r\n                                        ? \"brightness(0.85)\"\r\n                                        : \"brightness(1.00)\",\r\n                                      backgroundColor: snapshot.isDragging\r\n                                        ? item.backgroundColor\r\n                                        : item.backgroundColor,\r\n                                      color: defaultFontColor,\r\n                                      ...provided.draggableProps.style,\r\n                                    }}\r\n                                  >\r\n                                    {statementHtml}\r\n                                  </DroppableContainer>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </ThreeColCardWrapper>\r\n            </AllColWrapper>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n    </PresortGrid>\r\n  );\r\n}\r\n\r\nexport default PresortDND;\r\nconst ColumnNamesNeg = styled.div`\r\n  display: flex;\r\n  grid-column-start: 2;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    outline: 1px solid #a8a8a8;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255, 182, 193, 0.4);\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnNamesNeu = styled.div`\r\n  display: flex;\r\n  align-self: center;\r\n  grid-column-start: 3;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    outline: 1px solid #a8a8a8;\r\n    background-color: lightgray;\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnNamesPos = styled.div`\r\n  display: flex;\r\n  grid-column-start: 4;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(199, 246, 199, 0.6);\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n    outline: 1px solid #a8a8a8;\r\n  }\r\n`;\r\n\r\nconst PresortGrid = styled.div`\r\n  padding-top: 10px;\r\n  margin-top: 25px;\r\n  margin-bottom: 55px;\r\n  display: grid;\r\n  height: calc(100vh-100px);\r\n  grid-template-rows: 34h 25px 40vh;\r\n  grid-template-columns: 0.25fr 1.5fr 1.5fr 1.5fr 0.25fr;\r\n  row-gap: 3px;\r\n  column-gap: 15px;\r\n  overflow-y: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n`;\r\n\r\nconst DroppableContainer = styled.div`\r\n  background-color: \"#83cafe\";\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  width: 27.8vw;\r\n  border: 1px solid #a8a8a8;\r\n`;\r\n\r\nconst ThreeColCardWrapper = styled.div`\r\n  margin: 4px;\r\n  img {\r\n    max-width: 98%;\r\n    max-height: 98%;\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nconst CompletionRatioDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 60px;\r\n  font-weight: bold;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\n`;\r\n\r\nconst ImageEnlargeInstructionsDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 16px;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst AllColWrapper = styled.div`\r\n  margin: 4px;\r\n  display: \"flex\";\r\n  flex-direction: \"column\";\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerPresortPreventNavModal;\r\nconst getSetTrigPrePrevNavModal = (state) =>\r\n  state.setTriggerPresortPreventNavModal;\r\n\r\nconst PresortPreventNavModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.presortPreventNavModalHead)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.presortPreventNavModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerPresortPreventNavModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PresortPreventNavModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModal = (state) => state.triggerPresortFinishedModal;\r\nconst getSetTriggerModal = (state) => state.setTriggerPresortFinishedModal;\r\n\r\nconst PresortFinishedModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModal = useStore(getTriggerModal);\r\n  const setTriggerModal = useStore(getSetTriggerModal);\r\n\r\n  const loginHelpModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.presortFinishedModalHead)) || \"\";\r\n  const loginHelpModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.presortFinishedModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{loginHelpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PresortFinishedModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\n\r\nconst PresortIsComplete = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const mainText =\r\n    ReactHtmlParser(decodeHTML(langObj.stepCompleteMessage)) || \"\";\r\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText)) || \"\";\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(\"presort\");\r\n  }, [setCurrentPage]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\r\n      <ContainerDiv>\r\n        <ContentDiv>{mainText}</ContentDiv>\r\n      </ContainerDiv>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PresortIsComplete;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: calc(100vw-4px);\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 5px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: flex;\r\n  min-height: 800px;\r\n  width: calc(100vw-4px);\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.2em;\r\n  width: 85vw;\r\n  font-size: 1.35em;\r\n  padding: 25px;\r\n  align-self: center;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\n\r\nconst PleaseLogInFirst = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const mainText = ReactHtmlParser(decodeHTML(langObj.logInFirst));\r\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(\"presort\");\r\n  }, [setCurrentPage]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\r\n      <ContainerDiv>\r\n        <ContentDiv>{mainText}</ContentDiv>\r\n      </ContainerDiv>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PleaseLogInFirst;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: calc(100vw-4px);\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 5px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: flex;\r\n  min-height: 800px;\r\n  width: calc(100vw-4px);\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.2em;\r\n  width: 85vw;\r\n  font-size: 1.35em;\r\n  padding: 25px;\r\n  align-self: center;\r\n`;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getStatementsObj = (state) => state.statementsObj;\r\nconst getColumnStatements = (state) => state.columnStatements;\r\n// const getSetColumnStatements = (state) => state.setColumnStatements;\r\nconst getSetPresortFinished = (state) => state.setPresortFinished;\r\nconst getSetTrigPresortFinModal = (state) =>\r\n  state.setTriggerPresortFinishedModal;\r\nconst getResults = (state) => state.results;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getSetProgressScoreAdditional = (state) =>\r\n  state.setProgressScoreAdditional;\r\n\r\n/*\r\n *\r\n *  drop column css is in \"globalCSS.js\" and column ids are generated string concatenations\r\n *  cardsDivImg, negDivImg,\r\n */\r\n\r\nfunction PresortDNDImages(props) {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const statementsObj = useSettingsStore(getStatementsObj);\r\n  const columnStatements = useSettingsStore(getColumnStatements);\r\n  // const presortSortedStatementsNumInitial = useStore(getPreSortedStateNumInit);\r\n  // const setColumnStatements = useSettingsStore(getSetColumnStatements);\r\n  const setPresortFinished = useStore(getSetPresortFinished);\r\n  const setTriggerPresortFinishedModal = useStore(getSetTrigPresortFinModal);\r\n  const results = useStore(getResults);\r\n  const setResults = useStore(getSetResults);\r\n  const setProgressScoreAdditional = useStore(getSetProgressScoreAdditional);\r\n\r\n  let imageWidth = \"24vw\";\r\n  if (configObj.imageFormat === \"postSortImageModal43\") {\r\n    imageWidth = \"20vw\";\r\n  }\r\n  const statementsName =\r\n    ReactHtmlParser(decodeHTML(langObj.presortStatements)) || \"\";\r\n  const btnDisagreement =\r\n    ReactHtmlParser(decodeHTML(langObj.presortDisagreement)) || \"\";\r\n  const btnAgreement =\r\n    ReactHtmlParser(decodeHTML(langObj.presortAgreement)) || \"\";\r\n  const btnNeutral = ReactHtmlParser(decodeHTML(langObj.presortNeutral)) || \"\";\r\n  const enlargeText =\r\n    ReactHtmlParser(decodeHTML(langObj.presortImageSortInstructions)) || \"\";\r\n\r\n  // initialize local state\r\n  let [presortSortedStatementsNum, setPresortSortedStatementsNum] =\r\n    useLocalStorage(\"presortSortedCards\", 0);\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [dualPhotoArray, setDualPhotoArray] = useState([]);\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        dualPhotoArray.push(e.target.src);\r\n        setDualPhotoArray(dualPhotoArray);\r\n        if (dualPhotoArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  let statementsLength = columnStatements.imagesList.length;\r\n  const cardFontSize = `${props.cardFontSize}px`;\r\n  let defaultFontColor = configObj.defaultFontColor;\r\n\r\n  const [columns, setColumns] = useLocalStorage(\"columns\", {\r\n    cards: {\r\n      name: statementsName,\r\n      items: [...columnStatements.imagesList],\r\n      id: \"cards\",\r\n    },\r\n    neg: {\r\n      name: btnDisagreement,\r\n      items: [],\r\n      id: \"neg\",\r\n    },\r\n    neutral: {\r\n      name: btnNeutral,\r\n      items: [],\r\n      id: \"neutral\",\r\n    },\r\n    pos: {\r\n      name: btnAgreement,\r\n      id: \"pos\",\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  // default = positive sort direction\r\n  let pinkArraySortValue = 333,\r\n    greenArraySortValue = 111;\r\n  if (configObj.sortDirection === \"negative\") {\r\n    pinkArraySortValue = 111;\r\n    greenArraySortValue = 333;\r\n  }\r\n\r\n  const onDragEnd = useCallback(\r\n    (result, columns, setColumns) => {\r\n      if (!result.destination || result.destination.droppableId === \"cards\") {\r\n        return;\r\n      }\r\n      const { source, destination } = result;\r\n\r\n      // update statement characteristics\r\n      const imagesArray = [...columnStatements.imagesList];\r\n      const destinationId = result.destination.droppableId;\r\n      const draggableId = result.draggableId;\r\n\r\n      // set METADATA FOR SORTING\r\n      for (let i = 0; i < imagesArray.length; i++) {\r\n        if (imagesArray[i].id === draggableId) {\r\n          if (destinationId === \"neg\") {\r\n            imagesArray[i].divColor = \"isNegativeStatement\";\r\n            imagesArray[i].cardColor = \"pinkSortCard\";\r\n            imagesArray[i].pinkChecked = true;\r\n            imagesArray[i].yellowChecked = false;\r\n            imagesArray[i].greenChecked = false;\r\n            imagesArray[i].sortValue = pinkArraySortValue;\r\n          }\r\n          if (destinationId === \"neutral\") {\r\n            imagesArray[i].divColor = \"isUncertainStatement\";\r\n            imagesArray[i].cardColor = \"yellowSortCard\";\r\n            imagesArray[i].pinkChecked = false;\r\n            imagesArray[i].yellowChecked = true;\r\n            imagesArray[i].greenChecked = false;\r\n            imagesArray[i].sortValue = 222;\r\n          }\r\n          if (destinationId === \"pos\") {\r\n            imagesArray[i].divColor = \"isPositiveStatement\";\r\n            imagesArray[i].cardColor = \"greenSortCard\";\r\n            imagesArray[i].pinkChecked = false;\r\n            imagesArray[i].yellowChecked = false;\r\n            imagesArray[i].greenChecked = true;\r\n            imagesArray[i].sortValue = greenArraySortValue;\r\n          }\r\n        }\r\n      }\r\n\r\n      // set new ordering\r\n      for (let i = 0; i < imagesArray.length; i++) {\r\n        imagesArray[i].listIndex = i + 1;\r\n      }\r\n\r\n      // save to memory\r\n      columnStatements.imagesList = [...imagesArray];\r\n      // setColumnStatements(columnStatements);\r\n      localStorage.setItem(\r\n        \"columnStatements\",\r\n        JSON.stringify(columnStatements)\r\n      );\r\n\r\n      // when dropped on different droppable\r\n      if (source.droppableId !== destination.droppableId) {\r\n        try {\r\n          const sourceColumn = columns[source.droppableId];\r\n          const destColumn = columns[destination.droppableId];\r\n          const sourceItems = [...sourceColumn.items];\r\n          const destItems = [...destColumn.items];\r\n          const [removed] = sourceItems.splice(source.index, 1);\r\n\r\n          // change background color\r\n          if (destColumn.id === \"pos\") {\r\n            removed.backgroundColor = configObj.greenCardColor;\r\n          }\r\n          if (destColumn.id === \"neg\") {\r\n            removed.backgroundColor = configObj.pinkCardColor;\r\n          }\r\n          if (destColumn.id === \"neutral\") {\r\n            removed.backgroundColor = configObj.yellowCardColor;\r\n          }\r\n\r\n          destItems.splice(destination.index, 0, removed);\r\n\r\n          // update columns\r\n          setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n              ...sourceColumn,\r\n              items: sourceItems,\r\n            },\r\n            [destination.droppableId]: {\r\n              ...destColumn,\r\n              items: destItems,\r\n            },\r\n          });\r\n\r\n          // calc remaining statements\r\n          let sortedStatements;\r\n          if (sourceColumn.id === \"cards\") {\r\n            sortedStatements = statementsLength - sourceColumn.items.length + 1;\r\n            setPresortSortedStatementsNum(sortedStatements);\r\n            const ratio = sortedStatements / statementsObj.totalStatements;\r\n            const completedPercent = (ratio * 30).toFixed();\r\n\r\n            // update Progress Bar State\r\n            setProgressScoreAdditional(completedPercent);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      } else {\r\n        try {\r\n          // MOVING BETWEEN COLUMNS\r\n          const sourceCol = columns[source.droppableId];\r\n          const copiedItems = [...sourceCol.items];\r\n          const [removed] = copiedItems.splice(source.index, 1);\r\n          copiedItems.splice(destination.index, 0, removed);\r\n          setColumns({\r\n            ...columns,\r\n            [source.droppableId]: {\r\n              ...sourceCol,\r\n              items: copiedItems,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    },\r\n    [\r\n      configObj,\r\n      columnStatements,\r\n      statementsObj,\r\n      setProgressScoreAdditional,\r\n      statementsLength,\r\n      greenArraySortValue,\r\n      pinkArraySortValue,\r\n      setPresortSortedStatementsNum,\r\n    ]\r\n  ); // END DRAG-END\r\n\r\n  useEffect(() => {\r\n    const handleKeyUp = (event) => {\r\n      let target;\r\n      if (event.key === \"1\" || event.key === 1) {\r\n        target = \"neg\";\r\n      } else if (event.key === \"2\" || event.key === 2) {\r\n        target = \"neutral\";\r\n      } else if (event.key === \"3\" || event.key === 3) {\r\n        target = \"pos\";\r\n      } else {\r\n        return;\r\n      }\r\n\r\n      if (columns.cards.items.length > 0) {\r\n        let source = columns.cards.items[0].id;\r\n        const results = {\r\n          draggableId: source,\r\n          type: \"DEFAULT\",\r\n          source: {\r\n            index: 0,\r\n            droppableId: \"cards\",\r\n          },\r\n          reason: \"DROP\",\r\n          mode: \"FLUID\",\r\n          destination: {\r\n            droppableId: target,\r\n            index: 0,\r\n          },\r\n          combine: null,\r\n        };\r\n\r\n        onDragEnd(results, columns, setColumns);\r\n      }\r\n    }; // end keyup\r\n\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n\r\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\r\n  }, [onDragEnd, columns, setColumns]);\r\n\r\n  useEffect(() => {\r\n    let posText = \"\";\r\n    let neutralText = \"\";\r\n    let negText = \"\";\r\n\r\n    columns.pos.items.forEach((item) => {\r\n      if (columns.pos.items[0]) {\r\n        posText += item.statementNum + \",\";\r\n      }\r\n    });\r\n\r\n    if (columns.neutral.items[0]) {\r\n      columns.neutral.items.forEach((item) => {\r\n        neutralText += item.statementNum + \",\";\r\n      });\r\n    }\r\n\r\n    if (columns.neg.items[0]) {\r\n      columns.neg.items.forEach((item) => {\r\n        negText += item.statementNum + \",\";\r\n      });\r\n    }\r\n\r\n    let projectResultsObj = results;\r\n    projectResultsObj.npos = columns.pos.items.length;\r\n    projectResultsObj.posStateNums = posText;\r\n    projectResultsObj.nneu = columns.neutral.items.length;\r\n    projectResultsObj.neuStateNums = neutralText;\r\n    projectResultsObj.nneg = columns.neg.items.length;\r\n    projectResultsObj.negStateNums = negText;\r\n    setResults(projectResultsObj);\r\n    localStorage.setItem(\"resultsPresort\", JSON.stringify(projectResultsObj));\r\n  }, [columns, results, setResults]);\r\n\r\n  useEffect(() => {\r\n    if (columns.cards.items.length === 0) {\r\n      setPresortFinished(true);\r\n      setTriggerPresortFinishedModal(true);\r\n    }\r\n  }, [\r\n    columns.cards.items.length,\r\n    setPresortFinished,\r\n    setTriggerPresortFinishedModal,\r\n  ]);\r\n\r\n  // RENDER COMPONENT\r\n  return (\r\n    <PresortGrid id=\"imageGrid\">\r\n      <ImageEnlargeInstructionsDiv id=\"imageEnlargeInstructionsDiv\">\r\n        <div>{enlargeText}</div>\r\n      </ImageEnlargeInstructionsDiv>\r\n      <CompletionRatioDiv id=\"completionRatioImg\">\r\n        {presortSortedStatementsNum}/{statementsLength}\r\n      </CompletionRatioDiv>\r\n      <ColumnNamesNeg id=\"negDivImg\">\r\n        <div>{columns.neg.name}</div>\r\n      </ColumnNamesNeg>\r\n      <ColumnNamesNeu id=\"negDivImg\">\r\n        <div>{columns.neutral.name}</div>\r\n      </ColumnNamesNeu>\r\n      <ColumnNamesPos id=\"negDivImg\">\r\n        <div>{columns.pos.name}</div>\r\n      </ColumnNamesPos>\r\n\r\n      <Modal\r\n        open={openImageModal}\r\n        center\r\n        onClose={() => setOpenImageModal(false)}\r\n        classNames={{\r\n          modal: `${configObj.imageFormat}`,\r\n          overlay: \"dualImageOverlay\",\r\n        }}\r\n      >\r\n        <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n      </Modal>\r\n      <Modal\r\n        open={openDualImageModal}\r\n        center\r\n        onClose={() => {\r\n          setOpenDualImageModal(false);\r\n          setDualPhotoArray([]);\r\n        }}\r\n        classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n      >\r\n        <img\r\n          src={dualPhotoArray[0]}\r\n          width=\"49.5%\"\r\n          height=\"auto\"\r\n          alt=\"modalImage\"\r\n        />\r\n        <img\r\n          src={dualPhotoArray[1]}\r\n          width=\"49.5%\"\r\n          height=\"auto\"\r\n          style={{ marginLeft: \"1%\" }}\r\n          alt=\"modalImage2\"\r\n        />\r\n      </Modal>\r\n\r\n      <DragDropContext\r\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        {Object.entries(columns).map(([columnId, column], index) => {\r\n          return (\r\n            <AllColWrapper\r\n              key={columnId}\r\n              id={`${columnId}Div`}\r\n              className={`${columnId}DivImg`}\r\n            >\r\n              <ThreeColCardWrapper>\r\n                <Droppable\r\n                  droppableId={columnId}\r\n                  className={columnId}\r\n                  key={columnId}\r\n                >\r\n                  {(provided, snapshot) => {\r\n                    return (\r\n                      <div\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        id={columnId}\r\n                        className={columnId}\r\n                        style={{\r\n                          background: snapshot.isDraggingOver\r\n                            ? \"lightblue\"\r\n                            : \"white\",\r\n                          padding: 4,\r\n                          width: \"100%\",\r\n                          height: \"auto\",\r\n                        }}\r\n                      >\r\n                        {column.items.map((item, index) => {\r\n                          return (\r\n                            <Draggable\r\n                              key={item.id}\r\n                              id={item.id}\r\n                              draggableId={item.id}\r\n                              index={index}\r\n                              className=\"dragObject\"\r\n                            >\r\n                              {(provided, snapshot) => {\r\n                                return (\r\n                                  <DroppableContainer\r\n                                    id=\"DroppableContainer\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    imageWidth={imageWidth}\r\n                                    style={{\r\n                                      userSelect: \"none\",\r\n                                      padding: 2,\r\n                                      margin: \"0 0 8px 0\",\r\n                                      overflow: \"hidden\",\r\n                                      fontSize: cardFontSize,\r\n                                      filter: snapshot.isDragging\r\n                                        ? \"brightness(0.85)\"\r\n                                        : \"brightness(1.00)\",\r\n                                      backgroundColor: snapshot.isDragging\r\n                                        ? item.backgroundColor\r\n                                        : item.backgroundColor,\r\n                                      color: defaultFontColor,\r\n                                      ...provided.draggableProps.style,\r\n                                    }}\r\n                                    onClick={(e) =>\r\n                                      handleOpenImageModal(\r\n                                        e,\r\n                                        item.element.props.src\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      src={item.element.props.src}\r\n                                      alt={item.element.props.alt}\r\n                                    />\r\n                                  </DroppableContainer>\r\n                                );\r\n                              }}\r\n                            </Draggable>\r\n                          );\r\n                        })}\r\n                        {provided.placeholder}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </ThreeColCardWrapper>\r\n            </AllColWrapper>\r\n          );\r\n        })}\r\n      </DragDropContext>\r\n    </PresortGrid>\r\n  );\r\n}\r\n\r\nexport default PresortDNDImages;\r\n\r\nconst ColumnNamesNeg = styled.div`\r\n  display: flex;\r\n  grid-column-start: 2;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    outline: 1px solid #a8a8a8;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255, 182, 193, 0.4);\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnNamesNeu = styled.div`\r\n  display: flex;\r\n  align-self: center;\r\n  grid-column-start: 3;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    outline: 1px solid #a8a8a8;\r\n    background-color: lightgray;\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst ColumnNamesPos = styled.div`\r\n  display: flex;\r\n  grid-column-start: 4;\r\n  grid-row-start: 2;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(199, 246, 199, 0.6);\r\n    min-width: 50%;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n    outline: 1px solid #a8a8a8;\r\n  }\r\n`;\r\n\r\nconst PresortGrid = styled.div`\r\n  padding-top: 10px;\r\n  margin-top: 25px;\r\n  margin-bottom: 55px;\r\n  display: grid;\r\n  height: calc(100vh-100px);\r\n  grid-template-rows: 34h 25px 40vh;\r\n  grid-template-columns: 0.25fr 1.5fr 1.5fr 1.5fr 0.25fr;\r\n  row-gap: 3px;\r\n  column-gap: 15px;\r\n  overflow-y: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n`;\r\n\r\nconst DroppableContainer = styled.div`\r\n  background-color: \"#83cafe\";\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  width: 27.8vw;\r\n  // margin-left: 15px;\r\n  // border: 1px solid #a8a8a8;\r\n  img {\r\n    width: ${(props) => props.imageWidth} !important;\r\n    height: auto;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst ThreeColCardWrapper = styled.div`\r\n  margin: 4px;\r\n  img {\r\n    object-fit: contain;\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nconst CompletionRatioDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 60px;\r\n  font-weight: bold;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\n`;\r\n\r\nconst ImageEnlargeInstructionsDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n  font-size: 16px;\r\n  padding-left: 3px;\r\n  padding-right: 3px;\r\n  width: 100%;\r\n`;\r\n\r\nconst AllColWrapper = styled.div`\r\n  margin: 4px;\r\n  display: \"flex\";\r\n  flex-direction: \"column\";\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport PresortModal from \"./PresortModal\";\r\nimport PresortDND from \"./PresortDND\";\r\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\r\nimport styled from \"styled-components\";\r\nimport PresortPreventNavModal from \"./PresortPreventNavModal\";\r\nimport PresortFinishedModal from \"./PresortFinishedModal\";\r\nimport PresortIsComplete from \"./PresortIsComplete\";\r\nimport PleaseLogInFirst from \"./PleaseLogInFirst\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\nimport PresortDndImages from \"./PresortDndImages\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getStatementsObj = (state) => state.statementsObj;\r\nconst getCardFontSizePresort = (state) => state.cardFontSizePresort;\r\nconst getIsLoggedIn = (state) => state.isLoggedIn;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getSetProgressScore = (state) => state.setProgressScore;\r\nconst getPresortNoReturn = (state) => state.presortNoReturn;\r\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\n\r\nconst PresortPage = (props) => {\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const statementsObj = useSettingsStore(getStatementsObj);\r\n  let cardFontSize = useStore(getCardFontSizePresort);\r\n  const isLoggedIn = useSettingsStore(getIsLoggedIn);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const setProgressScore = useStore(getSetProgressScore);\r\n  const presortNoReturn = useStore(getPresortNoReturn);\r\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  const cardFontSizePersist = +localStorage.getItem(\"fontSizePresort\");\r\n\r\n  if (cardFontSizePersist) {\r\n    cardFontSize = cardFontSizePersist;\r\n  }\r\n\r\n  // set next button display\r\n  setDisplayNextButton(true);\r\n\r\n  useEffect(() => {\r\n    let startTime = Date.now();\r\n    const setStateAsync = async () => {\r\n      await setCurrentPage(\"presort\");\r\n      await setProgressScore(20);\r\n    };\r\n    setStateAsync();\r\n    return () => {\r\n      calculateTimeOnPage(startTime, \"presortPage\", \"presortPage\");\r\n    };\r\n  }, [setCurrentPage, setProgressScore]);\r\n\r\n  let columnStatements = statementsObj.columnStatements;\r\n\r\n  if (configObj.setupTarget === \"local\") {\r\n    columnStatements = JSON.parse(JSON.stringify(resetColumnStatements));\r\n  }\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const initialScreen = configObj.initialScreen;\r\n  const statements = cloneDeep(columnStatements.statementList);\r\n  const imageSort = configObj.useImages;\r\n\r\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText)) || \"\";\r\n\r\n  // early return if log-in required and not logged in\r\n  if (initialScreen !== \"anonymous\") {\r\n    if (isLoggedIn === false) {\r\n      return <PleaseLogInFirst />;\r\n    }\r\n  }\r\n  // early return of presort finished message if complete\r\n  if (presortNoReturn) {\r\n    return <PresortIsComplete />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PromptUnload />\r\n      <PresortModal />\r\n      <PresortFinishedModal />\r\n      <PresortPreventNavModal />\r\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\r\n      {imageSort ? (\r\n        <PresortDndImages cardFontSize={cardFontSize} />\r\n      ) : (\r\n        <PresortDND statements={statements} cardFontSize={cardFontSize} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PresortPage;\r\n\r\nconst SortTitleBar = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  position: fixed;\r\n  z-index: 999;\r\n  top: 0;\r\n`;\r\n","import useStore from \"../../globalState/useStore\";\r\n\r\nconst checkForColumnOverload = (\r\n  columnLengthCheckArray,\r\n  forcedSorts,\r\n  totalStatements,\r\n  qSortPattern,\r\n  qSortHeaderNumbers\r\n) => {\r\n  if (forcedSorts === true) {\r\n    const tempArray = [];\r\n\r\n    // iterate through array and check if col length > design length\r\n    columnLengthCheckArray.forEach(function (item, index) {\r\n      if (item > +qSortPattern[index]) {\r\n        tempArray.push(qSortHeaderNumbers[index]);\r\n        useStore.setState({ sortCompleted: false });\r\n        useStore.setState({ overloadedColumn: qSortHeaderNumbers[index] });\r\n        useStore.setState({ hasOverloadedColumn: true });\r\n        useStore.setState({ isSortingCards: false });\r\n        return null;\r\n      }\r\n    });\r\n    // if no overload - set overload to no and is sorting to true\r\n    if (tempArray.length === 0) {\r\n      useStore.setState({ hasOverloadedColumn: false });\r\n      useStore.setState({ isSortingCards: true });\r\n    }\r\n  }\r\n\r\n  const numSortedStatements = columnLengthCheckArray.reduce(function (\r\n    acc,\r\n    val\r\n  ) {\r\n    return acc + val;\r\n  });\r\n\r\n  useStore.setState({ numSortedStatements: numSortedStatements });\r\n\r\n  if (forcedSorts === false) {\r\n    if (numSortedStatements === totalStatements) {\r\n      useStore.setState({ sortCompleted: true });\r\n      useStore.setState({ isSortingCards: false });\r\n    } else {\r\n      useStore.setState({ sortCompleted: false });\r\n      useStore.setState({ isSortingCards: true });\r\n    }\r\n  }\r\n};\r\n\r\nexport default checkForColumnOverload;\r\n","import isEqual from \"lodash/isEqual\";\r\nimport checkForColumnOverload from \"./checkForColumnOverload\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (\r\n  sourceListArray,\r\n  destinationListArray,\r\n  droppableSource,\r\n  droppableDestination,\r\n  columnStatements,\r\n  totalStatements,\r\n  sortCharacteristics,\r\n  allowUnforcedSorts,\r\n  qSortHeaderNumbers\r\n) => {\r\n  const { qSortPattern, qSortHeaders, forcedSorts } = sortCharacteristics;\r\n\r\n  const destClone = [...destinationListArray];\r\n\r\n  // to splice in and out\r\n  const [removed] = sourceListArray.splice(droppableSource.index, 1);\r\n  destinationListArray.splice(droppableDestination.index, 0, removed);\r\n\r\n  sourceListArray[droppableSource.droppableId] = [removed];\r\n  destinationListArray[droppableDestination.droppableId] = [...destClone];\r\n\r\n  // to assign to object and register results to state\r\n  const result = {};\r\n  result[droppableSource.droppableId] = [...sourceListArray];\r\n  result[droppableDestination.droppableId] = [...destinationListArray];\r\n\r\n  // to save to state and auto update lists\r\n  useStore.setState({ result: result });\r\n\r\n  // for sort complete checking\r\n  const columnLengthCheckArray = [];\r\n  for (let i = 0; i < qSortHeaders.length; i++) {\r\n    const currentColumnLength =\r\n      columnStatements.vCols[`column${qSortHeaders[i]}`];\r\n    columnLengthCheckArray.push(currentColumnLength.length);\r\n  }\r\n  // sort mutates, so clone\r\n  const qSortPatternClone = [...qSortPattern];\r\n  const overloadArrayCheck = [...columnLengthCheckArray];\r\n  const match = isEqual(columnLengthCheckArray, qSortPatternClone);\r\n\r\n  checkForColumnOverload(\r\n    overloadArrayCheck,\r\n    forcedSorts,\r\n    totalStatements,\r\n    qSortPattern,\r\n    qSortHeaderNumbers\r\n  );\r\n\r\n  // to disable checking if unforced Q sorts allowed\r\n  if (allowUnforcedSorts === false) {\r\n    // if the sort pattern matches default sort pattern\r\n    if (match === true) {\r\n      useStore.setState({ hasOverloadedColumn: false });\r\n      useStore.setState({ sortCompleted: true });\r\n      console.log(\"sorting complete\");\r\n      useStore.setState({ isSortingCards: false });\r\n      useStore.setState({ isSortingFinished: true });\r\n    } else {\r\n      useStore.setState({ hasOverloadedColumn: true });\r\n      useStore.setState({ sortCompleted: false });\r\n      useStore.setState({ isSortingCards: true });\r\n      if (columnStatements.statementList.length === 0) {\r\n        useStore.setState({ isSortingFinished: true });\r\n      } else {\r\n        useStore.setState({ isSortingFinished: false });\r\n      }\r\n    }\r\n  } else {\r\n    // for unforced sorts - is source array empty?\r\n    if (sourceListArray.length === 0) {\r\n      useStore.setState({ hasOverloadedColumn: false });\r\n      useStore.setState({ sortCompleted: true });\r\n      console.log(\"sorting complete\");\r\n      useStore.setState({ isSortingCards: false });\r\n      useStore.setState({ isSortingFinished: true });\r\n    } else {\r\n      useStore.setState({ sortCompleted: false });\r\n      useStore.setState({ isSortingCards: true });\r\n      useStore.setState({ hasOverloadedColumn: false });\r\n      useStore.setState({ isSortingFinished: false });\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default move;\r\n","// to reorder within the same column\r\nconst reorder = (\r\n  columnToBeReordered,\r\n  startIndex,\r\n  endIndex,\r\n  columnStatements\r\n) => {\r\n  try {\r\n    console.log(\"reorder\");\r\n    // no re-ordering of statements list / it's arranged by flexbox \"order\" css property\r\n    if (columnToBeReordered === \"statements\") {\r\n      return columnStatements;\r\n    }\r\n    // let list = state.getState(columnList);\r\n    const list = columnStatements.vCols[columnToBeReordered];\r\n    const result = [...list]; // Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    columnStatements.vCols[columnToBeReordered] = [...result];\r\n\r\n    return { ...columnStatements };\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default reorder;\r\n","const getItemStyle = (\r\n  isDragging,\r\n  draggableStyle,\r\n  cardWidth,\r\n  cardHeight,\r\n  cardFontSize,\r\n  cardColor,\r\n  greenCardColor,\r\n  yellowCardColor,\r\n  pinkCardColor,\r\n  fontColor\r\n) => {\r\n  let newCardColor;\r\n  if (cardColor === \"greenSortCard\") {\r\n    newCardColor = greenCardColor;\r\n  }\r\n  if (cardColor === \"yellowSortCard\") {\r\n    newCardColor = yellowCardColor;\r\n  }\r\n  if (cardColor === \"pinkSortCard\") {\r\n    newCardColor = pinkCardColor;\r\n  }\r\n\r\n  return {\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: `0 2px 0 2px`,\r\n    margin: `0 2px 8px 3px`,\r\n    lineHeight: `1.3em`,\r\n    fontSize: cardFontSize,\r\n    color: fontColor,\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    borderRadius: `5px`,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    border: `1px solid #a8a8a8`,\r\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\r\n    zIndex: \"-1\",\r\n\r\n    // transitionDelay: \"0.2s\",\r\n    // change background colour if dragging  (#e6bbad or #FFB266)\r\n    textAlign: `center`,\r\n    background: isDragging ? newCardColor : newCardColor,\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  };\r\n};\r\n\r\nexport default getItemStyle;\r\n","import useStore from \"../../globalState/useStore\";\r\n\r\n// card and column styling\r\nconst getListStyle = (\r\n  isDraggingOver,\r\n  props,\r\n  forcedSorts,\r\n  columnWidth,\r\n  columnColor,\r\n  cardHeight\r\n) => {\r\n  // forcedSorts is \"warnOverloadedColumn\" in configObj\r\n  let isUnderMaxCards;\r\n  if (forcedSorts === true) {\r\n    isUnderMaxCards = props.columnStatementsArray.length <= props.maxCards;\r\n  } else {\r\n    isUnderMaxCards = true;\r\n  }\r\n\r\n  // to set highlighting for column headers\r\n  if (isDraggingOver) {\r\n    useStore.setState({ draggingOverColumnId: props.columnId });\r\n  }\r\n\r\n  return {\r\n    background: isDraggingOver\r\n      ? \"lightblue\"\r\n      : isUnderMaxCards\r\n      ? columnColor\r\n      : \"orange\",\r\n    padding: `3px 0.5px 0px 3.5px`,\r\n\r\n    minWidth: columnWidth + 13,\r\n    marginTop: 0,\r\n    marginRight: 0,\r\n    minHeight: props.minHeight - 10,\r\n    borderRadius: `2px`,\r\n    outline: isUnderMaxCards ? \"1px solid #d8d8d8\" : \"2px dashed black\",\r\n    outlineOffset: \"-1px\",\r\n  };\r\n};\r\n\r\nexport default getListStyle;\r\n\r\n// border: 'solid 1px #ededed',\r\n","import React from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport getItemStyle from \"./getItemStyle\";\r\nimport getListStyle from \"./getListStyle\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\nconst SortColumn = (props) => {\r\n  const {\r\n    forcedSorts,\r\n    columnWidth,\r\n    cardHeight,\r\n    columnId,\r\n    sortValue,\r\n    columnStatementsArray,\r\n    columnColor,\r\n    cardFontSize,\r\n    greenCardColor,\r\n    yellowCardColor,\r\n    pinkCardColor,\r\n    fontColor,\r\n  } = props;\r\n\r\n  // had to push column sort value to state because didn't want to edit dnd library result object\r\n  // was't able to just pass it as a prop\r\n  return (\r\n    <SortColumnsDiv id=\"sortColumnsDiv\">\r\n      <Droppable id=\"ColDroppable\" droppableId={columnId} direction=\"vertical\">\r\n        {(provided, snapshot) => {\r\n          if (snapshot.isDraggingOver) {\r\n            useStore.setState({ draggingOverColumnId: columnId });\r\n            useStore.setState({ currentSortValue: sortValue });\r\n          }\r\n          return (\r\n            <DroppableColDiv\r\n              id=\"DroppableColDiv\"\r\n              ref={provided.innerRef}\r\n              style={getListStyle(\r\n                snapshot.isDraggingOver,\r\n                props,\r\n                forcedSorts,\r\n                columnWidth,\r\n                columnColor,\r\n                cardHeight\r\n              )}\r\n            >\r\n              {columnStatementsArray.map((item, index) => {\r\n                const statementHtml = ReactHtmlParser(\r\n                  `<div>${decodeHTML(item.statement)}</div>`\r\n                );\r\n                return (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    cardColor={item.cardColor}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <StatementDiv\r\n                        id=\"StatementDiv\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style,\r\n                          columnWidth,\r\n                          cardHeight,\r\n                          cardFontSize,\r\n                          `${item.cardColor}`,\r\n                          greenCardColor,\r\n                          yellowCardColor,\r\n                          pinkCardColor,\r\n                          fontColor\r\n                        )}\r\n                      >\r\n                        {statementHtml}\r\n                      </StatementDiv>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </DroppableColDiv>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </SortColumnsDiv>\r\n  );\r\n};\r\n\r\nexport default React.memo(SortColumn);\r\n\r\nconst SortColumnsDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DroppableColDiv = styled.div`\r\n  justify-items: center;\r\n`;\r\n\r\nconst StatementDiv = styled.div`\r\n  display: flex;\r\n  width: 96%;\r\n  margin-left: 2%;\r\n  margin-bottom: 5px !important;\r\n  height: ${(props) => `${props.cardHeight}px`};\r\n  justify-content: center;\r\n`;\r\n","// horizontal column styling\r\nconst getListStyleHori = (\r\n  isDraggingOver,\r\n  horiCardMinHeight,\r\n  sortDirection\r\n) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"#e4e4e4\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"nowrap\",\r\n  width: \"100vw\",\r\n  paddingRight: \"20px\",\r\n  minHeight: horiCardMinHeight,\r\n  overflowX: `scroll`,\r\n  direction: sortDirection,\r\n  scrollBehavior: `smooth`,\r\n});\r\n\r\nexport default getListStyleHori;\r\n","// card styling\r\nconst getItemStyleHori = (\r\n  isDragging,\r\n  draggableStyle,\r\n  sortValue,\r\n  cardColor,\r\n  columnWidth,\r\n  cardHeight,\r\n  cardFontSize,\r\n  greenCardColor,\r\n  yellowCardColor,\r\n  pinkCardColor,\r\n  fontColor\r\n) => {\r\n  let newSortValue = sortValue;\r\n  let newCardColor = cardColor;\r\n\r\n  // puts un-evaluated cards at the end of the list and set default color\r\n  if (isNaN(+newSortValue)) {\r\n    newSortValue = 999;\r\n  }\r\n\r\n  // set background color according to user passed in values\r\n  if (newCardColor === \"undefined\" || newCardColor === \"yellowSortCard\") {\r\n    newCardColor = yellowCardColor;\r\n  }\r\n  if (newCardColor === \"pinkSortCard\") {\r\n    newCardColor = pinkCardColor;\r\n  }\r\n  if (newCardColor === \"greenSortCard\") {\r\n    newCardColor = greenCardColor;\r\n  }\r\n\r\n  return {\r\n    userSelect: \"none\",\r\n    WebkitUserSelect: \"none\",\r\n    lineHeight: `1.3em`,\r\n    fontSize: cardFontSize,\r\n    color: fontColor,\r\n    height: cardHeight,\r\n    minWidth: columnWidth,\r\n    maxWidth: columnWidth,\r\n    paddingRight: 2,\r\n    paddingLeft: 2,\r\n    borderRadius: `5px`,\r\n    touchAction: \"manipulation\",\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    marginRight: `2px`,\r\n    marginLeft: `2px`,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: `center`,\r\n    order: newSortValue,\r\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\r\n    // change background color if dragging, otherwise pre-sort value color\r\n    background: isDragging ? newCardColor : newCardColor,\r\n    // styles to apply on draggables\r\n    ...draggableStyle,\r\n  };\r\n};\r\n\r\nexport default getItemStyleHori;\r\n","const calculateDragResults = (\r\n  outcome,\r\n  totalStatements,\r\n  results,\r\n  sortFinishedModalHasBeenShown,\r\n  sortGridResults\r\n) => {\r\n  try {\r\n    let isSortingFinished = false;\r\n    let triggerSortingFinishedModal = false;\r\n\r\n    if (outcome.destination !== null) {\r\n      // derive sortValue from droppableId\r\n      const replaceColumn = /column/gi;\r\n      const replaceN = /N/gi;\r\n      let sortValue1 = outcome.destination.droppableId;\r\n      sortValue1 = sortValue1.replace(replaceColumn, \"\");\r\n      sortValue1 = sortValue1.replace(replaceN, \"-\");\r\n      const sortValue = parseInt(sortValue1, 10);\r\n\r\n      // assign key (like \"s1\") and value (sortValue like \"-4\")\r\n      sortGridResults[outcome.draggableId] = sortValue;\r\n\r\n      // create results string\r\n      const testForCompleteArray = Object.keys(sortGridResults);\r\n      let catchNan = false;\r\n\r\n      // test if finished\r\n      if (testForCompleteArray.length === totalStatements) {\r\n        let resultsText = \"\";\r\n        for (let i = 0; i < totalStatements; i++) {\r\n          let key = `s${i + 1}`;\r\n          let newValue = sortGridResults[key];\r\n          if (isNaN(newValue)) {\r\n            catchNan = true;\r\n          }\r\n          resultsText += `${newValue}|`;\r\n          console.log(resultsText);\r\n        } // loop end\r\n\r\n        if (catchNan === true) {\r\n          // card in footer - sort not complete\r\n          isSortingFinished = false;\r\n        } else {\r\n          // if sort is complete\r\n          // process string to remove trailing bar\r\n          isSortingFinished = true;\r\n\r\n          if (resultsText.charAt(resultsText.length - 1) === \"|\") {\r\n            resultsText = resultsText.substring(0, resultsText.length - 1);\r\n          }\r\n\r\n          console.log(resultsText);\r\n\r\n          results.sort = resultsText;\r\n\r\n          if (sortFinishedModalHasBeenShown === false) {\r\n            sortFinishedModalHasBeenShown = true;\r\n            triggerSortingFinishedModal = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      const returnObj = {};\r\n      returnObj.isSortingFinished = isSortingFinished;\r\n      returnObj.results = results;\r\n      returnObj.sortFinishedModalHasBeenShown = sortFinishedModalHasBeenShown;\r\n      returnObj.triggerSortingFinishedModal = triggerSortingFinishedModal;\r\n      returnObj.sortGridResults = sortGridResults;\r\n\r\n      return returnObj;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    console.log(\"there was an error in calculateDragResults\");\r\n  }\r\n};\r\n\r\nexport default calculateDragResults;\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport move from \"./move\";\r\nimport reorder from \"./reorder\";\r\nimport SortColumn from \"./SortColumn\";\r\nimport getListStyleHori from \"./getListStyleHori\";\r\nimport getItemStyleHori from \"./getItemStyleHori\";\r\nimport calculateDragResults from \"./calculateDragResults\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getMapObj = (state) => state.mapObj;\r\nconst getStatementsObj = (state) => state.statementsObj;\r\nconst getSetIsSortingCards = (state) => state.setIsSortingCards;\r\nconst getSetSortCompleted = (state) => state.setSortCompleted;\r\nconst getSetProgScoreAddSort = (state) => state.setProgressScoreAdditionalSort;\r\nconst getResults = (state) => state.results;\r\nconst getSortFinModalHasBeenShown = (state) =>\r\n  state.sortFinishedModalHasBeenShown;\r\nconst getSortGridResults = (state) => state.sortGridResults;\r\nconst getSetIsSortingFinished = (state) => state.setIsSortingFinished;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getSetTriggerSortingFinModal = (state) =>\r\n  state.setTriggerSortingFinishedModal;\r\nconst getSetSortGridResults = (state) => state.setSortGridResults;\r\n\r\nconst SortGrid = (props) => {\r\n  // GLOBAL STATE\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const mapObj = useSettingsStore(getMapObj);\r\n  const statementsObj = useSettingsStore(getStatementsObj);\r\n  const setIsSortingCards = useStore(getSetIsSortingCards);\r\n  const setSortCompleted = useStore(getSetSortCompleted);\r\n  const setProgressScoreAdditionalSort = useStore(getSetProgScoreAddSort);\r\n  const results = useStore(getResults);\r\n  const sortFinishedModalHasBeenShown = useStore(getSortFinModalHasBeenShown);\r\n  const sortGridResults = useStore(getSortGridResults);\r\n  const setIsSortingFinished = useStore(getSetIsSortingFinished);\r\n  const setResults = useStore(getSetResults);\r\n  const setTriggerSortingFinishedModal = useStore(getSetTriggerSortingFinModal);\r\n  const setSortGridResults = useStore(getSetSortGridResults);\r\n\r\n  const greenCardColor = configObj.greenCardColor;\r\n  const yellowCardColor = configObj.yellowCardColor;\r\n  const pinkCardColor = configObj.pinkCardColor;\r\n\r\n  const qSortHeaders = [...mapObj.qSortHeaders];\r\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\r\n  const columnColorsArray = [...mapObj.columnColorsArray];\r\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\r\n  const qSortPattern = [...mapObj.qSortPattern];\r\n  const cardHeight = props.cardHeight;\r\n\r\n  let presortColumnStatements = JSON.parse(\r\n    localStorage.getItem(\"columnStatements\")\r\n  );\r\n\r\n  if (presortColumnStatements === null) {\r\n    presortColumnStatements = [];\r\n  }\r\n  // LOCAL STATE\r\n\r\n  // PERSISTENT STATE\r\n  const [columnStatements, setColumnStatements] = useLocalStorage(\r\n    \"sortColumns\",\r\n    presortColumnStatements\r\n  );\r\n\r\n  // layout settings\r\n  let columnWidth = props.columnWidth;\r\n  const totalStatements = +configObj.totalStatements;\r\n  const sortCharacterisiticsPrep = {};\r\n  sortCharacterisiticsPrep.qSortPattern = [...mapObj.qSortPattern];\r\n  sortCharacterisiticsPrep.qSortHeaders = [...mapObj.qSortHeaders];\r\n  sortCharacterisiticsPrep.forcedSorts = configObj.warnOverloadedColumn;\r\n  sortCharacterisiticsPrep.qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\r\n\r\n  const sortCharacteristics = sortCharacterisiticsPrep;\r\n  const allowUnforcedSorts = configObj.allowUnforcedSorts;\r\n\r\n  // get sort direction\r\n  let sortDirection = \"rtl\";\r\n  if (configObj.sortDirection === \"negative\") {\r\n    sortDirection = \"ltr\";\r\n  }\r\n\r\n  // fire move and re-order functions\r\n  const onDragEnd = (result) => {\r\n    try {\r\n      /*\r\n    example result object:\r\n    result {\"draggableId\":\"s1\",\"type\":\"DEFAULT\",\r\n    \"source\":{\"droppableId\":\"statements\",\"index\":0},\r\n    \"destination\":{\"droppableId\":\"column1\",\"index\":0},\r\n    \"reason\":\"DROP\"}\r\n    */\r\n      // translated column name and starts results calculations\r\n      const manageDragResults = calculateDragResults(\r\n        { ...result },\r\n        totalStatements,\r\n        results,\r\n        sortFinishedModalHasBeenShown,\r\n        sortGridResults\r\n      );\r\n\r\n      setIsSortingFinished(manageDragResults.sortFinished);\r\n      setResults(manageDragResults.results);\r\n\r\n      setSortGridResults(manageDragResults.sortGridResults);\r\n\r\n      // source and destination are objects\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n      // if moving inside the same column\r\n      if (source.droppableId === destination.droppableId) {\r\n        let newCols = reorder(\r\n          source.droppableId,\r\n          source.index,\r\n          destination.index,\r\n          columnStatements\r\n        );\r\n\r\n        setColumnStatements(newCols);\r\n      } else {\r\n        // moving to another column\r\n        // source.droppableId give orgin id => \"statements\" or \"columnN1\"\r\n        // sourceList is cards in that origin\r\n        // gather data to send to move function\r\n        let sourceListArray;\r\n        let destinationListArray;\r\n        if (source.droppableId === \"statements\") {\r\n          sourceListArray = columnStatements.statementList;\r\n        } else {\r\n          sourceListArray = columnStatements.vCols[source.droppableId];\r\n        }\r\n        if (destination.droppableId === \"statements\") {\r\n          destinationListArray = columnStatements.statementList;\r\n        } else {\r\n          destinationListArray =\r\n            columnStatements.vCols[destination.droppableId];\r\n        }\r\n        const droppableSource = source;\r\n        const droppableDestination = destination;\r\n\r\n        move(\r\n          sourceListArray,\r\n          destinationListArray,\r\n          droppableSource,\r\n          droppableDestination,\r\n          columnStatements,\r\n          totalStatements,\r\n          sortCharacteristics,\r\n          allowUnforcedSorts,\r\n          qSortHeaderNumbers\r\n        );\r\n\r\n        // global state updates\r\n        setColumnStatements(columnStatements);\r\n        const hasShownSortFinModal = localStorage.getItem(\r\n          \"hasShownSortFinModal\"\r\n        );\r\n\r\n        if (columnStatements.statementList.length === 0) {\r\n          setIsSortingCards(false);\r\n          setSortCompleted(true);\r\n          if (hasShownSortFinModal === \"false\") {\r\n            localStorage.setItem(\"hasShownSortFinModal\", true);\r\n            setTriggerSortingFinishedModal(true);\r\n          }\r\n        } else {\r\n          localStorage.setItem(\"hasShownSortFinModal\", false);\r\n          setIsSortingCards(true);\r\n          setSortCompleted(false);\r\n        }\r\n\r\n        // increment Progress Bar\r\n        const totalStatements2 = statementsObj.totalStatements;\r\n        const remainingStatements = columnStatements.statementList.length;\r\n        const numerator = totalStatements2 - remainingStatements;\r\n        const ratio = numerator / totalStatements2;\r\n        const completedPercent = (ratio * 30).toFixed();\r\n\r\n        // update Progress Bar State\r\n        setProgressScoreAdditionalSort(completedPercent);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }; // end of dragEnd helper function\r\n\r\n  // get user settings\r\n  const cardFontSize = props.cardFontSize;\r\n  const fontColor = props.fontColor;\r\n\r\n  // just the hori container size, not card size\r\n  let horiCardMinHeight = 50;\r\n\r\n  // pull data from STATE\r\n  const statements = columnStatements.statementList;\r\n\r\n  // setup grid columns\r\n  const columns = qSortHeaders.map((value, index, highlightedColHeader) => {\r\n    const columnId = `column${qSortHeaders[index]}`;\r\n    const sortValue = qSortHeaderNumbers[index];\r\n    const columnColor = columnColorsArray[index];\r\n\r\n    return (\r\n      <SortColumn\r\n        key={columnId}\r\n        minHeight={qSortPattern[index] * (+cardHeight + 8)}\r\n        maxCards={qSortPattern[index]}\r\n        columnId={columnId}\r\n        columnStatementsArray={columnStatements.vCols[columnId]}\r\n        forcedSorts={configObj.warnOverloadedColumn}\r\n        columnWidth={props.columnWidth}\r\n        cardHeight={+cardHeight}\r\n        sortValue={sortValue}\r\n        columnColor={columnColor}\r\n        cardFontSize={cardFontSize}\r\n        qSortHeaderNumber={qSortHeaderNumbers[index]}\r\n        columnHeadersColor={columnHeadersColorsArray[index]}\r\n        greenCardColor={greenCardColor}\r\n        yellowCardColor={yellowCardColor}\r\n        pinkCardColor={pinkCardColor}\r\n        fontColor={fontColor}\r\n      />\r\n    );\r\n  }); // end map of sort columns\r\n\r\n  const InnerList = React.memo((props) => {\r\n    const items = props.statements.map((item, index) => {\r\n      const statementHtml = ReactHtmlParser(\r\n        `<div>${decodeHTML(item.statement)}</div>`\r\n      );\r\n      return (\r\n        <Draggable\r\n          key={item.id}\r\n          draggableId={item.id}\r\n          index={index}\r\n          sortValue={item.sortValue}\r\n          cardColor={item.cardColor}\r\n          className=\"droppableCards\"\r\n        >\r\n          {(provided, snapshot) => (\r\n            <>\r\n              <div\r\n                ref={provided.innerRef}\r\n                className={`${item.cardColor}`}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                style={getItemStyleHori(\r\n                  snapshot.isDragging,\r\n                  provided.draggableProps.style,\r\n                  `${item.sortValue}`,\r\n                  `${item.cardColor}`,\r\n                  columnWidth,\r\n                  cardHeight,\r\n                  cardFontSize,\r\n                  greenCardColor,\r\n                  yellowCardColor,\r\n                  pinkCardColor,\r\n                  fontColor\r\n                )}\r\n              >\r\n                <span style={{ direction: \"ltr\" }}>{statementHtml}</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n    /*\r\n    let finalItem = <div key={\"placeholder\"}>{props.provided.placeholder}</div>;\r\n    items.unshift(finalItem);\r\n    */\r\n    return items;\r\n  });\r\n\r\n  // returning main content => horizontal feeder\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"rootDiv\">\r\n        {columns}\r\n        <SortFooterDiv id=\"SortFooterDiv\">\r\n          <CardSlider id=\"CardSlider\">\r\n            <Droppable\r\n              id=\"Droppable\"\r\n              droppableId=\"statements\"\r\n              direction=\"horizontal\"\r\n            >\r\n              {(provided, snapshot) => (\r\n                <HorizontalFeederDiv\r\n                  id=\"HorizontalFeederDiv\"\r\n                  ref={provided.innerRef}\r\n                  style={getListStyleHori(\r\n                    snapshot.isDraggingOver,\r\n                    horiCardMinHeight,\r\n                    sortDirection\r\n                  )}\r\n                >\r\n                  <InnerList statements={statements} provided={provided} />\r\n                  <div style={{ width: `0px` }}>{provided.placeholder}</div>\r\n                </HorizontalFeederDiv>\r\n              )}\r\n            </Droppable>\r\n          </CardSlider>\r\n        </SortFooterDiv>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default SortGrid;\r\n\r\nconst SortFooterDiv = styled.div`\r\n  background: #e4e4e4;\r\n  padding-right: 10px;\r\n  position: fixed;\r\n  left: 0px;\r\n  bottom: 50px;\r\n  width: 100vw;\r\n  height: ${(props) => `${+props.cardHeight + 20}px;`};\r\n`;\r\n\r\nconst CardSlider = styled.div`\r\n  display: flex;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst HorizontalFeederDiv = styled.div``;\r\n\r\n/* DO NOT DELETE - important\r\n\"columnColorsArray\": [\r\n      \"#ffb2b2\"\r\n      \"#ffbfbf\",\r\n      \"#ffcbcb\",\r\n      \"#ffd8d8\",\r\n      \"#ffe5e5\",\r\n      \"#f5f5f5\",\r\n      \"#d6f5d6\",\r\n      \"#c1f0c1\",\r\n      \"#adebad\",\r\n      \"#98E698\",\r\n      \"#84e184\"\r\n    ],\r\n*/\r\n","const getItemStyleImages = (\r\n  isDragging,\r\n  draggableStyle,\r\n  cardWidth,\r\n  cardHeight,\r\n  cardFontSize,\r\n  cardColor,\r\n  greenCardColor,\r\n  yellowCardColor,\r\n  pinkCardColor,\r\n  fontColor\r\n) => {\r\n  let newCardColor;\r\n  if (cardColor === \"greenSortCard\") {\r\n    newCardColor = greenCardColor;\r\n  }\r\n  if (cardColor === \"yellowSortCard\") {\r\n    newCardColor = yellowCardColor;\r\n  }\r\n  if (cardColor === \"pinkSortCard\") {\r\n    newCardColor = pinkCardColor;\r\n  }\r\n\r\n  return {\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    lineHeight: `1.3em`,\r\n    fontSize: cardFontSize,\r\n    maxHeight: cardHeight,\r\n    color: fontColor,\r\n    borderRadius: `5px`,\r\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\r\n    zIndex: \"-1\",\r\n\r\n    // transitionDelay: \"0.2s\",\r\n    // change background colour if dragging  (#e6bbad or #FFB266)\r\n    textAlign: `center`,\r\n    background: isDragging ? newCardColor : \"whitesmoke\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  };\r\n};\r\n\r\nexport default getItemStyleImages;\r\n","import useStore from \"../../globalState/useStore\";\r\n\r\n// card and column styling\r\nconst getListStyle = (\r\n  isDraggingOver,\r\n  props,\r\n  forcedSorts,\r\n  columnWidth,\r\n  columnColor,\r\n  cardHeight\r\n) => {\r\n  // forcedSorts is \"warnOverloadedColumn\" in configObj\r\n  let isUnderMaxCards;\r\n  if (forcedSorts === true) {\r\n    isUnderMaxCards = props.columnStatementsArray.length <= props.maxCards;\r\n  } else {\r\n    isUnderMaxCards = true;\r\n  }\r\n\r\n  // to set highlighting for column headers\r\n  if (isDraggingOver) {\r\n    useStore.setState({ draggingOverColumnId: props.columnId });\r\n  }\r\n\r\n  return {\r\n    background: isDraggingOver\r\n      ? \"lightblue\"\r\n      : isUnderMaxCards\r\n      ? columnColor\r\n      : \"orange\",\r\n    padding: `5px 0px 0px 0px`,\r\n    justifyContent: \"center\",\r\n    width: columnWidth + 13,\r\n    marginTop: 0,\r\n    marginRight: 0,\r\n    minHeight: props.minHeight - 10,\r\n    borderRadius: `2px`,\r\n    outline: isUnderMaxCards ? \"1px solid #d8d8d8\" : \"2px dashed black\",\r\n    outlineOffset: \"-1px\",\r\n  };\r\n};\r\n\r\nexport default getListStyle;\r\n\r\n// border: 'solid 1px #ededed',\r\n","import React from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport getItemStyleImages from \"./getItemStyleImages\";\r\nimport getListStyleImages from \"./getListStyleImages\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\nconst SortColumnImages = (props) => {\r\n  const {\r\n    forcedSorts,\r\n    columnWidth,\r\n    cardHeight,\r\n    columnId,\r\n    sortValue,\r\n    columnStatementsArray,\r\n    columnColor,\r\n    cardFontSize,\r\n    greenCardColor,\r\n    yellowCardColor,\r\n    pinkCardColor,\r\n    fontColor,\r\n    handleOpenImageModal,\r\n  } = props;\r\n\r\n  // had to push column sort value to state because didn't want to edit dnd library result object\r\n  // was't able to just pass it as a prop\r\n  return (\r\n    <SortColumnsDiv id=\"sortColumnsDiv\">\r\n      <Droppable id=\"ColDroppable\" droppableId={columnId} direction=\"vertical\">\r\n        {(provided, snapshot) => {\r\n          if (snapshot.isDraggingOver) {\r\n            useStore.setState({ draggingOverColumnId: columnId });\r\n            useStore.setState({ currentSortValue: sortValue });\r\n          }\r\n          return (\r\n            <DroppableColDiv\r\n              id=\"DroppableColDiv\"\r\n              ref={provided.innerRef}\r\n              style={getListStyleImages(\r\n                snapshot.isDraggingOver,\r\n                props,\r\n                forcedSorts,\r\n                columnWidth,\r\n                columnColor,\r\n                cardHeight\r\n              )}\r\n            >\r\n              {columnStatementsArray.map((item, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    cardColor={item.cardColor}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <ImageDiv\r\n                        id=\"imageDiv\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        onClick={(e) =>\r\n                          handleOpenImageModal(e, item.element.props.src)\r\n                        }\r\n                        style={getItemStyleImages(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style,\r\n                          columnWidth,\r\n                          cardHeight,\r\n                          cardFontSize,\r\n                          `${item.cardColor}`,\r\n                          greenCardColor,\r\n                          yellowCardColor,\r\n                          pinkCardColor,\r\n                          fontColor\r\n                        )}\r\n                      >\r\n                        <img\r\n                          src={item.element.props.src}\r\n                          alt={item.element.props.alt}\r\n                          style={{ border: \"1px solid black\" }}\r\n                        />\r\n                      </ImageDiv>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </DroppableColDiv>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </SortColumnsDiv>\r\n  );\r\n};\r\n\r\nexport default React.memo(SortColumnImages);\r\n\r\nconst SortColumnsDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DroppableColDiv = styled.div`\r\n  justify-items: center;\r\n`;\r\n\r\nconst ImageDiv = styled.div`\r\n  display: flex;\r\n  width: 96%;\r\n  margin-left: 2%;\r\n  margin-bottom: 5px !important;\r\n  height: ${(props) => `${props.cardHeight}px`};\r\n  justify-content: center;\r\n\r\n  img {\r\n    max-width: 96%;\r\n    max-height: 96%;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n","// card styling\r\nconst getItemStyleHoriImages = (\r\n  isDragging,\r\n  draggableStyle,\r\n  sortValue,\r\n  cardColor,\r\n  columnWidth,\r\n  cardHeight,\r\n  cardFontSize,\r\n  greenCardColor,\r\n  yellowCardColor,\r\n  pinkCardColor,\r\n  fontColor\r\n) => {\r\n  let newSortValue = sortValue;\r\n  let newCardColor = cardColor;\r\n\r\n  // puts un-evaluated cards at the end of the list and set default color\r\n  if (isNaN(+newSortValue)) {\r\n    newSortValue = 999;\r\n  }\r\n\r\n  // set background color according to user passed in values\r\n  if (newCardColor === \"undefined\" || newCardColor === \"yellowSortCard\") {\r\n    newCardColor = yellowCardColor;\r\n  }\r\n  if (newCardColor === \"pinkSortCard\") {\r\n    newCardColor = pinkCardColor;\r\n  }\r\n  if (newCardColor === \"greenSortCard\") {\r\n    newCardColor = greenCardColor;\r\n  }\r\n\r\n  return {\r\n    userSelect: \"none\",\r\n    WebkitUserSelect: \"none\",\r\n    lineHeight: `1.3em`,\r\n    fontSize: cardFontSize,\r\n    color: fontColor,\r\n    height: cardHeight,\r\n    minWidth: columnWidth,\r\n    maxWidth: columnWidth,\r\n    paddingRight: 2,\r\n    paddingLeft: 2,\r\n    borderRadius: `5px`,\r\n    touchAction: \"manipulation\",\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    marginRight: `2px`,\r\n    marginLeft: `2px`,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: `center`,\r\n    order: newSortValue,\r\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\r\n    // change background color if dragging, otherwise pre-sort value color\r\n    background: isDragging ? newCardColor : newCardColor,\r\n    // styles to apply on draggables\r\n    ...draggableStyle,\r\n  };\r\n};\r\n\r\nexport default getItemStyleHoriImages;\r\n","const calculateDragResultsImages = (\r\n  outcome,\r\n  totalStatements,\r\n  results,\r\n  sortFinishedModalHasBeenShown,\r\n  sortGridResults\r\n) => {\r\n  try {\r\n    let isSortingFinished = false;\r\n    let triggerSortingFinishedModal = false;\r\n\r\n    if (outcome.destination !== null) {\r\n      // derive sortValue from droppableId\r\n      const replaceColumn = /column/gi;\r\n      const replaceN = /N/gi;\r\n      let sortValue1 = outcome.destination.droppableId;\r\n      sortValue1 = sortValue1.replace(replaceColumn, \"\");\r\n      sortValue1 = sortValue1.replace(replaceN, \"-\");\r\n      const sortValue = parseInt(sortValue1, 10);\r\n\r\n      // assign key (like \"s1\") and value (sortValue like \"-4\")\r\n      sortGridResults[outcome.draggableId] = sortValue;\r\n\r\n      // create results string\r\n      const testForCompleteArray = Object.keys(sortGridResults);\r\n\r\n      let catchNan = false;\r\n\r\n      // *** IF SORTING FINISHED\r\n      if (testForCompleteArray.length === totalStatements) {\r\n        // convert to results text\r\n        let resultsText = \"\";\r\n        for (let i = 0; i < totalStatements; i++) {\r\n          let key = `image${i + 1}`;\r\n          let newValue = sortGridResults[key];\r\n          if (isNaN(newValue)) {\r\n            catchNan = true;\r\n          }\r\n          resultsText += `${newValue}|`;\r\n        } // loop end\r\n\r\n        if (catchNan === true) {\r\n          // card in footer - sort not complete\r\n          isSortingFinished = false;\r\n        } else {\r\n          // if sort is complete\r\n          // process string to remove trailing bar\r\n          isSortingFinished = true;\r\n          // remove trailing bar\r\n          if (resultsText.charAt(resultsText.length - 1) === \"|\") {\r\n            resultsText = resultsText.substring(0, resultsText.length - 1);\r\n          }\r\n\r\n          results.sort = resultsText;\r\n          console.log(\"resultsText\", resultsText);\r\n\r\n          localStorage.setItem(\"resultsSort\", JSON.stringify(resultsText));\r\n\r\n          if (sortFinishedModalHasBeenShown === false) {\r\n            sortFinishedModalHasBeenShown = true;\r\n            triggerSortingFinishedModal = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      const returnObj = {};\r\n      returnObj.isSortingFinished = isSortingFinished;\r\n      returnObj.results = results;\r\n      returnObj.sortFinishedModalHasBeenShown = sortFinishedModalHasBeenShown;\r\n      returnObj.triggerSortingFinishedModal = triggerSortingFinishedModal;\r\n      returnObj.sortGridResults = sortGridResults;\r\n\r\n      return returnObj;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    console.log(\"there was an error in calculateDragResults\");\r\n  }\r\n};\r\n\r\nexport default calculateDragResultsImages;\r\n","import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport move from \"./move\";\r\nimport reorder from \"./reorder\";\r\nimport SortColumnImages from \"./SortColumnImages\";\r\nimport getListStyleHori from \"./getListStyleHori\";\r\nimport getItemStyleHoriImages from \"./getItemStyleHoriImages\";\r\nimport calculateDragResultsImages from \"./calculateDragResultsImages\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\n/* eslint react/prop-types: 0 */\r\n\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getMapObj = (state) => state.mapObj;\r\nconst getSetIsSortingCards = (state) => state.setIsSortingCards;\r\nconst getSetSortCompleted = (state) => state.setSortCompleted;\r\nconst getSetProgScoreAddSort = (state) => state.setProgressScoreAdditionalSort;\r\nconst getResults = (state) => state.results;\r\nconst getSortFinModalHasBeenShown = (state) =>\r\n  state.sortFinishedModalHasBeenShown;\r\nconst getSortGridResults = (state) => state.sortGridResults;\r\nconst getSetIsSortingFinished = (state) => state.setIsSortingFinished;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getSetTriggerSortingFinModal = (state) =>\r\n  state.setTriggerSortingFinishedModal;\r\nconst getSetSortGridResults = (state) => state.setSortGridResults;\r\n\r\nconst SortGridImages = (props) => {\r\n  // GLOBAL STATE\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const mapObj = useSettingsStore(getMapObj);\r\n  const setIsSortingCards = useStore(getSetIsSortingCards);\r\n  const setSortCompleted = useStore(getSetSortCompleted);\r\n  const setProgressScoreAdditionalSort = useStore(getSetProgScoreAddSort);\r\n  const results = useStore(getResults);\r\n  const sortFinishedModalHasBeenShown = useStore(getSortFinModalHasBeenShown);\r\n  const sortGridResults = useStore(getSortGridResults);\r\n  const setIsSortingFinished = useStore(getSetIsSortingFinished);\r\n  const setResults = useStore(getSetResults);\r\n  const setTriggerSortingFinishedModal = useStore(getSetTriggerSortingFinModal);\r\n  const setSortGridResults = useStore(getSetSortGridResults);\r\n  const greenCardColor = configObj.greenCardColor;\r\n  const yellowCardColor = configObj.yellowCardColor;\r\n  const pinkCardColor = configObj.pinkCardColor;\r\n  const qSortHeaders = [...mapObj.qSortHeaders];\r\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\r\n  const columnColorsArray = [...mapObj.columnColorsArray];\r\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\r\n  const qSortPattern = [...mapObj.qSortPattern];\r\n\r\n  let presortColumnStatements = JSON.parse(\r\n    localStorage.getItem(\"columnStatements\")\r\n  );\r\n\r\n  if (presortColumnStatements === null) {\r\n    presortColumnStatements = [];\r\n  }\r\n\r\n  // LOCAL STATE\r\n  const [openImageModal, setOpenImageModal] = useState(false);\r\n  const [imageSource, setImageSource] = useState(\"\");\r\n  const [dualPhotoArray, setDualPhotoArray] = useState([]);\r\n  const [openDualImageModal, setOpenDualImageModal] = useState(false);\r\n\r\n  // PERSISTENT STATE\r\n  const [columnStatements, setColumnStatements] = useLocalStorage(\r\n    \"sortColumns\",\r\n    presortColumnStatements\r\n  );\r\n\r\n  let columnWidth = props.columnWidth;\r\n  const totalStatements = +configObj.numImages;\r\n  const sortCharacterisiticsPrep = {};\r\n  sortCharacterisiticsPrep.qSortPattern = [...mapObj.qSortPattern];\r\n  sortCharacterisiticsPrep.qSortHeaders = [...mapObj.qSortHeaders];\r\n  sortCharacterisiticsPrep.forcedSorts = configObj.warnOverloadedColumn;\r\n  sortCharacterisiticsPrep.qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\r\n\r\n  const sortCharacteristics = sortCharacterisiticsPrep;\r\n  const allowUnforcedSorts = configObj.allowUnforcedSorts;\r\n\r\n  // get sort direction\r\n  let sortDirection = \"rtl\";\r\n  if (configObj.sortDirection === \"negative\") {\r\n    sortDirection = \"ltr\";\r\n  }\r\n\r\n  const handleOpenImageModal = (e, src) => {\r\n    if (e.detail === 2) {\r\n      if (e.shiftKey) {\r\n        dualPhotoArray.push(e.target.src);\r\n        setDualPhotoArray(dualPhotoArray);\r\n        if (dualPhotoArray.length === 2) {\r\n          setOpenDualImageModal(true);\r\n        }\r\n      } else {\r\n        setImageSource(e.target.src);\r\n        setOpenImageModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // fire move and re-order functions\r\n  const onDragEnd = (result) => {\r\n    try {\r\n      /*\r\n    example result object:\r\n    result {\"draggableId\":\"s1\",\"type\":\"DEFAULT\",\r\n    \"source\":{\"droppableId\":\"statements\",\"index\":0},\r\n    \"destination\":{\"droppableId\":\"column1\",\"index\":0},\r\n    \"reason\":\"DROP\"}\r\n    */\r\n      // translated column name and starts results calculations\r\n      const manageDragResults = calculateDragResultsImages(\r\n        { ...result },\r\n        totalStatements,\r\n        results,\r\n        sortFinishedModalHasBeenShown,\r\n        sortGridResults\r\n      );\r\n\r\n      setIsSortingFinished(manageDragResults.sortFinished);\r\n      setResults(manageDragResults.results);\r\n\r\n      setSortGridResults(manageDragResults.sortGridResults);\r\n\r\n      // source and destination are objects\r\n      const { source, destination } = result;\r\n\r\n      // dropped outside the list\r\n      if (!destination) {\r\n        return;\r\n      }\r\n      // if moving inside the same column\r\n      if (source.droppableId === destination.droppableId) {\r\n        let newCols = reorder(\r\n          source.droppableId,\r\n          source.index,\r\n          destination.index,\r\n          columnStatements\r\n        );\r\n\r\n        setColumnStatements(newCols);\r\n      } else {\r\n        // moving to another column\r\n        // source.droppableId give origin id => \"statements\" or \"columnN1\"\r\n        // sourceList is cards in that origin\r\n        // gather data to send to move function\r\n        let sourceListArray;\r\n        let destinationListArray;\r\n        if (source.droppableId === \"statements\") {\r\n          sourceListArray = columnStatements.imagesList;\r\n        } else {\r\n          sourceListArray = columnStatements.vCols[source.droppableId];\r\n        }\r\n        if (destination.droppableId === \"statements\") {\r\n          destinationListArray = columnStatements.imagesList;\r\n        } else {\r\n          destinationListArray =\r\n            columnStatements.vCols[destination.droppableId];\r\n        }\r\n        const droppableSource = source;\r\n        const droppableDestination = destination;\r\n\r\n        move(\r\n          sourceListArray,\r\n          destinationListArray,\r\n          droppableSource,\r\n          droppableDestination,\r\n          columnStatements,\r\n          totalStatements,\r\n          sortCharacteristics,\r\n          allowUnforcedSorts,\r\n          qSortHeaderNumbers\r\n        );\r\n\r\n        // global state updates\r\n        setColumnStatements(columnStatements);\r\n        const hasShownSortFinModal = localStorage.getItem(\r\n          \"hasShownSortFinModal\"\r\n        );\r\n\r\n        if (columnStatements.imagesList.length === 0) {\r\n          setIsSortingCards(false);\r\n          setSortCompleted(true);\r\n          if (hasShownSortFinModal === \"false\") {\r\n            localStorage.setItem(\"hasShownSortFinModal\", true);\r\n            setTriggerSortingFinishedModal(true);\r\n          }\r\n        } else {\r\n          localStorage.setItem(\"hasShownSortFinModal\", false);\r\n          setIsSortingCards(true);\r\n          setSortCompleted(false);\r\n        }\r\n\r\n        // increment Progress Bar\r\n        const totalStatements2 = configObj.numImages;\r\n        const remainingStatements = columnStatements.imagesList.length;\r\n        const numerator = totalStatements2 - remainingStatements;\r\n        const ratio = numerator / totalStatements2;\r\n        const completedPercent = (ratio * 30).toFixed();\r\n\r\n        // update Progress Bar State\r\n        setProgressScoreAdditionalSort(completedPercent);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }; // end of dragEnd helper function\r\n\r\n  // get user settings\r\n  const cardFontSize = props.cardFontSize;\r\n  const fontColor = props.fontColor;\r\n\r\n  // just the hori container size, not card size\r\n  let horiCardMinHeight = 50;\r\n\r\n  // pull data from STATE\r\n  const statements = columnStatements.imagesList;\r\n\r\n  // setup grid columns\r\n  const columns = qSortHeaders.map((value, index, highlightedColHeader) => {\r\n    const columnId = `column${qSortHeaders[index]}`;\r\n    const sortValue = qSortHeaderNumbers[index];\r\n    const columnColor = columnColorsArray[index];\r\n\r\n    return (\r\n      <SortColumnImages\r\n        key={columnId}\r\n        minHeight={qSortPattern[index] * (+props.cardHeight + 8)}\r\n        maxCards={qSortPattern[index]}\r\n        columnId={columnId}\r\n        columnStatementsArray={columnStatements.vCols[columnId]}\r\n        forcedSorts={configObj.warnOverloadedColumn}\r\n        columnWidth={props.columnWidth}\r\n        cardHeight={+props.cardHeight}\r\n        sortValue={sortValue}\r\n        columnColor={columnColor}\r\n        cardFontSize={cardFontSize}\r\n        qSortHeaderNumber={qSortHeaderNumbers[index]}\r\n        columnHeadersColor={columnHeadersColorsArray[index]}\r\n        greenCardColor={greenCardColor}\r\n        yellowCardColor={yellowCardColor}\r\n        pinkCardColor={pinkCardColor}\r\n        fontColor={fontColor}\r\n        handleOpenImageModal={handleOpenImageModal}\r\n      />\r\n    );\r\n  }); // end map of sort columns\r\n\r\n  const InnerList = React.memo((props) => {\r\n    const items = props.statements.map((item, index) => {\r\n      return (\r\n        <Draggable\r\n          key={item.id}\r\n          draggableId={item.id}\r\n          index={index}\r\n          sortValue={item.sortValue}\r\n          cardColor={item.cardColor}\r\n          className=\"droppableCards\"\r\n        >\r\n          {(provided, snapshot) => (\r\n            <>\r\n              <FeederCard\r\n                ref={provided.innerRef}\r\n                className={`${item.cardColor}`}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                onClick={(e) => handleOpenImageModal(e, item.element.props.src)}\r\n                style={getItemStyleHoriImages(\r\n                  snapshot.isDragging,\r\n                  provided.draggableProps.style,\r\n                  `${item.sortValue}`,\r\n                  `${item.cardColor}`,\r\n                  columnWidth,\r\n                  props.cardHeight,\r\n                  cardFontSize,\r\n                  greenCardColor,\r\n                  yellowCardColor,\r\n                  pinkCardColor,\r\n                  fontColor\r\n                )}\r\n              >\r\n                <img\r\n                  src={item.element.props.src}\r\n                  alt={item.element.props.alt}\r\n                />\r\n              </FeederCard>\r\n              {provided.placeholder}\r\n            </>\r\n          )}\r\n        </Draggable>\r\n      );\r\n    });\r\n    return items;\r\n  });\r\n  /*\r\n  *** placeholder problem is from React Beautiful DND lib - due to position fixed\r\n  let finalItem = <div key={\"placeholder\"}>{props.provided.placeholder}</div>;\r\n  items.unshift(finalItem);\r\n  todo - fix placeholder problem\r\n  */\r\n\r\n  // returning main content => horizontal feeder\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={openImageModal}\r\n        center\r\n        onClose={() => setOpenImageModal(false)}\r\n        classNames={{\r\n          modal: `${configObj.imageFormat}`,\r\n          overlay: \"dualImageOverlay\",\r\n        }}\r\n      >\r\n        <img src={imageSource} width=\"100%\" height=\"auto\" alt=\"modalImage\" />\r\n      </Modal>\r\n      <Modal\r\n        open={openDualImageModal}\r\n        center\r\n        onClose={() => {\r\n          setOpenDualImageModal(false);\r\n          setDualPhotoArray([]);\r\n        }}\r\n        classNames={{ overlay: \"dualImageOverlay\", modal: \"dualImageModal\" }}\r\n      >\r\n        <img\r\n          src={dualPhotoArray[0]}\r\n          width=\"49.5%\"\r\n          height=\"auto\"\r\n          alt=\"modalImage\"\r\n        />\r\n        <img\r\n          src={dualPhotoArray[1]}\r\n          width=\"49.5%\"\r\n          height=\"auto\"\r\n          style={{ marginLeft: \"1%\" }}\r\n          alt=\"modalImage2\"\r\n        />\r\n      </Modal>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"rootDiv\">\r\n          {columns}\r\n          <SortFooterDiv id=\"SortFooterDiv\">\r\n            <CardSlider id=\"CardSlider\">\r\n              <Droppable\r\n                id=\"Droppable\"\r\n                droppableId=\"statements\"\r\n                direction=\"horizontal\"\r\n                style={{ maxWidth: \"100vw\" }}\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <HorizontalFeederDiv\r\n                    id=\"HorizontalFeederDiv\"\r\n                    ref={provided.innerRef}\r\n                    style={getListStyleHori(\r\n                      snapshot.isDraggingOver,\r\n                      horiCardMinHeight,\r\n                      sortDirection\r\n                    )}\r\n                  >\r\n                    <InnerList\r\n                      statements={statements}\r\n                      cardHeight={props.cardHeight}\r\n                      provided={provided}\r\n                    />\r\n                    <span style={{ display: \"none\" }}>\r\n                      {\" \"}\r\n                      {provided.placeholder}\r\n                    </span>\r\n                  </HorizontalFeederDiv>\r\n                )}\r\n              </Droppable>\r\n            </CardSlider>\r\n          </SortFooterDiv>\r\n        </div>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SortGridImages;\r\n\r\nconst SortFooterDiv = styled.div`\r\n  background: #e4e4e4;\r\n  padding-right: 10px;\r\n  position: fixed;\r\n  left: 0px;\r\n  bottom: 50px;\r\n  width: 100vw;\r\n  height: ${(props) => `${+props.cardHeight + 20}px;`};\r\n`;\r\n\r\nconst CardSlider = styled.div`\r\n  display: flex;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst HorizontalFeederDiv = styled.div``;\r\n\r\nconst FeederCard = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\n/* DO NOT DELETE - important\r\n\"columnColorsArray\": [\r\n      \"#ffb2b2\"\r\n      \"#ffbfbf\",\r\n      \"#ffcbcb\",\r\n      \"#ffd8d8\",\r\n      \"#ffe5e5\",\r\n      \"#f5f5f5\",\r\n      \"#d6f5d6\",\r\n      \"#c1f0c1\",\r\n      \"#adebad\",\r\n      \"#98E698\",\r\n      \"#84e184\"\r\n    ],\r\n*/\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerSortModal = (state) => state.triggerSortModal;\r\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\r\n\r\nconst SortHelpModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerSortModal = useStore(getTriggerSortModal);\r\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\r\n\r\n  const helpModalHead = ReactHtmlParser(decodeHTML(langObj.sortHelpModalHead));\r\n  const helpModalText = ReactHtmlParser(decodeHTML(langObj.sortHelpModalText));\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSortModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerSortModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{helpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{helpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SortHelpModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"./decodeHTML\";\r\nimport useSettingsStore from \"../globalState/useSettingsStore\";\r\nimport useStore from \"../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerSortFinishedMod = (state) => state.triggerSortingFinishedModal;\r\nconst getSetTrigSortFinishMod = (state) => state.setTriggerSortingFinishedModal;\r\n\r\nconst SortingFinishedModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerSortingFinishedModal = useStore(getTriggerSortFinishedMod);\r\n  const setTriggerSortingFinishedModal = useStore(getSetTrigSortFinishMod);\r\n\r\n  const helpModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.sortingCompleteModalHead)) || \"\";\r\n  const helpModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.sortingCompleteModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSortingFinishedModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerSortingFinishedModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{helpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{helpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SortingFinishedModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerSortPreventNavModal;\r\nconst getSetTriggerSortPreventNavModal = (state) =>\r\n  state.setTriggerSortPreventNavModal;\r\n\r\nconst PresortPreventNavModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerSortPreventNavModal = useStore(\r\n    getSetTriggerSortPreventNavModal\r\n  );\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.sortPreventNavModalHead)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.sortPreventNavModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSortPreventNavModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PresortPreventNavModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerSortOverloadedColumnModal;\r\nconst getSetTrigOverColModal = (state) =>\r\n  state.setTriggerSortOverloadedColumnModal;\r\n\r\nconst OverloadedColumnModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerSortOverloadedColumnModal = useStore(getSetTrigOverColModal);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.sortOverloadedColumnModalHead)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.sortOverloadedColumnModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSortOverloadedColumnModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default OverloadedColumnModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getMapObj = (state) => state.mapObj;\r\n\r\nconst SortColGuides = (props) => {\r\n  // STATE\r\n  const mapObj = useSettingsStore(getMapObj);\r\n\r\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\r\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\r\n  let columnWidth = +props.columnWidth + 11;\r\n\r\n  return (\r\n    <ColorBarDivContainer id=\"colorBarDivContainer\">\r\n      {qSortHeaderNumbers.map((value, index) => {\r\n        return (\r\n          <ColorBarDiv\r\n            key={uuid()}\r\n            width={columnWidth}\r\n            color={columnHeadersColorsArray[index]}\r\n          >\r\n            {value}\r\n          </ColorBarDiv>\r\n        );\r\n      })}\r\n    </ColorBarDivContainer>\r\n  );\r\n};\r\n\r\nexport default SortColGuides;\r\n\r\nconst ColorBarDiv = styled.div`\r\n  background-color: ${(props) => props.color};\r\n  width: ${(props) => +props.width}px;\r\n  margin-right: 1px;\r\n  margin-left: 1px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  height: 28px;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst ColorBarDivContainer = styled.div`\r\n  display: flex;\r\n  padding-left: 2px;\r\n  flex-direction: row;\r\n  background-color: #d8d8d8;\r\n  margin-bottom: 0px;\r\n  height: 30px;\r\n`;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport SortGrid from \"./SortGrid\";\r\nimport SortGridImages from \"./SortGridImages\";\r\nimport styled from \"styled-components\";\r\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\r\nimport SortHelpModal from \"./SortHelpModal\";\r\nimport SortingFinishedModal from \"../../utilities/SortingFinishedModal\";\r\nimport PreventSortNavModal from \"./PreventSortNavModal\";\r\nimport OverloadedColumnModal from \"./OverloadedColumnModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport SortColGuides from \"./SortColGuides\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\n\r\nfunction debounce(fn, ms) {\r\n  let timer;\r\n  return (_) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout((_) => {\r\n      timer = null;\r\n      fn.apply(this, arguments);\r\n    }, ms);\r\n  };\r\n}\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getMapObj = (state) => state.mapObj;\r\nconst getCardFontSizeSort = (state) => state.cardFontSizeSort;\r\nconst getTopMargin = (state) => state.topMargin;\r\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getSetTopMargin = (state) => state.setTopMargin;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\nlet getCardHeightSort = (state) => state.cardHeightSort;\r\n\r\nconst Sort = () => {\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const mapObj = useSettingsStore(getMapObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const imageSort = configObj.useImages;\r\n\r\n  let cardFontSize = useStore(getCardFontSizeSort);\r\n  const topMargin = useStore(getTopMargin);\r\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const setTopMargin = useStore(getSetTopMargin);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n  // const setCardFontSize = useStore(getSetCardFontSize);\r\n  const qSortPattern = [...mapObj.qSortPattern];\r\n  let cardHeight = useStore(getCardHeightSort);\r\n  const cardHeightPersist = +localStorage.getItem(\"cardHeightSort\");\r\n  const cardFontSizePersist = +localStorage.getItem(\"fontSizeSort\");\r\n\r\n  if (cardHeightPersist) {\r\n    cardHeight = cardHeightPersist;\r\n  }\r\n  if (cardFontSizePersist) {\r\n    cardFontSize = cardFontSizePersist;\r\n  }\r\n\r\n  // force updates on window resize\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: document.body.clientWidth,\r\n  });\r\n\r\n  // LOCAL STATE\r\n  const [columnWidth, setColumnWidth] = useState(150);\r\n\r\n  // set next button display\r\n  setDisplayNextButton(true);\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const fontColor = configObj.defaultFontColor;\r\n\r\n  const sortDisagreement =\r\n    ReactHtmlParser(decodeHTML(langObj.sortDisagreement)) || \"\";\r\n  const sortAgreement =\r\n    ReactHtmlParser(decodeHTML(langObj.sortAgreement)) || \"\";\r\n  const condOfInst = ReactHtmlParser(decodeHTML(langObj.condOfInst)) || \"\";\r\n\r\n  const qlength = qSortPattern.length;\r\n\r\n  const visibleWidthAdjust = useMemo(() => {\r\n    // less than -3\r\n    // -6 to +6\r\n    if (qlength > 12) {\r\n      return 170;\r\n    }\r\n    // -5 to +5\r\n    if (qlength > 10) {\r\n      return 145;\r\n    }\r\n    // -4 to +4\r\n    if (qlength > 8) {\r\n      return 120;\r\n    }\r\n    // -3 to +3\r\n    if (qlength > 6) {\r\n      return 96;\r\n    }\r\n\r\n    if (qlength > 0) {\r\n      return 70;\r\n    }\r\n  }, [qlength]);\r\n\r\n  // page resize\r\n  useEffect(() => {\r\n    const columnWidth =\r\n      (dimensions.width - visibleWidthAdjust) / qSortPattern.length;\r\n    setColumnWidth(columnWidth);\r\n\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: document.body.clientWidth,\r\n      });\r\n    }, 200);\r\n\r\n    window.addEventListener(\"resize\", debouncedHandleResize);\r\n\r\n    return (_) => {\r\n      window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    };\r\n  }, [dimensions, qSortPattern.length, visibleWidthAdjust]);\r\n\r\n  useEffect(() => {\r\n    /* this should adjust the margin of the sort grid because I can't know\r\n     the size - it will depend on how much the researcher writes in the \r\n     \"conditions of instruction\" section - so, I grab the height of titleBar \r\n     after render and reset the margin\r\n    */\r\n    const sortGridMarginTop = +JSON.parse(\r\n      localStorage.getItem(\"sortGridMarginTop\")\r\n    );\r\n    let height = document.getElementById(\"sortTitleBarContainer\").clientHeight;\r\n\r\n    height = +JSON.stringify(height);\r\n\r\n    setTimeout(() => {\r\n      if (sortGridMarginTop !== height) {\r\n        setTopMargin(height);\r\n        localStorage.setItem(\"sortGridMarginTop\", JSON.stringify(height));\r\n      } else {\r\n        setTopMargin(+sortGridMarginTop);\r\n      }\r\n    }, 50);\r\n  });\r\n\r\n  useEffect(() => {\r\n    let startTime = Date.now();\r\n    const setStateAsync = async () => {\r\n      await setPresortNoReturn(true);\r\n      await setCurrentPage(\"sort\");\r\n    };\r\n    setStateAsync();\r\n    return () => {\r\n      calculateTimeOnPage(startTime, \"sortPage\", \"sortPage\");\r\n    };\r\n  }, [setPresortNoReturn, setCurrentPage]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PromptUnload />\r\n      <SortHelpModal />\r\n      <PreventSortNavModal />\r\n      <SortingFinishedModal />\r\n      <OverloadedColumnModal />\r\n      <SortTitleBarContainer id=\"sortTitleBarContainer\">\r\n        <SortTitleBar id=\"sortTitleBar\" background={headerBarColor}>\r\n          <Disagree>{sortDisagreement}</Disagree>\r\n          <CondOfInst fontSize={configObj.condOfInstFontSize}>\r\n            {condOfInst}\r\n          </CondOfInst>\r\n          <Agree>{sortAgreement}</Agree>\r\n        </SortTitleBar>\r\n        <SortColGuides columnWidth={columnWidth} />\r\n      </SortTitleBarContainer>\r\n      <SortGridContainer marginTop={topMargin}>\r\n        {imageSort ? (\r\n          <SortGridImages\r\n            id=\"sortGridImages\"\r\n            dimensions={dimensions}\r\n            cardFontSize={cardFontSize}\r\n            fontColor={fontColor}\r\n            columnWidth={columnWidth}\r\n            cardHeight={cardHeight}\r\n          />\r\n        ) : (\r\n          <SortGrid\r\n            id=\"sortGridDiv\"\r\n            dimensions={dimensions}\r\n            cardFontSize={cardFontSize}\r\n            fontColor={fontColor}\r\n            columnWidth={columnWidth}\r\n            cardHeight={cardHeight}\r\n          />\r\n        )}\r\n        ;\r\n      </SortGridContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n\r\nconst SortTitleBarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 999;\r\n`;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: 100vw;\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-bottom: 5px;\r\n  display: inline-grid;\r\n  grid-template-columns: 15% 1fr 15%;\r\n  color: black;\r\n  font-weight: bold;\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst CondOfInst = styled.div`\r\n  color: white;\r\n  max-width: 80vw;\r\n  font-size: ${(props) => `${props.fontSize}px`};\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  align-self: end;\r\n`;\r\n\r\nconst Agree = styled.div`\r\n  font-size: 22px;\r\n  align-self: end;\r\n  justify-self: end;\r\n  color: white;\r\n  padding-bottom: 5px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst Disagree = styled.div`\r\n  font-size: 22px;\r\n  align-self: end;\r\n  justify-self: start;\r\n  color: white;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst SortGridContainer = styled.div`\r\n  margin-top: ${(props) => `${props.marginTop}px`};\r\n  margin-bottom: 250px;\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerTransmissionOKModal;\r\nconst getSetTriggerTransOKMod = (state) => state.setTriggerTransmissionOKModal;\r\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\r\n\r\nconst SubmitSuccessModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerTransmissionOKModal = useStore(getSetTriggerTransOKMod);\r\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.transferOkModalHeader)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.transferOkModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerTransmissionOKModal(false);\r\n    setDisplayGoodbyeMessage(true);\r\n    //document.getElementById(\"secondProjectLink\").click();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SubmitSuccessModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerTransmissionFailModal;\r\nconst getSetTrigTransFailMod = (state) => state.setTriggerTransmissionFailModal;\r\n\r\nconst SubmitFailureModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTransFailMod);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.transferFailModalHeader)) || \"\";\r\n\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.transferFailModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerTransmissionFailModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SubmitFailureModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\r\nimport SubmitFailureModal from \"./SubmitFailureModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\r\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\r\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\r\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\r\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\r\nconst getTransmittingData = (state) => state.transmittingData;\r\nconst getSetTransmittingData = (state) => state.setTransmittingData;\r\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\r\nconst getSetCheckInternetConnection = (state) =>\r\n  state.setCheckInternetConnection;\r\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\r\n\r\nconst SubmitResultsButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\r\n  let submitFailNumber = useStore(getSubmitFailNumber);\r\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\r\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\r\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\r\n  let transmittingData = useStore(getTransmittingData);\r\n  const setTransmittingData = useStore(getSetTransmittingData);\r\n  let checkInternetConnection = useStore(getCheckInternetConnection);\r\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\r\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\r\n\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.btnTransfer)) || \"\";\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.target.disabled = true;\r\n\r\n    // setup for client-side internet connection fail case\r\n    setTransmittingData(true);\r\n    setCheckInternetConnection(false);\r\n    setTimeout(() => {\r\n      setTransmittingData(false);\r\n      setCheckInternetConnection(true);\r\n    }, 20000);\r\n\r\n    console.log(JSON.stringify(props.results, null, 2));\r\n\r\n    window.firebase\r\n      .auth()\r\n      .signInAnonymously()\r\n      .then(() => {\r\n        // Signed in..\r\n        window.rootRef.push(props.results, function (error) {\r\n          if (error) {\r\n            // data error action -  modal\r\n            console.log(\"data error - there was an error at rootRef level!\");\r\n            setTriggerTransmissionFailModal(true);\r\n            e.target.disabled = false;\r\n          } else {\r\n            // do success action - modal\r\n            console.log(\"success! pushed to database\");\r\n            // reset localStorage\r\n            let urlUsercode = localStorage.getItem(\"urlUsercode\");\r\n            localStorage.clear();\r\n            localStorage.setItem(\"urlUsercode\", urlUsercode);\r\n\r\n            if (configObj.linkToSecondProject === true) {\r\n              setDisplayGoodbyeMessage(true);\r\n\r\n              const nextLinkAnchor = document.createElement(\"a\");\r\n              nextLinkAnchor.setAttribute(\"id\", \"secondProjectLink\");\r\n              nextLinkAnchor.setAttribute(\r\n                \"href\",\r\n                `${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`\r\n              );\r\n              if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\r\n                nextLinkAnchor.setAttribute(\"target\", \"_blank\");\r\n              }\r\n              document.body.appendChild(nextLinkAnchor);\r\n              document.getElementById(\"secondProjectLink\").click();\r\n            }\r\n\r\n            setTriggerTransmissionOKModal(true);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        submitFailNumber = submitFailNumber + 1;\r\n        console.log(submitFailNumber);\r\n        setTransmittingData(false);\r\n        // Firebase connection error\r\n        console.log(\"Connection error - there was an error at firebase level!\");\r\n        setTriggerTransmissionFailModal(true);\r\n        console.log(errorCode, errorMessage);\r\n        e.target.disabled = false;\r\n\r\n        if (submitFailNumber > 2) {\r\n          console.log(\"display fallback set to true\");\r\n          setDisplaySubmitFallback(true);\r\n          displaySubmitFallback = true;\r\n        }\r\n      });\r\n    console.log(\"submission processed\");\r\n  };\r\n\r\n  if (displaySubmitFallback === true) {\r\n    return (\r\n      <React.Fragment>\r\n        <PromptUnload />\r\n        <SubmitSuccessModal />\r\n        <SubmitFailureModal />\r\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PromptUnload />\r\n      <SubmitSuccessModal />\r\n      <SubmitFailureModal />\r\n      {transmittingData ? (\r\n        <TransmittingSpin />\r\n      ) : (\r\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n          {btnTransferText}\r\n        </StyledButton>\r\n      )}\r\n      {checkInternetConnection && (\r\n        <WarningDiv>Check your internet connection</WarningDiv>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SubmitResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\nconst DisabledButton = styled.button`\r\n  border-color: lightgray;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: lightgray;\r\n`;\r\n\r\nconst TransmittingSpin = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #337ab7;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst WarningDiv = styled.div`\r\n  background-color: lightpink;\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n  font-weight: bold;\r\n`;\r\n","const calculatePostsortResults = (resultsPostsort, mapObj, configObj) => {\r\n  const newObject = {};\r\n\r\n  // check for missing responses\r\n  const qSortPattern = mapObj.qSortPattern;\r\n  const qSortHeaderNumbers = mapObj.qSortHeaders;\r\n  const highCardNum = +qSortPattern[qSortPattern.length - 1];\r\n  const highCardVal = +qSortHeaderNumbers[qSortHeaderNumbers.length - 1];\r\n  const highCard2Num = +qSortPattern[qSortPattern.length - 2];\r\n  const highCard2Val = +qSortHeaderNumbers[qSortHeaderNumbers.length - 2];\r\n  const lowCardNum = +qSortPattern[0];\r\n  const lowCardVal = qSortHeaderNumbers[0];\r\n  const lowCard2Num = +qSortPattern[1];\r\n  const lowCard2Val = qSortHeaderNumbers[1];\r\n  const maxValue = Math.max(...qSortPattern);\r\n  const neuCardNum = maxValue;\r\n  const neuCardVal = 0;\r\n\r\n  // check for high card answers\r\n  const length = highCardNum;\r\n  for (let i = 0; i < length; i++) {\r\n    if (!resultsPostsort.hasOwnProperty(`column${highCardVal}_${i}`))\r\n      resultsPostsort[`column${highCardVal}_${i}`] = \"no response\";\r\n  }\r\n\r\n  // check for high card 2 answers\r\n  if (configObj.showSecondPosColumn === true) {\r\n    const length2 = highCard2Num;\r\n    for (let ii = 0; ii < length2; ii++) {\r\n      if (!resultsPostsort.hasOwnProperty(`column${highCard2Val}_${ii}`))\r\n        resultsPostsort[`column${highCard2Val}_${ii}`] = \"no response\";\r\n    }\r\n  }\r\n\r\n  // check for neu card answers\r\n  if (configObj.displayNeutralObjects === true) {\r\n    const length5 = neuCardNum;\r\n    for (let jjj = 0; jjj < length5; jjj++) {\r\n      if (!resultsPostsort.hasOwnProperty(`column${neuCardVal}_${jjj}`))\r\n        resultsPostsort[`column${neuCardVal}_${jjj}`] = \"no response\";\r\n    }\r\n  }\r\n\r\n  // check for low card 2 answers\r\n  if (configObj.showSecondNegColumn === true) {\r\n    const length4 = lowCard2Num;\r\n    for (let jj = 0; jj < length4; jj++) {\r\n      if (!resultsPostsort.hasOwnProperty(`column${lowCard2Val}_${jj}`))\r\n        resultsPostsort[`column${lowCard2Val}_${jj}`] = \"no response\";\r\n    }\r\n  }\r\n\r\n  // check for low card answers\r\n  const length3 = lowCardNum;\r\n  for (let j = 0; j < length3; j++) {\r\n    if (!resultsPostsort.hasOwnProperty(`column${lowCardVal}_${j}`))\r\n      resultsPostsort[`column${lowCardVal}_${j}`] = \"no response\";\r\n  }\r\n\r\n  // re-arrange object properties\r\n  let keys = Object.keys(resultsPostsort);\r\n  keys.sort();\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    newObject[keys[i]] = resultsPostsort[keys[i]];\r\n  }\r\n  return newObject;\r\n};\r\n\r\nexport default calculatePostsortResults;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst SubmitResultsButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const downloadButtonText =\r\n    ReactHtmlParser(decodeHTML(langObj.btnDownload)) || \"\";\r\n  const randomId = uuid().substring(0, 12);\r\n\r\n  const resultsWithId = {};\r\n  resultsWithId[randomId] = props.results;\r\n\r\n  const finalResults = JSON.stringify(resultsWithId);\r\n\r\n  const handleClick = (e) => {\r\n    function download(content, fileName, contentType) {\r\n      var a = document.createElement(\"a\");\r\n      var file = new Blob([content], { type: contentType });\r\n      a.href = URL.createObjectURL(file);\r\n      a.download = fileName;\r\n      a.click();\r\n      URL.revokeObjectURL(a.href);\r\n    }\r\n\r\n    download(finalResults, \"EQ_Web_Sort_Results.txt\", \"text/plain\");\r\n  };\r\n\r\n  return (\r\n    <ButtonContainer>\r\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n        {downloadButtonText}\r\n      </StyledButton>\r\n    </ButtonContainer>\r\n  );\r\n};\r\nexport default SubmitResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: fit-content;\r\n\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 50vw;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport FallbackButtons from \"./FallbackButtons\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\n// eslint-disable-next-line react/button-has-type\r\n/* eslint react/prop-types: 0 */\r\n\r\n/* const handleClick = () => {\r\n  console.log(\"clicked\");\r\n}; */\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst SubmitFallback = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const fallbackMessage =\r\n    ReactHtmlParser(decodeHTML(langObj.fallbackMessage)) || \"\";\r\n\r\n  return (\r\n    <div>\r\n      <StyledMessage>{fallbackMessage}</StyledMessage>\r\n      <FallbackButtons results={props.results} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitFallback;\r\n\r\nconst StyledMessage = styled.div`\r\n  width: 50vw;\r\n  max-width: 900px;\r\n  font-size: 3vh;\r\n  background-color: orange;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\r\nimport SubmitFailureModal from \"./SubmitFailureModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\r\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\r\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\r\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\r\n  state.setTriggerLocalSubmitSuccessModal;\r\nconst getSurveyQuestionObjArray = (state) => state.surveyQuestionObjArray;\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst SubmitLocalResultsButton = (props) => {\r\n  console.log(\"props.results\", props.results);\r\n\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\r\n  let localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\r\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\r\n  const setTriggerLocalSubmitSuccessModal = useStore(\r\n    getSetTriggerLocalSubmitSuccessModal\r\n  );\r\n  const surveyQuestionObjArray = useSettingsStore(getSurveyQuestionObjArray);\r\n  console.log(\"surveyQuestionObjArray\", surveyQuestionObjArray);\r\n\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.localSaveDataButton)) || \"\";\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.target.disabled = true;\r\n\r\n    try {\r\n      // reset names in case of page reload\r\n      let localParticipantName = localStorage.getItem(\"localParticipantName\");\r\n      let localUsercode = localStorage.getItem(\"localUsercode\");\r\n      const resultsProject = JSON.parse(JSON.stringify(props.results));\r\n      resultsProject.partId = localParticipantName;\r\n      resultsProject.usercode = localUsercode;\r\n      // set results object\r\n      const participantDesignation1 = uuid();\r\n      const participantDesignation = participantDesignation1.substring(0, 8);\r\n      localStoredQsorts[participantDesignation] = resultsProject;\r\n      setLocalStoredQsorts(localStoredQsorts);\r\n\r\n      // clean up for next participant\r\n      localStorage.removeItem(\"cumulativelandingPageDuration\");\r\n      localStorage.removeItem(\"cumulativepresortPageDuration\");\r\n      localStorage.removeItem(\"cumulativesortPageDuration\");\r\n      localStorage.removeItem(\"cumulativepostsortPageDuration\");\r\n      localStorage.removeItem(\"cumulativesurveyPageDuration\");\r\n      localStorage.removeItem(\"lastAccesslandingPage\");\r\n      localStorage.removeItem(\"lastAccesspresortPage\");\r\n      localStorage.removeItem(\"lastAccesssortPage\");\r\n      localStorage.removeItem(\"lastAccesspostsortPage\");\r\n      localStorage.removeItem(\"lastAccesssurveyPage\");\r\n      localStorage.removeItem(\"timeOnlandingPage\");\r\n      localStorage.removeItem(\"timeOnpresortPage\");\r\n      localStorage.removeItem(\"timeOnsortPage\");\r\n      localStorage.removeItem(\"timeOnpostsortPage\");\r\n      localStorage.removeItem(\"timeOnsurveyPage\");\r\n      localStorage.removeItem(\"resultsSurvey\");\r\n      localStorage.removeItem(\"resultsSort\");\r\n      localStorage.removeItem(\"resultsPresort\");\r\n      localStorage.removeItem(\"resultsPostsort\");\r\n      localStorage.removeItem(\"HC-requiredCommentsObj\");\r\n      localStorage.removeItem(\"HC2-requiredCommentsObj\");\r\n      localStorage.removeItem(\"LC-requiredCommentsObj\");\r\n      localStorage.removeItem(\"LC2-requiredCommentsObj\");\r\n      localStorage.removeItem(\"postsortCommentCardCount\");\r\n      localStorage.removeItem(\"allCommentsObj\");\r\n      localStorage.removeItem(\"localParticipantName\");\r\n      localStorage.removeItem(\"localUsercode\");\r\n\r\n      surveyQuestionObjArray.forEach((question) => {\r\n        localStorage.removeItem(question.id);\r\n      });\r\n\r\n      setTriggerLocalSubmitSuccessModal(true);\r\n      setHasDownloadedQsorts(false);\r\n    } catch (error) {\r\n      e.target.disabled = false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SubmitSuccessModal />\r\n      <SubmitFailureModal />\r\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n        {btnTransferText}\r\n      </StyledButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SubmitLocalResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport { withRouter } from \"react-router\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\r\nconst getSetColumnStatements = (state) => state.setColumnStatements;\r\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\r\n\r\nconst ReturnToLocalPanelButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\r\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\r\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\r\n  const newColumnStatements = cloneDeep(resetColumnStatements);\r\n\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.returnToLocalPanelButtonText)) || \"\";\r\n\r\n  const {\r\n    history,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n  } = props;\r\n\r\n  let reload = async function (history) {\r\n    await new Promise((resolve, reject) => window.location.reload());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledButton\r\n        onClick={(event) => {\r\n          onClick && onClick(event);\r\n          setPresortNoReturn(false);\r\n          setColumnStatements(newColumnStatements);\r\n          history.push(\"/\");\r\n          reload();\r\n        }}\r\n      >\r\n        {btnTransferText}\r\n      </StyledButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default withRouter(ReturnToLocalPanelButton);\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport ReturnToLocalPanelButton from \"./ReturnToLocalPanelButton\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTrigLclSubmitSucMdl = (state) => state.triggerLocalSubmitSuccessModal;\r\n\r\nconst LocalSubmitSuccessModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTrigLclSubmitSucMdl);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.localSubmitSuccessModalHeader)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.localSubmitSuccessModalText)) || \"\";\r\n\r\n  const onCloseModal = () => {};\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n      <ButtonContainer>\r\n        <ReturnToLocalPanelButton />\r\n      </ButtonContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LocalSubmitSuccessModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\r\nimport SubmitFailureModal from \"./SubmitFailureModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport SteinStore from \"stein-js-client\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\r\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\r\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\r\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\r\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\r\nconst getTransmittingData = (state) => state.transmittingData;\r\nconst getSetTransmittingData = (state) => state.setTransmittingData;\r\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\r\nconst getSetCheckInternetConnection = (state) =>\r\n  state.setCheckInternetConnection;\r\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\r\n\r\nconst SubmitResultsButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const apiString = props.api;\r\n  const rawData = props.results;\r\n\r\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\r\n  let submitFailNumber = useStore(getSubmitFailNumber);\r\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\r\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\r\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\r\n  let transmittingData = useStore(getTransmittingData);\r\n  const setTransmittingData = useStore(getSetTransmittingData);\r\n  let checkInternetConnection = useStore(getCheckInternetConnection);\r\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\r\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\r\n\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.btnTransfer)) || \"\";\r\n\r\n  const store = new SteinStore(apiString);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    e.target.disabled = true;\r\n    setTransmittingData(true);\r\n    setCheckInternetConnection(false);\r\n\r\n    setTimeout(() => {\r\n      setTransmittingData(false);\r\n      setCheckInternetConnection(true);\r\n    }, 20000);\r\n\r\n    // create results object for transmission\r\n    let formattedResultsObj = {};\r\n    let iterator = 1;\r\n    for (const [key, value] of Object.entries(rawData)) {\r\n      formattedResultsObj[iterator] = `${key}: ${value}`;\r\n      iterator += 1;\r\n    }\r\n\r\n    // POST TO STEIN\r\n\r\n    console.log(JSON.stringify(formattedResultsObj, null, 2));\r\n    store.append(\"Sheet1\", [formattedResultsObj]).then((res) => {\r\n      if (Object.keys(res)[0] === \"error\") {\r\n        console.log(\"there was an error\");\r\n        // setTriggerTransmissionFailModal(true);\r\n\r\n        // re-enable submit button and log error number for fallback\r\n        e.target.disabled = false;\r\n        setTransmittingData(false);\r\n\r\n        submitFailNumber = submitFailNumber + 1;\r\n        console.log(submitFailNumber);\r\n\r\n        if (submitFailNumber > 2) {\r\n          console.log(\"display fallback set to true\");\r\n          setDisplaySubmitFallback(true);\r\n          displaySubmitFallback = true;\r\n        } else {\r\n          setTriggerTransmissionFailModal(true);\r\n        }\r\n      } else {\r\n        // submission success\r\n        console.log(res);\r\n        console.log(\"success! pushed to database\");\r\n        // reset localStorage\r\n        let urlUsercode = localStorage.getItem(\"urlUsercode\");\r\n        localStorage.clear();\r\n        localStorage.setItem(\"urlUsercode\", urlUsercode);\r\n\r\n        if (configObj.linkToSecondProject === true) {\r\n          setDisplayGoodbyeMessage(true);\r\n\r\n          let urlUsercode = localStorage.getItem(\"urlUsercode\");\r\n          const nextLinkAnchor = document.createElement(\"a\");\r\n          nextLinkAnchor.setAttribute(\"id\", \"secondProjectLink\");\r\n          nextLinkAnchor.setAttribute(\r\n            \"href\",\r\n            `${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`\r\n          );\r\n          if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\r\n            nextLinkAnchor.setAttribute(\"target\", \"_blank\");\r\n          }\r\n          document.body.appendChild(nextLinkAnchor);\r\n          document.getElementById(\"secondProjectLink\").click();\r\n        }\r\n\r\n        setTriggerTransmissionOKModal(true);\r\n      }\r\n    });\r\n\r\n    /*\r\n    if (props.results.sort !== \"no data\") {\r\n      let rawSort = props.results.sort;\r\n      let sortArray = rawSort.split(\"|\");\r\n      let sortObj = {};\r\n      sortArray.forEach((item, index) => (sortObj[\"s\" + (index + 1)] = +item));\r\n      sortObj.randomId = rawData.randomId;\r\n      sortObj.partId = rawData.partId;\r\n      sortObj.urlUsercode = rawData.urlUsercode;\r\n\r\n      console.log(JSON.stringify(sortObj, null, 2));\r\n\r\n      store.append(\"Sheet2\", [sortObj]).then((res) => {\r\n        if (Object.keys(res)[0] === \"error\") {\r\n          console.log(\"there was an error\");\r\n          e.target.disabled = false;\r\n          submitFailNumber = submitFailNumber + 1;\r\n          console.log(submitFailNumber);\r\n\r\n          if (submitFailNumber > 2) {\r\n            console.log(\"display fallback set to true\");\r\n            setDisplaySubmitFallback(true);\r\n            displaySubmitFallback = true;\r\n          } else {\r\n            setTriggerTransmissionFailModal(true);\r\n          }\r\n        } else {\r\n          // submission success\r\n          console.log(res);\r\n          setTriggerTransmissionOKModal(true);\r\n          console.log(\"success! pushed to database\");\r\n          localStorage.removeItem(\"cumulativelandingPageDuration\");\r\n          localStorage.removeItem(\"cumulativepresortPageDuration\");\r\n          localStorage.removeItem(\"cumulativesortPageDuration\");\r\n          localStorage.removeItem(\"cumulativepostsortPageDuration\");\r\n          localStorage.removeItem(\"cumulativesurveyPageDuration\");\r\n          localStorage.removeItem(\"lastAccesslandingPage\");\r\n          localStorage.removeItem(\"lastAccesspresortPage\");\r\n          localStorage.removeItem(\"lastAccesssortPage\");\r\n          localStorage.removeItem(\"lastAccesspostsortPage\");\r\n          localStorage.removeItem(\"lastAccesssurveyPage\");\r\n          localStorage.removeItem(\"timeOnlandingPage\");\r\n          localStorage.removeItem(\"timeOnpresortPage\");\r\n          localStorage.removeItem(\"timeOnsortPage\");\r\n          localStorage.removeItem(\"timeOnpostsortPage\");\r\n          localStorage.removeItem(\"timeOnsurveyPage\");\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n\r\n  if (displaySubmitFallback === true) {\r\n    return (\r\n      <React.Fragment>\r\n        <PromptUnload />\r\n        <SubmitSuccessModal />\r\n        <SubmitFailureModal />\r\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PromptUnload />\r\n      <SubmitSuccessModal />\r\n      <SubmitFailureModal />\r\n      {transmittingData ? (\r\n        <TransmittingSpin />\r\n      ) : (\r\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n          {btnTransferText}\r\n        </StyledButton>\r\n      )}\r\n      {checkInternetConnection && (\r\n        <WarningDiv>Check your internet connection</WarningDiv>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SubmitResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\nconst DisabledButton = styled.button`\r\n  border-color: lightgray;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: lightgray;\r\n`;\r\n\r\nconst TransmittingSpin = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #337ab7;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst WarningDiv = styled.div`\r\n  background-color: lightpink;\r\n  padding: 5px;\r\n  border-radius: 3px;\r\n  font-weight: bold;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n\r\nconst CopyToClipboardButton = (props) => {\r\n  console.log(\"incoming: \" + JSON.stringify(props.content));\r\n\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const copiedText = ReactHtmlParser(decodeHTML(langObj.copiedText)) || \"\";\r\n  const copyTextError =\r\n    ReactHtmlParser(decodeHTML(langObj.copyTextError)) || \"\";\r\n\r\n  // LOCAL STATE\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  // async generic function for copying to clipboard\r\n  async function copyToClipboard() {\r\n    try {\r\n      let formattedResultsTxt = \"\";\r\n      if (props.type === \"results\") {\r\n        for (const [key, value] of Object.entries(props.content)) {\r\n          formattedResultsTxt = formattedResultsTxt + `${key}: ${value} * `;\r\n        }\r\n      } else {\r\n        formattedResultsTxt = props.content;\r\n      }\r\n      console.log(\"formattedResults: \" + formattedResultsTxt);\r\n\r\n      await navigator.clipboard.writeText(formattedResultsTxt);\r\n      setResult(\"success\");\r\n    } catch (err) {\r\n      setResult(\"error\");\r\n      console.error(\"Failed to copy: \", err);\r\n    } finally {\r\n      setTimeout(() => setResult(\"\"), 3000);\r\n    }\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    copyToClipboard(props.content).then(() => {\r\n      console.log(\"copied to clipboard\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ContainerDiv>\r\n        <StyledButton tabindex=\"1\" onClick={(e) => handleClick(e)}>\r\n          {props.text}\r\n        </StyledButton>\r\n        <MessageDiv>\r\n          {result === \"success\" && copiedText}\r\n          {result === \"error\" && copyTextError}\r\n        </MessageDiv>\r\n      </ContainerDiv>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CopyToClipboardButton;\r\n\r\nconst StyledButton = styled.button`\r\n  grid-area: b;\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  min-width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme }) => theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 10px;\r\n  align-items: center;\r\n  grid-template-areas: \"a b c\";\r\n`;\r\n\r\nconst MessageDiv = styled.div`\r\n  grid-area: c;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  margin-top: 0.7em;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\r\nimport SubmitFailureModal from \"./SubmitFailureModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport CopyToClipboardButton from \"./CopyToClipboardButton\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\r\nconst getTransmittingData = (state) => state.transmittingData;\r\nconst getSetTransmittingData = (state) => state.setTransmittingData;\r\n// const getCheckInternetConnection = (state) => state.checkInternetConnection;\r\nconst getSetCheckInternetConnection = (state) =>\r\n  state.setCheckInternetConnection;\r\nconst getSetDisableRefreshCheck = (state) => state.setDisableRefreshCheck;\r\n\r\nconst SubmitResultsButton = (props) => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\r\n  let transmittingData = useStore(getTransmittingData);\r\n  const setTransmittingData = useStore(getSetTransmittingData);\r\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\r\n  const setDisableRefreshCheck = useStore(getSetDisableRefreshCheck);\r\n  const [showEmailButtons, setShowEmailButtons] = useState(false);\r\n\r\n  const rawData = props.results;\r\n  const emailAddress = configObj.emailAddress;\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.btnTransferEmail)) || \"\";\r\n  const defaultEmailClientFailText =\r\n    ReactHtmlParser(decodeHTML(langObj.defaultEmailClientFail)) || \"\";\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    setTransmittingData(true);\r\n    setCheckInternetConnection(false);\r\n\r\n    // create results object for transmission - * is a delimiter\r\n    let formattedResultsTxt = \"\";\r\n    for (const [key, value] of Object.entries(props.results)) {\r\n      formattedResultsTxt = formattedResultsTxt + `${key}:| ${value} | `;\r\n    }\r\n    console.log(\"formattedResults: \" + formattedResultsTxt);\r\n\r\n    // check for internet connection\r\n    setTimeout(() => {\r\n      setTransmittingData(false);\r\n      setCheckInternetConnection(true);\r\n    }, 200);\r\n\r\n    console.log(JSON.stringify(formattedResultsTxt, null, 2));\r\n\r\n    // Pass to Email client\r\n    if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\r\n      // Do Chrome-related actions  -  %0D%0A is a line break\r\n      window.open(\r\n        `mailto:${configObj.emailAddress}?subject=${configObj.emailSubject}&body=${langObj.emailMessage1} %0D%0A%0D%0AMy Results:%0D%0A${formattedResultsTxt}`\r\n      );\r\n      setShowEmailButtons(true);\r\n    } else {\r\n      // Do non-Chrome-related actions   -  %0D%0A is a line break\r\n      window.location.href = `mailto:${configObj.emailAddress}?subject=${configObj.emailSubject}&body=${langObj.emailMessage1} %0D%0A%0D%0AMy Results:%0D%0A${formattedResultsTxt}`;\r\n      setShowEmailButtons(true);\r\n    }\r\n  };\r\n\r\n  // set disable refresh check\r\n  useEffect(() => {\r\n    setDisableRefreshCheck(true);\r\n  }, [setDisableRefreshCheck]);\r\n\r\n  console.log(\"urlUsercode: \", props.results.urlUsercode);\r\n\r\n  if (displaySubmitFallback === true) {\r\n    return (\r\n      <React.Fragment>\r\n        <SubmitSuccessModal />\r\n\r\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SubmitSuccessModal />\r\n      <SubmitFailureModal />\r\n      <ContainerDiv>\r\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n          {btnTransferText}\r\n        </StyledButton>\r\n\r\n        {transmittingData ? <TransmittingSpin /> : null}\r\n      </ContainerDiv>\r\n      {showEmailButtons ? (\r\n        <EmailButtonDiv>\r\n          <ContentDiv>{defaultEmailClientFailText}</ContentDiv>\r\n          <CopyToClipboardButton\r\n            type={\"email\"}\r\n            content={emailAddress}\r\n            text={langObj.clipboardEmail}\r\n          />\r\n          <CopyToClipboardButton\r\n            type={\"results\"}\r\n            content={rawData}\r\n            text={langObj.clipboardResults}\r\n          />\r\n        </EmailButtonDiv>\r\n      ) : (\r\n        <SpacerDiv />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SubmitResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  grid-area: b;\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 10px;\r\n  align-items: center;\r\n  grid-template-areas: \"a b c\";\r\n`;\r\n\r\nconst DisabledButton = styled.button`\r\n  border-color: lightgray;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: lightgray;\r\n`;\r\n\r\nconst TransmittingSpin = styled.div`\r\n  grid-area: c;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  margin-top: 0.7em;\r\n\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #337ab7;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.2em;\r\n  width: 65vw;\r\n  font-size: 1.35em;\r\n  margin-top: 25px;\r\n  padding: 5px;\r\n  align-self: center;\r\n`;\r\n\r\nconst SpacerDiv = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nconst EmailButtonDiv = styled.div`\r\n  height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","const convertObjectToResults = (\r\n  columnStatements,\r\n  resultsPresort,\r\n  traceSorts\r\n) => {\r\n  let columnSortValues = Object.keys(columnStatements.vCols);\r\n\r\n  const sortArray = [];\r\n\r\n  let posStateNums;\r\n  let neuStateNums;\r\n  let negStateNums;\r\n\r\n  if (resultsPresort !== undefined) {\r\n    let posStateNums2 = resultsPresort.posStateNums;\r\n    let neuStateNums2 = resultsPresort.neuStateNums;\r\n    let negStateNums2 = resultsPresort.negStateNums;\r\n    posStateNums = posStateNums2.split(\",\");\r\n    neuStateNums = neuStateNums2.split(\",\");\r\n    negStateNums = negStateNums2.split(\",\");\r\n    posStateNums = posStateNums.filter((item) => item);\r\n    negStateNums = negStateNums.filter((item) => item);\r\n    neuStateNums = neuStateNums.filter((item) => item);\r\n  }\r\n  // old style loops for speed\r\n  //\r\n  for (let i = 0; i < columnSortValues.length; i++) {\r\n    let tempArray1 = columnStatements.vCols[columnSortValues[i]];\r\n    let presortVal;\r\n    // convert column key to column sort value\r\n    let sortValue1 = columnSortValues[i];\r\n    const replaceColumn = /column/gi;\r\n    const replaceN = /N/gi;\r\n    sortValue1 = sortValue1.replace(replaceColumn, \"\");\r\n    sortValue1 = sortValue1.replace(replaceN, \"-\");\r\n    const sortValue = parseInt(sortValue1, 10);\r\n\r\n    // push statement sort values into array\r\n    for (let j = 0; j < tempArray1.length; j++) {\r\n      let tempObject = {};\r\n      let statementNum2 = tempArray1[j].statementNum.toString();\r\n\r\n      let statementNum = parseInt(tempArray1[j].statementNum, 10);\r\n      tempObject.statement = statementNum;\r\n      tempObject.sortValue = sortValue;\r\n      if (posStateNums.includes(statementNum2)) {\r\n        presortVal = \"p\";\r\n      }\r\n      if (neuStateNums.includes(statementNum2)) {\r\n        presortVal = \"u\";\r\n      }\r\n      if (negStateNums.includes(statementNum2)) {\r\n        presortVal = \"n\";\r\n      }\r\n      tempObject.presortVal = presortVal;\r\n      sortArray.push(tempObject);\r\n    }\r\n  }\r\n\r\n  // sort array by statement\r\n  sortArray.sort((a, b) => {\r\n    return a.statement - b.statement;\r\n  });\r\n\r\n  // accumulate text string\r\n  let resultsText = \"\";\r\n  let presortTraceText = \"\";\r\n  for (let k = 0; k < sortArray.length; k++) {\r\n    resultsText += `${sortArray[k].sortValue}|`;\r\n    presortTraceText += `${sortArray[k].statement}*${sortArray[k].presortVal}*${sortArray[k].sortValue}|`;\r\n  }\r\n\r\n  // remove trailing bar\r\n  if (resultsText.charAt(resultsText.length - 1) === \"|\") {\r\n    resultsText = resultsText.substring(0, resultsText.length - 1);\r\n  }\r\n  // remove trailing bar\r\n  if (presortTraceText.charAt(presortTraceText.length - 1) === \"|\") {\r\n    presortTraceText = presortTraceText.substring(\r\n      0,\r\n      presortTraceText.length - 1\r\n    );\r\n  }\r\n\r\n  return { resultsText, presortTraceText };\r\n};\r\n\r\nexport default convertObjectToResults;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\r\nimport SubmitFailureModal from \"./SubmitFailureModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\r\nconst getTransmittingData = (state) => state.transmittingData;\r\nconst getSetTransmittingData = (state) => state.setTransmittingData;\r\nconst getSetCheckInternetConnection = (state) =>\r\n  state.setCheckInternetConnection;\r\nconst getSetDisableRefreshCheck = (state) => state.setDisableRefreshCheck;\r\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\r\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\r\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\r\n\r\nconst SubmitResultsButton = (props) => {\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\r\n  let transmittingData = useStore(getTransmittingData);\r\n  const setTransmittingData = useStore(getSetTransmittingData);\r\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\r\n  const setDisableRefreshCheck = useStore(getSetDisableRefreshCheck);\r\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\r\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\r\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\r\n\r\n  const btnTransferText =\r\n    ReactHtmlParser(decodeHTML(langObj.btnTransfer)) || \"\";\r\n\r\n  const encode = (data) => {\r\n    return Object.keys(data)\r\n      .map(\r\n        (key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])\r\n      )\r\n      .join(\"&\");\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    // create results object for transmission - * is a delimiter\r\n    e.target.disabled = true;\r\n\r\n    let formattedResultsTxt = \"\";\r\n    for (const [key, value] of Object.entries(props.results)) {\r\n      formattedResultsTxt = formattedResultsTxt + `${key}:| ${value} | `;\r\n    }\r\n    console.log(JSON.stringify(formattedResultsTxt, null, 2));\r\n\r\n    fetch(\"/\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: encode({\r\n        \"form-name\": \"Q-sorts\",\r\n        qSortData: formattedResultsTxt,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        console.log(\"response.status: \", response.status);\r\n        if (response.status !== 200) {\r\n          console.log(\r\n            \"data error - there was an setup error - check your Netlify form setup\"\r\n          );\r\n          setTriggerTransmissionFailModal(true);\r\n          e.target.disabled = false;\r\n          return;\r\n        }\r\n\r\n        // SUCCESS\r\n        console.log(\"Success!\");\r\n        // reset localStorage\r\n        let urlUsercode = localStorage.getItem(\"urlUsercode\");\r\n        localStorage.clear();\r\n        localStorage.setItem(\"urlUsercode\", urlUsercode);\r\n        if (configObj.linkToSecondProject === true) {\r\n          setDisplayGoodbyeMessage(true);\r\n          const nextLinkAnchor = document.createElement(\"a\");\r\n          nextLinkAnchor.setAttribute(\"id\", \"secondProjectLink\");\r\n          nextLinkAnchor.setAttribute(\r\n            \"href\",\r\n            `${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`\r\n          );\r\n          if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\r\n            nextLinkAnchor.setAttribute(\"target\", \"_blank\");\r\n          }\r\n          document.body.appendChild(nextLinkAnchor);\r\n          document.getElementById(\"secondProjectLink\").click();\r\n        }\r\n        setTriggerTransmissionOKModal(true);\r\n      })\r\n      .catch((error) => {\r\n        // ERROR - show modal\r\n        console.log(\"data error - there was an error at rootRef level!\");\r\n        console.log(error);\r\n        setTriggerTransmissionFailModal(true);\r\n        e.target.disabled = false;\r\n      });\r\n\r\n    e.preventDefault();\r\n\r\n    setTransmittingData(true);\r\n    setCheckInternetConnection(false);\r\n    setTimeout(() => {\r\n      setTransmittingData(false);\r\n      setCheckInternetConnection(true);\r\n    }, 20000);\r\n  }; // end handleClick\r\n\r\n  // set disable refresh check\r\n  useEffect(() => {\r\n    setDisableRefreshCheck(true);\r\n  }, [setDisableRefreshCheck]);\r\n\r\n  console.log(\"urlUsercode: \", props.results.urlUsercode);\r\n\r\n  if (displaySubmitFallback === true) {\r\n    return (\r\n      <React.Fragment>\r\n        <SubmitSuccessModal />\r\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SubmitSuccessModal />\r\n      <SubmitFailureModal />\r\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\r\n        {btnTransferText}\r\n      </StyledButton>\r\n      {transmittingData ? <TransmittingSpin /> : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default SubmitResultsButton;\r\n\r\nconst StyledButton = styled.button`\r\n  grid-area: b;\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\nconst DisabledButton = styled.button`\r\n  border-color: lightgray;\r\n  color: white;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: 200px;\r\n  height: 50px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: lightgray;\r\n`;\r\n\r\nconst TransmittingSpin = styled.div`\r\n  grid-area: c;\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  margin-top: 0.7em;\r\n\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #337ab7;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SpacerDiv = styled.div`\r\n  height: 300px;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport calculatePostsortResults from \"./calculatePostsortResults\";\r\nimport SubmitFallback from \"./SubmitFallback\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport SaveLocalDataToLocalStorageButton from \"./SaveLocalDataToLocalStorageButton\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport LocalSubmitSuccessModal from \"./LocalSubmitSuccessModal\";\r\nimport SubmitButtonGS from \"./SubmitButtonGS\";\r\nimport SubmitButtonEmail from \"./SubmitButtonEmail\";\r\nimport convertObjectToResults from \"../sort/convertObjectToResults\";\r\nimport getCurrentDateTime from \"../../utilities/getCurrentDateTime\";\r\nimport SubmitButtonNetlify from \"./SubmitButtonNetlify\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getMapObj = (state) => state.mapObj;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\r\nconst getDisplayGoodbyeMessage = (state) => state.displayGoodbyeMessage;\r\nconst getParticipantName = (state) => state.localParticipantName;\r\nconst getLocalUsercode = (state) => state.localUsercode;\r\n\r\nlet transmissionResults = {};\r\n\r\nconst SubmitPage = () => {\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const mapObj = useSettingsStore(getMapObj);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const displaySubmitFallback = useStore(getDisplaySubmitFallback);\r\n  const displayGoodbyeMessage = useStore(getDisplayGoodbyeMessage);\r\n  const localParticipantName = useStore(getParticipantName);\r\n  const localUsercode = useStore(getLocalUsercode);\r\n  const urlUsercode = localStorage.getItem(\"urlUsercode\") || \"\";\r\n\r\n  // PERSISTENT STATE\r\n  const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(\"submit\");\r\n  }, [setCurrentPage]);\r\n\r\n  // Language\r\n  const transferTextAbove =\r\n    ReactHtmlParser(decodeHTML(langObj.transferTextAbove)) || \"\";\r\n  const transferTextBelow =\r\n    ReactHtmlParser(decodeHTML(langObj.transferTextBelow)) || \"\";\r\n  const goodbyeMessage =\r\n    ReactHtmlParser(decodeHTML(langObj.goodbyeMessage)) || \"\";\r\n  const linkedProjectFallbackMessage =\r\n    ReactHtmlParser(decodeHTML(langObj.linkedProjectFallbackMessage)) || \"\";\r\n  const linkedProjectBtnMessage =\r\n    decodeHTML(langObj.linkedProjectBtnMessage) || \"\";\r\n  const pageHeader = ReactHtmlParser(decodeHTML(langObj.transferHead)) || \"\";\r\n\r\n  // PERSISTENT STATE\r\n  const resultsPresort =\r\n    JSON.parse(localStorage.getItem(\"resultsPresort\")) || {};\r\n  const resultsSortObj = JSON.parse(localStorage.getItem(\"sortColumns\")) || {};\r\n\r\n  // config options\r\n  const headerBarColor = configObj.headerBarColor;\r\n\r\n  useEffect(() => {\r\n    // format results for transmission\r\n    try {\r\n      // finish setup and format results object\r\n      transmissionResults[\"projectName\"] = configObj.studyTitle;\r\n      transmissionResults[\"partId\"] = localStorage.getItem(\"partId\") || \"\";\r\n      transmissionResults[\"randomId\"] = uuid().substring(0, 12);\r\n      transmissionResults[\"urlUsercode\"] =\r\n        localStorage.getItem(\"urlUsercode\") || \"\";\r\n      const dateString = getCurrentDateTime();\r\n\r\n      transmissionResults[\"dateTime\"] = dateString;\r\n      transmissionResults[\"timeLanding\"] =\r\n        localStorage.getItem(\"timeOnlandingPage\") || \"00:00:00\";\r\n      transmissionResults[\"timePresort\"] =\r\n        localStorage.getItem(\"timeOnpresortPage\") || \"00:00:00\";\r\n      transmissionResults[\"timeSort\"] =\r\n        localStorage.getItem(\"timeOnsortPage\") || \"00:00:00\";\r\n\r\n      if (configObj.setupTarget === \"local\") {\r\n        transmissionResults[\"partId\"] = localParticipantName;\r\n        transmissionResults[\"usercode\"] = localUsercode;\r\n      }\r\n\r\n      if (configObj.showPostsort === true) {\r\n        transmissionResults[\"timePostsort\"] =\r\n          localStorage.getItem(\"timeOnpostsortPage\") || \"00:00:00\";\r\n      }\r\n\r\n      if (configObj.showSurvey === true) {\r\n        transmissionResults[\"timeSurvey\"] =\r\n          localStorage.getItem(\"timeOnsurveyPage\") || \"00:00:00\";\r\n      }\r\n\r\n      let numPos = resultsPresort?.npos;\r\n      if (isNaN(numPos)) {\r\n        numPos = 0;\r\n      }\r\n      let numNeu = resultsPresort?.nneu;\r\n      if (isNaN(numNeu)) {\r\n        numNeu = 0;\r\n      }\r\n      let numNeg = resultsPresort?.nneg;\r\n      if (isNaN(numNeg)) {\r\n        numNeg = 0;\r\n      }\r\n\r\n      transmissionResults[\"npos\"] = numPos;\r\n      transmissionResults[\"posStateNums\"] = resultsPresort.posStateNums || [];\r\n      transmissionResults[\"nneu\"] = numNeu;\r\n      transmissionResults[\"neuStateNums\"] = resultsPresort.neuStateNums || [];\r\n      transmissionResults[\"nneg\"] = numNeg;\r\n      transmissionResults[\"negStateNums\"] = resultsPresort.negStateNums || [];\r\n\r\n      // if project included POSTSORT, read in complete sorted results\r\n      if (configObj.showPostsort) {\r\n        const resultsPostsort =\r\n          JSON.parse(localStorage.getItem(\"resultsPostsort\")) || {};\r\n        const newPostsortObject = calculatePostsortResults(\r\n          resultsPostsort,\r\n          mapObj,\r\n          configObj\r\n        );\r\n        const keys = Object.keys(newPostsortObject);\r\n        for (let i = 0; i < keys.length; i++) {\r\n          // skip unnecessary entries\r\n          let skipText = keys[i].substring(0, 9);\r\n          if (skipText === \"textArea-\") {\r\n            continue;\r\n          }\r\n          transmissionResults[keys[i]] = newPostsortObject[keys[i]];\r\n        }\r\n      }\r\n\r\n      // ** SURVEY, read in results\r\n      if (configObj.showSurvey) {\r\n        const keys2 = Object.keys(resultsSurvey);\r\n        for (let ii = 0; ii < keys2.length; ii++) {\r\n          transmissionResults[keys2[ii]] = resultsSurvey[keys2[ii]];\r\n        }\r\n      }\r\n\r\n      // *** SORT RESULTS\r\n      const resultsSort = convertObjectToResults(\r\n        resultsSortObj,\r\n        resultsPresort,\r\n        configObj.traceSorts\r\n      );\r\n      if (configObj.traceSorts === true || configObj.traceSorts === \"true\") {\r\n        transmissionResults[\"presortTrace\"] = resultsSort.presortTraceText;\r\n      }\r\n      transmissionResults[\"sort\"] = resultsSort.resultsText;\r\n\r\n      // remove null values to prevent errors\r\n      for (const property in transmissionResults) {\r\n        if (\r\n          transmissionResults[property] === null ||\r\n          transmissionResults[property] === undefined\r\n        ) {\r\n          transmissionResults[property] = \"no data\";\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }); // *** end useEffect\r\n\r\n  // early return if data submit success event\r\n  if (displayGoodbyeMessage === true) {\r\n    if (configObj.linkToSecondProject === true) {\r\n      return (\r\n        <GoodbyeDiv>\r\n          {linkedProjectFallbackMessage}\r\n          <a\r\n            id=\"secondProjectLink\"\r\n            href={`${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`}\r\n            style={{ targetNew: \"tab\", textDecoration: \"none\" }}\r\n          >\r\n            <StyledButton>{linkedProjectBtnMessage}</StyledButton>\r\n          </a>\r\n        </GoodbyeDiv>\r\n      );\r\n    } else {\r\n      // *** goodbye message for a normal firebase project ***\r\n      return (\r\n        <React.Fragment>\r\n          <GoodbyeDiv>{goodbyeMessage}</GoodbyeDiv>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (configObj.setupTarget === \"local\") {\r\n    return (\r\n      <React.Fragment>\r\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\r\n        <LocalSubmitSuccessModal />\r\n        <ContainerDiv>\r\n          <SaveLocalDataToLocalStorageButton results={transmissionResults} />\r\n        </ContainerDiv>\r\n      </React.Fragment>\r\n    );\r\n  } else if (configObj.setupTarget === \"sheets\") {\r\n    return (\r\n      <React.Fragment>\r\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\r\n        <ContainerDiv>\r\n          <ContentDiv>{transferTextAbove}</ContentDiv>\r\n          <SubmitButtonGS\r\n            results={transmissionResults}\r\n            api={configObj.steinApiUrl}\r\n          />\r\n\r\n          {displaySubmitFallback ? (\r\n            <SubmitFallback results={transmissionResults} />\r\n          ) : (\r\n            <ContentDiv>{transferTextBelow}</ContentDiv>\r\n          )}\r\n        </ContainerDiv>\r\n      </React.Fragment>\r\n    );\r\n  } else if (configObj.setupTarget === \"email\") {\r\n    return (\r\n      <React.Fragment>\r\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\r\n        <ContainerDiv>\r\n          <ContentDiv>{transferTextAbove}</ContentDiv>\r\n          <SubmitButtonEmail results={transmissionResults} />\r\n        </ContainerDiv>\r\n      </React.Fragment>\r\n    );\r\n  } else if (configObj.setupTarget === \"netlify\") {\r\n    return (\r\n      <React.Fragment>\r\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\r\n        <ContainerDiv>\r\n          <ContentDiv>{transferTextAbove}</ContentDiv>\r\n          <SubmitButtonNetlify results={transmissionResults} />\r\n          <ContentDiv>{transferTextBelow}</ContentDiv>\r\n        </ContainerDiv>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    // *** default to FIREBASE ***\r\n    return (\r\n      <React.Fragment>\r\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\r\n        <ContainerDiv>\r\n          <ContentDiv>{transferTextAbove}</ContentDiv>\r\n          <SubmitButton results={transmissionResults} />\r\n\r\n          {displaySubmitFallback ? (\r\n            <SubmitFallback results={transmissionResults} />\r\n          ) : (\r\n            <ContentDiv>{transferTextBelow}</ContentDiv>\r\n          )}\r\n        </ContainerDiv>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SubmitPage;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: calc(100vw-4px);\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 5px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n`;\r\n\r\nconst ContainerDiv = styled.div`\r\n  display: flex;\r\n  min-height: 600px;\r\n  width: calc(100vw-4px);\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1.2em;\r\n  width: 85vw;\r\n  font-size: 1.35em;\r\n  padding: 25px;\r\n  align-self: center;\r\n`;\r\n\r\nconst GoodbyeDiv = styled.div`\r\n  display: flex;\r\n  width: calc(100vw -20px);\r\n  height: calc(100vh - 50px);\r\n  font-size: 22px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  padding: 0.25em 1em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  height: 75px;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\n/*\r\n--- Example results object ---\r\n\r\n{\r\n  \"projectName\": \"my Q study\",\r\n  \"partId\": \"anonymous\",\r\n  \"randomId\": \"367eee86-f28\",\r\n  \"usercode\": \"no usercode set\",\r\n  \"dateTime\": \"no data\",\r\n  \"timeLanding\": \"no data\",\r\n  \"timePresort\": \"no data\",\r\n  \"timeSort\": \"no data\",\r\n  \"timePostsort\": \"no data\",\r\n  \"timeSurvey\": \"no data\",\r\n  \"npos\": 0,\r\n  \"nneu\": 0,\r\n  \"nneg\": 0,\r\n  \"column4_1\": \"no response\",\r\n  \"column4_2\": \"no response\",\r\n  \"columnN4_1\": \"no response\",\r\n  \"columnN4_2\": \"no response\",\r\n  \"sort\": \"no data\"\r\n}\r\nSubmitButton.jsx:60 \r\n*/\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\nconst SurveyTextElement = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(name, value) {\r\n      await null;\r\n      return localStorage.setItem(name, value);\r\n    },\r\n  };\r\n\r\n  // PROPS\r\n  let questionId = `itemNum${props.opts.itemNum}`;\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const placeholder = ReactHtmlParser(decodeHTML(props.opts.placeholder)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  const [userText, setUserText] = useLocalStorage(questionId, \"\");\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // event handler\r\n  const handleOnChange = (e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    let value = e.target.value;\r\n    let valueLen = value.length;\r\n    // restrict to numbers (from config.xml)\r\n    if (props.opts.restricted === \"true\" || props.opts.restricted === true) {\r\n      value = value.replace(/\\D/g, \"\");\r\n    }\r\n    // limit length (from config.xml)\r\n    if (props.opts.limited === \"true\" || props.opts.limited === true) {\r\n      if (value.length > +props.opts.limitLength) {\r\n        value = value.substring(0, +props.opts.limitLength);\r\n      }\r\n    }\r\n    setUserText(value);\r\n    // record if answered or not\r\n    if (valueLen > 0) {\r\n      let sanitizedText = sanitizeString(value);\r\n      resultsSurvey[`itemNum${props.opts.itemNum}`] = sanitizedText;\r\n    } else {\r\n      // for when participant deletes their answer after entering it\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    asyncLocalStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // End event handler\r\n\r\n  useEffect(() => {\r\n    let userTextLen = false;\r\n    if (userText.length > 0 && userText !== \"\") {\r\n      userTextLen = true;\r\n    }\r\n    if (\r\n      checkRequiredQuestionsComplete === true &&\r\n      userTextLen < 1 &&\r\n      props.opts.required === true\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, userText, props]);\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <TextInput\r\n          type=\"text\"\r\n          value={userText}\r\n          placeholder={placeholder}\r\n          onChange={handleOnChange}\r\n        />\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <TextInput\r\n          type=\"text\"\r\n          value={userText}\r\n          placeholder={placeholder}\r\n          onChange={handleOnChange}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyTextElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n  min-height: 50px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  background-color: lightgray;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  height: 50px;\r\n  font-size: 18px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport sanitizeString from \"../../utilities/sanitizeString.js\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage.js\";\r\n\r\nconst SurveyTextAreaElement = (props) => {\r\n  // HELPER FUNCTION\r\n  const asyncLocalStorage = {\r\n    async setItem(key, value) {\r\n      await null;\r\n      return localStorage.setItem(key, value);\r\n    },\r\n  };\r\n\r\n  // FROM PROPS\r\n  const id = `itemNum${props.opts.itemNum}`;\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  const placeholder = ReactHtmlParser(decodeHTML(props.opts.placeholder)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  const [userText, setUserText] = useLocalStorage(id, \"\");\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // ON CHANGE\r\n  const handleOnChange = (e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    let value = e.target.value;\r\n    setUserText(value);\r\n    // record if answered or not\r\n    if (value.length > 0) {\r\n      let sanitizedText = sanitizeString(value);\r\n      resultsSurvey[`itemNum${props.opts.itemNum}`] = sanitizedText;\r\n    } else {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    asyncLocalStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  };\r\n\r\n  // required question answer check\r\n  let userTextLen = false;\r\n  if (userText.length > 0 && userText !== \"\") {\r\n    userTextLen = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      userTextLen < 1\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [\r\n    checkRequiredQuestionsComplete,\r\n    userText,\r\n    userTextLen,\r\n    props.opts.required,\r\n  ]);\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText>{noteText}</NoteText>\r\n        <TextAreaInput\r\n          value={userText}\r\n          placeholder={placeholder}\r\n          onChange={handleOnChange}\r\n        />\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <TextAreaInput\r\n          value={userText}\r\n          placeholder={placeholder}\r\n          onChange={handleOnChange}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyTextAreaElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 200px;\r\n  background-color: whitesmoke;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst TextAreaInput = styled.textarea`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  height: 150px;\r\n  font-size: 18px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n  padding: 5px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\nconst SurveyRadioElement = (props) => {\r\n  // HELPER FUNCTION\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    array = array.map((x) => x.trim());\r\n    return array;\r\n  };\r\n\r\n  // PROPS\r\n  let questionId = props.opts.id;\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  const optsArray = getOptionsArray(props.opts.options);\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  let [selected, setSelected] = useLocalStorage(questionId, \"\");\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // template\r\n  const RadioInput = ({ label, value, checked, setter }) => {\r\n    return (\r\n      <label>\r\n        <InputStyleDiv>\r\n          <input\r\n            type=\"radio\"\r\n            checked={checked === value}\r\n            onChange={() => setter(value)}\r\n            value={value}\r\n          />\r\n          <LabelDiv>\r\n            <div>{label}</div>\r\n          </LabelDiv>\r\n        </InputStyleDiv>\r\n      </label>\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = +e.target.value + 1;\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handle change\r\n\r\n  let setYellow = false;\r\n  if (selected.length === 0) {\r\n    setYellow = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if is a required question, check if all parts answered\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  const RadioItems = () => {\r\n    const radioList = optsArray.map((item, index) => (\r\n      <div key={uuid()}>\r\n        <RadioInput\r\n          value={index}\r\n          checked={selected}\r\n          label={item}\r\n          setter={setSelected}\r\n        />\r\n      </div>\r\n    ));\r\n    return <div>{radioList}</div>;\r\n  };\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText>\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <RadioContainer onChange={(e) => handleChange(e)}>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <RadioContainer onChange={(e) => handleChange(e)}>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyRadioElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 200px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 0px 20px 20px 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  min-height: 100px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelDiv = styled.div`\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst InputStyleDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\nimport flatten from \"lodash/flatten\";\r\n\r\nconst SurveyDropdownElement = (props) => {\r\n  // HELPER FUNCTION\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    const objArray = array.map((x) => {\r\n      x.replace(/\\s/g, \"\");\r\n      const tempObj = {};\r\n      tempObj.label = ReactHtmlParser(decodeHTML(x));\r\n      tempObj.value = x;\r\n      return tempObj;\r\n    });\r\n    return objArray;\r\n  };\r\n\r\n  // PROPS\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  let questionId = props.opts.id;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  let originalOptions = props.opts.options.split(\";;;\") || [];\r\n  originalOptions = originalOptions.map((x) =>\r\n    ReactHtmlParser(decodeHTML(x.trim()))\r\n  );\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  let [selected, setSelected] = useLocalStorage(questionId, []);\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // HANDLE ON CHANGE\r\n  const handleOnChange = (e) => {\r\n    const resultsSurvey =\r\n      JSON.parse(localStorage.getItem(\"resultsSurvey\")) || {};\r\n    setSelected(e);\r\n\r\n    console.log(originalOptions);\r\n    let newArray = flatten(originalOptions);\r\n    console.log(newArray);\r\n    console.log(e);\r\n\r\n    if (e.length !== 0) {\r\n      let selected2 = \"\";\r\n      for (let i = 0; i < e.length; i++) {\r\n        let label = e[i].value;\r\n        let id = newArray.indexOf(label);\r\n        if (i === 0) {\r\n          selected2 += id + 1;\r\n        } else {\r\n          selected2 += \",\" + (id + 1);\r\n        }\r\n      }\r\n      resultsSurvey[`itemNum${props.opts.itemNum}`] = selected2;\r\n    } else {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  };\r\n\r\n  let selectedLen = false;\r\n  if (selected.length > 0) {\r\n    selectedLen = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      selectedLen === false\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, selectedLen, props.opts.required]);\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <MultiSelect\r\n          className={\"multiselect\"}\r\n          options={getOptionsArray(props.opts.options)}\r\n          labelledBy=\"Select\"\r\n          onChange={handleOnChange}\r\n          value={selected}\r\n        />\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <MultiSelect\r\n          className={\"multiselect\"}\r\n          options={getOptionsArray(props.opts.options)}\r\n          labelledBy=\"Select\"\r\n          onChange={handleOnChange}\r\n          value={selected}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyDropdownElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 125px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n\r\n  .multiselect {\r\n    font-size: 16px;\r\n    line-height: 1.1em;\r\n  }\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\nimport flatten from \"lodash/flatten\";\r\nimport countBy from \"lodash/countBy\";\r\n\r\nconst SurveyCheckboxElement = (props) => {\r\n  // HELPER FUNCTIONS\r\n  let localStore = {};\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    array.map((x) => (localStore[x] = false));\r\n    return array;\r\n  };\r\n\r\n  // PROPS\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const optsArray = getOptionsArray(props.opts.options);\r\n  const nameValue = `question${props.opts.itemNum}`;\r\n  let questionId = props.opts.id;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  let [checkedState, setCheckedState] = useLocalStorage(\r\n    questionId,\r\n    new Array(optsArray.length).fill(false)\r\n  );\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // HANDLE CHANGE\r\n  const handleChange = (position) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    position = parseInt(position, 10);\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n    setCheckedState(updatedCheckedState);\r\n    // prep the selected answers for storage\r\n    let selected = updatedCheckedState.reduce(\r\n      (text = \"\", currentState, index) => {\r\n        if (currentState === true) {\r\n          return text + (index + 1).toString() + \",\";\r\n        }\r\n        return text;\r\n      },\r\n      \"\"\r\n    );\r\n    if (selected.charAt(selected.length - 1) === \",\") {\r\n      selected = selected.substr(0, selected.length - 1);\r\n    }\r\n    // store the selected answers in the results object\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = selected;\r\n\r\n    if (selected === \"\") {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handleChange\r\n\r\n  // ****** CHECK IF ALL PARTS ANSWERED on render *******\r\n  let setYellow = false;\r\n  let flattenedCheckedState = flatten([...checkedState]);\r\n  let count = countBy(flattenedCheckedState);\r\n  let objTestValue = count[true] || 0;\r\n  if (objTestValue === 0) {\r\n    setYellow = true;\r\n  }\r\n\r\n  // determine if highlight needed\r\n  useEffect(() => {\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <RadioContainer>\r\n          {optsArray.map((item, index) => {\r\n            return (\r\n              <div key={uuid()}>\r\n                <input\r\n                  id={`${item}-${index}`}\r\n                  type=\"checkbox\"\r\n                  value={item}\r\n                  name={nameValue}\r\n                  checked={checkedState[index]}\r\n                  onChange={() => handleChange(index)}\r\n                />\r\n                <label htmlFor={`${item}-${index}`}>{item}</label>\r\n              </div>\r\n            );\r\n          })}\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <RadioContainer>\r\n          {optsArray.map((item, index) => {\r\n            return (\r\n              <div key={uuid()}>\r\n                <input\r\n                  id={`${item}-${index}`}\r\n                  type=\"checkbox\"\r\n                  value={item}\r\n                  name={nameValue}\r\n                  checked={checkedState[index]}\r\n                  onChange={() => handleChange(index)}\r\n                />\r\n                <label htmlFor={`${item}-${index}`}>{item}</label>\r\n              </div>\r\n            );\r\n          })}\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyCheckboxElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 150px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  min-height: 120px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\nimport flatten from \"lodash/flatten\";\r\nimport countBy from \"lodash/countBy\";\r\n\r\nconst SurveyRatings2Element = (props) => {\r\n  // HELPER FUNCTIONS\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    if (array.length === 0) {\r\n      array = [\"\", \"\"];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  // PROPS\r\n  const optsArray = getOptionsArray(props.opts.options);\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  // gives the number of questions\r\n  const rows = optsArray.length;\r\n  const questionId = `itemNum${props.opts.itemNum}`;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  let [checkedState, setCheckedState] = useLocalStorage(\r\n    questionId,\r\n    Array.from({ length: rows }, () => Array.from({ length: 2 }, () => false))\r\n  );\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  const scaleArray = getOptionsArray(props.opts.scale);\r\n\r\n  // ****** ON CHANGE  *******\r\n  const handleChange = (selectedRow, column, e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    // update local state with radio selected\r\n    const newArray = [];\r\n    const newCheckedState = checkedState.map(function (row, index) {\r\n      if (selectedRow === index) {\r\n        row.map(function (item, index) {\r\n          if (column === index) {\r\n            newArray.push(true);\r\n            return null;\r\n          } else {\r\n            newArray.push(false);\r\n            return null;\r\n          }\r\n        });\r\n        return newArray;\r\n      } else {\r\n        return row;\r\n      }\r\n    });\r\n    setCheckedState(newCheckedState);\r\n    // record if answered or not\r\n    let arrayLen2 = checkedState.length;\r\n    let flattenedCheckedState2 = flatten([...newCheckedState]);\r\n    let count2 = countBy(flattenedCheckedState2);\r\n    let objTestValue2 = count2[true] || 0;\r\n\r\n    let textString = \"\";\r\n    newCheckedState.forEach((item, index) => {\r\n      // let name = `itemNum${props.opts.itemNum}-${index + 1}`;\r\n      let value = item[0] ? \"1\" : \"2\";\r\n      if (index === 0) {\r\n        textString += value;\r\n      } else {\r\n        textString += \",\" + value;\r\n      }\r\n    });\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = textString;\r\n\r\n    if (objTestValue2 !== arrayLen2) {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handleChange\r\n\r\n  // ****** CHECK IF ALL PARTS ANSWERED on render *******\r\n  let setYellow = false;\r\n  let arrayLen = checkedState.length;\r\n  let flattenedCheckedState = flatten([...checkedState]);\r\n  let count = countBy(flattenedCheckedState);\r\n  let objTestValue = count[true] || 0;\r\n  if (objTestValue < arrayLen) {\r\n    setYellow = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if is a required question, check if all parts answered\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  const RadioItems = () => {\r\n    const radioList = optsArray.map((item, index) => {\r\n      const itemText = ReactHtmlParser(decodeHTML(item)) || \"\";\r\n      return (\r\n        <ItemContainer indexVal={index} key={uuid()}>\r\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q-${index}`}\r\n            type=\"radio\"\r\n            value={1}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 0, e)}\r\n            checked={checkedState[index][0]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q2-${index}`}\r\n            type=\"radio\"\r\n            value={2}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 1, e)}\r\n            checked={checkedState[index][1]}\r\n          />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n    return <div>{radioList}</div>;\r\n  };\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <ScaleDiv>\r\n              <div>{ReactHtmlParser(decodeHTML(scaleArray[0]))}</div>\r\n            </ScaleDiv>\r\n            <ScaleDiv>\r\n              <div>{ReactHtmlParser(decodeHTML(scaleArray[1]))}</div>\r\n            </ScaleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <ScaleDiv>\r\n              <div>{ReactHtmlParser(decodeHTML(scaleArray[0]))}</div>\r\n            </ScaleDiv>\r\n            <ScaleDiv>\r\n              <div>{ReactHtmlParser(decodeHTML(scaleArray[1]))}</div>\r\n            </ScaleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyRatings2Element;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 200px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  height: auto;\r\n  min-height: 50px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 100px 100px 1fr;\r\n  margin-bottom: 17px;\r\n  padding-left: 5px;\r\n  padding-bottom: 8px;\r\n  height: 40px;\r\n  align-items: end;\r\n  justify-items: left;\r\n  // align-items: left;\r\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\r\n  &:hover {\r\n    background-color: rgba(131, 202, 254, 0.4);\r\n  }\r\n`;\r\n\r\nconst RatingTitle = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 100px 100px 1fr;\r\n  margin-bottom: 7px;\r\n`;\r\n\r\nconst ScaleDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst RadioInput = styled.input`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-self: center;\r\n  border: 0px;\r\n  width: 28px;\r\n  height: 1.4em;\r\n  justify-items: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst OptionsText = styled.span`\r\n  margin-bottom: 2px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\nimport flatten from \"lodash/flatten\";\r\nimport countBy from \"lodash/countBy\";\r\n\r\nconst SurveyRatings5Element = (props) => {\r\n  // HELPER FUNCTIONS\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    return array;\r\n  };\r\n\r\n  // PROPS\r\n  const optsArray = getOptionsArray(props.opts.options);\r\n  const rows = optsArray.length;\r\n  const questionId = `itemNum${props.opts.itemNum}`;\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n\r\n  // PERSISTENT STATE\r\n  let [checked5State, setChecked5State] = useLocalStorage(\r\n    questionId,\r\n    Array.from({ length: rows }, () => Array.from({ length: 5 }, () => false))\r\n  );\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // HANDLE CHANGE\r\n  const handleChange = (selectedRow, column, e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    // update local state with radio selected\r\n    const newArray = [];\r\n    const newChecked5State = checked5State.map(function (row, index) {\r\n      if (selectedRow === index) {\r\n        row.map(function (item, index) {\r\n          if (column === index) {\r\n            newArray.push(true);\r\n            return null;\r\n          } else {\r\n            newArray.push(false);\r\n            return null;\r\n          }\r\n        });\r\n        return newArray;\r\n      } else {\r\n        return row;\r\n      }\r\n    });\r\n    setChecked5State(newChecked5State);\r\n    // record if answered or not\r\n    let arrayLen2 = checked5State.length;\r\n    let flattenedCheckedState2 = flatten([...newChecked5State]);\r\n    let count2 = countBy(flattenedCheckedState2);\r\n    let objTestValue2 = count2[true] || 0;\r\n\r\n    let textString = \"\";\r\n    newChecked5State.forEach((item, index) => {\r\n      let value = newChecked5State[index].indexOf(true) + 1;\r\n      if (index === 0) {\r\n        textString += value;\r\n      } else {\r\n        textString += \",\" + value;\r\n      }\r\n    });\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = textString;\r\n\r\n    if (objTestValue2 !== arrayLen2) {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handleChange\r\n\r\n  // ****** CHECK IF ALL PARTS ANSWERED *******\r\n  let setYellow = false;\r\n  let arrayLen = checked5State.length;\r\n  let flattenedCheckedState = flatten([...checked5State]);\r\n  let count = countBy(flattenedCheckedState);\r\n  let objTestValue = count[true] || 0;\r\n  if (objTestValue < arrayLen) {\r\n    setYellow = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if is a required question, check if all parts answered\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  const RadioItems = () => {\r\n    const radioList = optsArray.map((item, index) => {\r\n      const itemText = ReactHtmlParser(decodeHTML(item));\r\n      return (\r\n        <ItemContainer indexVal={index} key={uuid()}>\r\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q-${index}`}\r\n            type=\"radio\"\r\n            value={1}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 0, e)}\r\n            checked={checked5State[index][0]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q2-${index}`}\r\n            type=\"radio\"\r\n            value={2}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 1, e)}\r\n            checked={checked5State[index][1]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q3-${index}`}\r\n            type=\"radio\"\r\n            value={3}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 2, e)}\r\n            checked={checked5State[index][2]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q4-${index}`}\r\n            type=\"radio\"\r\n            value={4}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 3, e)}\r\n            checked={checked5State[index][3]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q5-${index}`}\r\n            type=\"radio\"\r\n            value={5}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 4, e)}\r\n            checked={checked5State[index][4]}\r\n          />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n    return <div>{radioList}</div>;\r\n  };\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <CircleDiv>1</CircleDiv>\r\n            <CircleDiv>2</CircleDiv>\r\n            <CircleDiv>3</CircleDiv>\r\n            <CircleDiv>4</CircleDiv>\r\n            <CircleDiv>5</CircleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <CircleDiv>1</CircleDiv>\r\n            <CircleDiv>2</CircleDiv>\r\n            <CircleDiv>3</CircleDiv>\r\n            <CircleDiv>4</CircleDiv>\r\n            <CircleDiv>5</CircleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyRatings5Element;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 200px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  height: auto;\r\n  min-height: 50px;\r\n  font-size: 18px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 50px 50px 50px 50px 50px 1fr;\r\n  margin-bottom: 17px;\r\n  padding-bottom: 8px;\r\n  height: 40px;\r\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\r\n  font-size: 16px;\r\n  align-items: end;\r\n  &:hover {\r\n    background-color: rgba(131, 202, 254, 0.4);\r\n  }\r\n`;\r\n\r\nconst RatingTitle = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 50px 50px 50px 50px 50px 1fr;\r\n  margin-bottom: 7px;\r\n  align-items: end;\r\n`;\r\n\r\nconst RadioInput = styled.input`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-self: center;\r\n  text-align: center;\r\n  border: 0px;\r\n  width: 25px;\r\n  height: 1.4em;\r\n`;\r\n\r\nconst CircleDiv = styled.div`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst OptionsText = styled.span`\r\n  margin-bottom: 2px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\nimport flatten from \"lodash/flatten\";\r\nimport countBy from \"lodash/countBy\";\r\n\r\nconst SurveyRatings10Element = (props) => {\r\n  // HELPER FUNCTIONS\r\n  // filter to remove empty strings if present\r\n  const getOptionsArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    array = array.filter(function (e) {\r\n      return e;\r\n    });\r\n    return array;\r\n  };\r\n\r\n  // PROPS\r\n  const optsArray = getOptionsArray(props.opts.options);\r\n  const rows = optsArray.length;\r\n  const questionId = `itemNum${props.opts.itemNum}`;\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note)) || \"\";\r\n  let displayNoteText = true;\r\n  if (noteText.length < 1 || noteText === \"\") {\r\n    displayNoteText = false;\r\n  }\r\n\r\n  // PERSISTENT STATE\r\n  const [checkedState, setCheckedState] = useLocalStorage(\r\n    questionId,\r\n    Array.from({ length: rows }, () => Array.from({ length: 10 }, () => false))\r\n  );\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // *** HANDLE CHANGE ***\r\n  const handleChange = (selectedRow, column, e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    const newArray = [];\r\n    const newCheckedState = checkedState.map(function (row, index) {\r\n      if (selectedRow === index) {\r\n        row.map(function (item, index) {\r\n          if (column === index) {\r\n            newArray.push(true);\r\n            return null;\r\n          } else {\r\n            newArray.push(false);\r\n            return null;\r\n          }\r\n        });\r\n        return newArray;\r\n      } else {\r\n        return row;\r\n      }\r\n    });\r\n    setCheckedState(newCheckedState);\r\n    let arrayLen2 = checkedState.length;\r\n    let flattenedCheckedState2 = flatten([...newCheckedState]);\r\n    let count2 = countBy(flattenedCheckedState2);\r\n    let objTestValue2 = count2[true] || 0;\r\n\r\n    let textString = \"\";\r\n    newCheckedState.forEach((item, index) => {\r\n      let value = newCheckedState[index].indexOf(true) + 1;\r\n      if (index === 0) {\r\n        textString += value;\r\n      } else {\r\n        textString += \",\" + value;\r\n      }\r\n    });\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = textString;\r\n\r\n    if (objTestValue2 !== arrayLen2) {\r\n      if (props.opts.required === true || props.opts.required === \"true\") {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no-*?*-response\";\r\n      } else {\r\n        resultsSurvey[`itemNum${props.opts.itemNum}`] = \"no response\";\r\n      }\r\n    }\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handleChange\r\n\r\n  // ****** CHECK IF ALL PARTS ANSWERED *******\r\n  let setYellow = false;\r\n  let arrayLen = checkedState.length;\r\n  let flattenedCheckedState = flatten([...checkedState]);\r\n  let count = countBy(flattenedCheckedState);\r\n  let objTestValue = count[true] || 0;\r\n  if (objTestValue < arrayLen) {\r\n    setYellow = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if is a required question, check if all parts answered\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  const RadioItems = () => {\r\n    const radioList = optsArray.map((item, index) => {\r\n      const itemText = ReactHtmlParser(decodeHTML(item));\r\n      return (\r\n        <ItemContainer indexVal={index} key={uuid()}>\r\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q-${index}`}\r\n            type=\"radio\"\r\n            value={1}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 0, e)}\r\n            checked={checkedState[index][0]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q2-${index}`}\r\n            type=\"radio\"\r\n            value={2}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 1, e)}\r\n            checked={checkedState[index][1]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q3-${index}`}\r\n            type=\"radio\"\r\n            value={3}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 2, e)}\r\n            checked={checkedState[index][2]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q4-${index}`}\r\n            type=\"radio\"\r\n            value={4}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 3, e)}\r\n            checked={checkedState[index][3]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q5-${index}`}\r\n            type=\"radio\"\r\n            value={5}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 4, e)}\r\n            checked={checkedState[index][4]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q6-${index}`}\r\n            type=\"radio\"\r\n            value={6}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 5, e)}\r\n            checked={checkedState[index][5]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q7-${index}`}\r\n            type=\"radio\"\r\n            value={7}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 6, e)}\r\n            checked={checkedState[index][6]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q8-${index}`}\r\n            type=\"radio\"\r\n            value={8}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 7, e)}\r\n            checked={checkedState[index][7]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q9-${index}`}\r\n            type=\"radio\"\r\n            value={9}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 8, e)}\r\n            checked={checkedState[index][8]}\r\n          />\r\n          <RadioInput\r\n            key={uuid()}\r\n            id={`Q10-${index}`}\r\n            type=\"radio\"\r\n            value={10}\r\n            name={`itemNum${props.opts.itemNum}-${index + 1}`}\r\n            onChange={(e) => handleChange(index, 9, e)}\r\n            checked={checkedState[index][9]}\r\n          />\r\n        </ItemContainer>\r\n      );\r\n    });\r\n    return <div>{radioList}</div>;\r\n  };\r\n\r\n  if (displayNoteText) {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <NoteText id=\"noteText\">\r\n          <div>{noteText}</div>\r\n        </NoteText>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <CircleDiv>1</CircleDiv>\r\n            <CircleDiv>2</CircleDiv>\r\n            <CircleDiv>3</CircleDiv>\r\n            <CircleDiv>4</CircleDiv>\r\n            <CircleDiv>5</CircleDiv>\r\n            <CircleDiv>6</CircleDiv>\r\n            <CircleDiv>7</CircleDiv>\r\n            <CircleDiv>8</CircleDiv>\r\n            <CircleDiv>9</CircleDiv>\r\n            <CircleDiv>10</CircleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n        <TitleBar>\r\n          <div>{labelText}</div>\r\n        </TitleBar>\r\n        <RadioContainer>\r\n          <RatingTitle>\r\n            <div />\r\n            <CircleDiv>1</CircleDiv>\r\n            <CircleDiv>2</CircleDiv>\r\n            <CircleDiv>3</CircleDiv>\r\n            <CircleDiv>4</CircleDiv>\r\n            <CircleDiv>5</CircleDiv>\r\n            <CircleDiv>6</CircleDiv>\r\n            <CircleDiv>7</CircleDiv>\r\n            <CircleDiv>8</CircleDiv>\r\n            <CircleDiv>9</CircleDiv>\r\n            <CircleDiv>10</CircleDiv>\r\n          </RatingTitle>\r\n          <RadioItems />\r\n        </RadioContainer>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SurveyRatings10Element;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 200px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  height: auto;\r\n  min-height: 50px;\r\n  font-size: 18px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  input {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 1fr;\r\n  margin-bottom: 17px;\r\n  font-size: 16px;\r\n  align-items: end;\r\n  padding-bottom: 8px;\r\n  height: 40px;\r\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\r\n  border-radius: 3px;\r\n  &:hover {\r\n    background-color: rgba(131, 202, 254, 0.4);\r\n  }\r\n`;\r\n\r\nconst RatingTitle = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: minmax(30%, 1000px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 1fr;\r\n  margin-bottom: 7px;\r\n  align-items: end;\r\n`;\r\n\r\nconst CircleDiv = styled.div`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst RadioInput = styled.input`\r\n  display: flex;\r\n  justify-self: center;\r\n  align-self: center;\r\n  text-align: center;\r\n  border: 0px;\r\n  width: 28px;\r\n  height: 1.4em;\r\n  padding-left: 3px;\r\n`;\r\n\r\nconst OptionsText = styled.span`\r\n  margin-bottom: 2px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst NoteText = styled.div`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  vertical-align: center;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  height: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  background-color: whitesmoke;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useLocalStorage from \"../../utilities/useLocalStorage\";\r\n\r\nconst SurveyLikertElement = (props) => {\r\n  // PROPS\r\n  const checkRequiredQuestionsComplete = props.check;\r\n  // gives the number of questions\r\n  const questionId = `itemNum${props.opts.itemNum}`;\r\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label)) || \"\";\r\n\r\n  // PERSISTENT STATE\r\n  let [selected, setSelected] = useLocalStorage(questionId, \"\");\r\n\r\n  // LOCAL STATE\r\n  const [formatOptions, setFormatOptions] = useState({\r\n    bgColor: \"whitesmoke\",\r\n    border: \"none\",\r\n  });\r\n\r\n  // ****** GET SCALE ARRAY *******\r\n\r\n  const getScaleArray = (options) => {\r\n    let array = options.split(\";;;\");\r\n    return array;\r\n  };\r\n  const scaleArray = getScaleArray(props.opts.scale);\r\n\r\n  // ****** ON CHANGE  *******\r\n  const handleChange = (e) => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = +e.target.value + 1;\r\n    localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }; // end handleChange\r\n\r\n  // ****** CHECK IF ALL PARTS ANSWERED on render *******\r\n  let setYellow = false;\r\n  if (selected.length === 0) {\r\n    setYellow = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if is a required question, check if all parts answered\r\n    if (\r\n      (props.opts.required === true || props.opts.required === \"true\") &&\r\n      checkRequiredQuestionsComplete === true &&\r\n      setYellow\r\n    ) {\r\n      setFormatOptions({\r\n        bgColor: \"rgba(253, 224, 71, .5)\",\r\n        border: \"3px dashed black\",\r\n      });\r\n    } else {\r\n      setFormatOptions({\r\n        bgColor: \"whitesmoke\",\r\n        border: \"none\",\r\n      });\r\n    }\r\n  }, [checkRequiredQuestionsComplete, setYellow, props.opts.required]);\r\n\r\n  const scaleList = scaleArray.map((item) => {\r\n    return (\r\n      <ScaleDiv key={uuid()}>\r\n        <div>{ReactHtmlParser(decodeHTML(item))}</div>\r\n      </ScaleDiv>\r\n    );\r\n  });\r\n\r\n  // template\r\n  const RadioInput = ({ value, checked, setter }) => {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"radio\"\r\n          checked={checked === value}\r\n          onChange={() => setter(value)}\r\n          value={value}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const RadioItems = () => {\r\n    const radioList = scaleArray.map((item, index) => (\r\n      <RadioButtons\r\n        className=\"radioButtons\"\r\n        key={uuid()}\r\n        onChange={(e) => handleChange(e)}\r\n      >\r\n        <RadioInput\r\n          className=\"radioInput\"\r\n          value={index}\r\n          checked={selected}\r\n          setter={setSelected}\r\n        />\r\n      </RadioButtons>\r\n    ));\r\n    return (\r\n      <ButtonContainer className=\"buttonContainer\" cols={scaleArray.length}>\r\n        {radioList}\r\n      </ButtonContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\r\n      <TitleBar>\r\n        <div>{labelText}</div>\r\n      </TitleBar>\r\n      <RadioContainer className=\"radioContainer\">\r\n        <RatingTitle className=\"ratingTitle\" cols={scaleArray.length}>\r\n          {scaleList}\r\n        </RatingTitle>\r\n        <RadioItems />\r\n      </RadioContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SurveyLikertElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 12px 20px 0px 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  min-height: 170px;\r\n  background-color: ${(props) => props.bgColor};\r\n  outline: ${(props) => props.border};\r\n  outline-offset: -3px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 50px;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: lightgray;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst RadioContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  align-items: left;\r\n  padding: 10px 20px 0px 20px;\r\n  vertical-align: center;\r\n  margin-top: 0px;\r\n  height: auto;\r\n  min-height: 50px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  border: 2px solid lightgray;\r\n\r\n  label {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: ${(props) =>\r\n    `repeat(${props.cols}, ${100 / props.cols}%)`};\r\n  margin-bottom: 3px;\r\n  justify-items: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst RatingTitle = styled.div`\r\n  display: inline-grid;\r\n  grid-template-columns: ${(props) =>\r\n    `repeat(${props.cols}, ${100 / props.cols}%)`};\r\n`;\r\n\r\nconst ScaleDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst RadioButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  justify-self: center;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  width: 25px;\r\n  input {\r\n    height: 1.5em;\r\n    width: 20px;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\n\r\nconst SurveyInformationElement = (props) => {\r\n  useEffect(() => {\r\n    const resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    resultsSurvey[`itemNum${props.opts.itemNum}`] = \"info. - na\";\r\n    // localStorage.setItem(\"resultsSurvey\", JSON.stringify(resultsSurvey));\r\n  }, [props.opts.itemNum]);\r\n\r\n  const infoText = ReactHtmlParser(decodeHTML(props.opts.options)) || \"\";\r\n\r\n  return (\r\n    <Container>\r\n      <TitleBar backgroundColor={props.opts.background}>\r\n        <div>{infoText}</div>\r\n      </TitleBar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SurveyInformationElement;\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  max-width: 1300px;\r\n  background-color: whitesmoke;\r\n  min-height: 50px;\r\n`;\r\n\r\nconst TitleBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n  min-height: 50px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  background-color: ${(props) => props.backgroundColor || \"lightgray\"};\r\n  width: 100%;\r\n  border-radius: 3px;\r\n`;\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerModalOpen = (state) => state.triggerSurveyPreventNavModal;\r\nconst getSetTrigSurvPrevNavModal = (state) =>\r\n  state.setTriggerSurveyPreventNavModal;\r\n\r\nconst AnswerAllSurveyQuestionsModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerModalOpen = useStore(getTriggerModalOpen);\r\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\r\n\r\n  const modalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.surveyPreventNavModalHead)) || \"\";\r\n  const modalText =\r\n    ReactHtmlParser(decodeHTML(langObj.surveyPreventNavModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSurveyPreventNavModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerModalOpen}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{modalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{modalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AnswerAllSurveyQuestionsModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React from \"react\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getTriggerSurveyModal = (state) => state.triggerSurveyModal;\r\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\r\n\r\nconst SurveyHelpModal = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const triggerSurveyModal = useStore(getTriggerSurveyModal);\r\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\r\n\r\n  const helpModalHead =\r\n    ReactHtmlParser(decodeHTML(langObj.surveyModalHead)) || \"\";\r\n  const helpModalText =\r\n    ReactHtmlParser(decodeHTML(langObj.surveyModalText)) || \"\";\r\n\r\n  // const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => {\r\n    setTriggerSurveyModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"customModal\"\r\n      open={triggerSurveyModal}\r\n      onClose={onCloseModal}\r\n      center\r\n    >\r\n      <ModalHeader>{helpModalHead}</ModalHeader>\r\n      <hr />\r\n      <ModalContent>{helpModalText}</ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SurveyHelpModal;\r\n\r\nconst ModalHeader = styled.div`\r\n  font-size: 24px;\r\n  line-height: 1.42;\r\n  padding: 10px 0px 10px 0px;\r\n\r\n  hr {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  margin-top: 15px;\r\n  font-weight: normal;\r\n`;\r\n\r\n// react-responsive-modal-overlay\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SurveyTextElement from \"./SurveyTextElement\";\r\nimport SurveyTextAreaElement from \"./SurveyTextAreaElement\";\r\nimport SurveyRadioElement from \"./SurveyRadioElement\";\r\nimport SurveyDropdownElement from \"./SurveyDropdownElement\";\r\nimport SurveyCheckboxElement from \"./SurveyCheckboxElement\";\r\nimport SurveyRating2Element from \"./SurveyRating2Element\";\r\nimport SurveyRating5Element from \"./SurveyRating5Element\";\r\nimport SurveyRating10Element from \"./SurveyRating10Element\";\r\nimport SurveyLikertElement from \"./SurveyLikertElement\";\r\nimport SurveyInformationElement from \"./SurveyInformationElement\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\r\nimport AnswerAllSurveyQuestionsModal from \"./AnswerAllSurveyQuestionsModal\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport SurveyHelpModal from \"./SurveyHelpModal\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PromptUnload from \"../../utilities/PromptUnload\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getSurveyQuestionObjArray = (state) => state.surveyQuestionObjArray;\r\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\r\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\r\nconst getSetCurrentPage = (state) => state.setCurrentPage;\r\nconst getCheckReqQuesComplete = (state) => state.checkRequiredQuestionsComplete;\r\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\r\n\r\nconst SurveyPage = () => {\r\n  // STATE\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const requiredAnswersObj = useSettingsStore(getRequiredAnswersObj);\r\n  const surveyQuestionObjArray = useSettingsStore(getSurveyQuestionObjArray);\r\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\r\n  const setCurrentPage = useStore(getSetCurrentPage);\r\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQuesComplete);\r\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\r\n\r\n  const headerBarColor = configObj.headerBarColor;\r\n  const surveyQuestionObjects = surveyQuestionObjArray;\r\n\r\n  // setup language\r\n  const surveyHeader = ReactHtmlParser(decodeHTML(langObj.surveyHeader)) || \"\";\r\n\r\n  // set next button display\r\n  setDisplayNextButton(true);\r\n\r\n  useEffect(() => {\r\n    // reset required questions if page return\r\n    let keys = Object.keys(requiredAnswersObj);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      requiredAnswersObj[keys[i]] = \"no response\";\r\n    }\r\n    setRequiredAnswersObj(requiredAnswersObj);\r\n  }, [setRequiredAnswersObj, requiredAnswersObj]);\r\n\r\n  useEffect(() => {\r\n    let startTime = Date.now();\r\n    setCurrentPage(\"survey\");\r\n    return () => {\r\n      calculateTimeOnPage(startTime, \"surveyPage\", \"surveyPage\");\r\n    };\r\n  }, [setCurrentPage]);\r\n\r\n  const SurveyQuestions = () => {\r\n    if (!surveyQuestionObjects) {\r\n      return <NoQuestionsDiv>No questions added.</NoQuestionsDiv>;\r\n    } else {\r\n      const QuestionList = surveyQuestionObjects.map((object, index) => {\r\n        if (object.type === \"text\") {\r\n          return (\r\n            <SurveyTextElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"textarea\") {\r\n          return (\r\n            <SurveyTextAreaElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"radio\") {\r\n          return (\r\n            <SurveyRadioElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"select\") {\r\n          return (\r\n            <SurveyDropdownElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"checkbox\") {\r\n          return (\r\n            <SurveyCheckboxElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"rating2\") {\r\n          return (\r\n            <SurveyRating2Element\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"likert\") {\r\n          return (\r\n            <SurveyLikertElement\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"rating5\") {\r\n          return (\r\n            <SurveyRating5Element\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"rating10\") {\r\n          return (\r\n            <SurveyRating10Element\r\n              key={uuid()}\r\n              check={checkRequiredQuestionsComplete}\r\n              opts={object}\r\n            />\r\n          );\r\n        }\r\n        if (object.type === \"information\") {\r\n          return <SurveyInformationElement key={uuid()} opts={object} />;\r\n        }\r\n        return null;\r\n      });\r\n      return QuestionList;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PromptUnload />\r\n      <SurveyHelpModal />\r\n      <AnswerAllSurveyQuestionsModal />\r\n      <SortTitleBar background={headerBarColor}>{surveyHeader}</SortTitleBar>\r\n      <Container>\r\n        <SurveyQuestions />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SurveyPage;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-bottom: 150px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst SortTitleBar = styled.div`\r\n  width: 100vw;\r\n  padding-left: 1.5vw;\r\n  padding-right: 1.5vw;\r\n  padding-top: 5px;\r\n  min-height: 50px;\r\n  background-color: ${(props) => props.background};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst NoQuestionsDiv = styled.div`\r\n  margin-top: 50px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nclass NonExistentPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <h1>404</h1> <p>Page doesn't exist</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NonExistentPage;\r\n","const processConfigXMLData = (dataObject) => {\r\n  const data = dataObject.elements[0].elements;\r\n  const configObj = {};\r\n  let surveyQuestionArray;\r\n\r\n  let surveyData = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    let value;\r\n\r\n    let tempObj = data[i];\r\n\r\n    let key = data[i].attributes.id;\r\n\r\n    // separate out survey questions\r\n    if (key === \"survey\") {\r\n      surveyData.push([...data[i].elements]);\r\n    }\r\n\r\n    // if it has a value in the XML file ==> no empty strings\r\n    if (\"elements\" in tempObj) {\r\n      value = data[i].elements[0].text;\r\n\r\n      // for all non-survey keys\r\n      if (key !== \"survey\") {\r\n        // deal with the array values\r\n        if (\r\n          key === \"columnHeadersColorsArray\" ||\r\n          key === \"columnColorsArray\" ||\r\n          key === \"qSortHeaderNumbers\" ||\r\n          key === \"qSortHeaders\" ||\r\n          key === \"qSortPattern\"\r\n        ) {\r\n        } else {\r\n          // for all others...\r\n          // convert string values -  boolean or number\r\n          if (value === \"true\") {\r\n            value = true;\r\n          } else if (value === \"false\") {\r\n            value = false;\r\n          } else if (!isNaN(value)) {\r\n            value = +value;\r\n          }\r\n          configObj[key] = value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // setup survey object\r\n  const requiredAnswersObj = {};\r\n  if (surveyData.length > 0) {\r\n    surveyQuestionArray = [];\r\n    for (let j = 0; j < surveyData.length; j++) {\r\n      let tempObj = {};\r\n      // let tempObj2 = {};\r\n      let questionType = surveyData[j][0].attributes.type;\r\n\r\n      // INFORMATION question\r\n      if (questionType === \"information\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"information\";\r\n        tempObj.background = surveyData[j][1].attributes.bg;\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n        requiredAnswersObj[`itemNum${j + 1}`] = \"info - n.a.\";\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // TEXT question\r\n      if (questionType === \"text\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"text\";\r\n        tempObj.required = isRequired;\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        try {\r\n          if (surveyData[j][0].attributes.maxlength === undefined) {\r\n            tempObj.limitLength = JSON.parse(\r\n              surveyData[j][0].attributes.limitLength\r\n            );\r\n          } else {\r\n            let oldMaxLength = JSON.parse(\r\n              surveyData[j][0].attributes.maxlength\r\n            );\r\n            tempObj.limitLength = oldMaxLength;\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.limitLength = \"999\";\r\n        }\r\n\r\n        try {\r\n          tempObj.restricted = surveyData[j][0].attributes.restricted;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.restricted = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.limited = surveyData[j][0].attributes.limited;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.limited = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.placeholder = surveyData[j][3].elements[0].text;\r\n        } catch (error) {\r\n          tempObj.placeholder = \"\";\r\n        }\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // TEXTAREA question\r\n      if (questionType === \"textarea\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"textarea\";\r\n\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = false;\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.placeholder = surveyData[j][3].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.placeholder = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // RADIO question\r\n      if (questionType === \"radio\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"radio\";\r\n\r\n        try {\r\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // SELECT question\r\n      if (questionType === \"select\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"select\";\r\n\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // CHECKBOX question\r\n      if (questionType === \"checkbox\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"checkbox\";\r\n        try {\r\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // RATING2 question\r\n      if (questionType === \"rating2\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"rating2\";\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.scale = surveyData[j][0].attributes.scale;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.scale = \"Yes;;;No\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // likert 5 question\r\n      if (questionType === \"likert\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"likert\";\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0]?.text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.scale = surveyData[j][0].attributes.scale;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.scale =\r\n            \"Strongly Disagree;;;Disagree;;;Neutral;;;Agree;;;Strongly Agree\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // RATING5 question\r\n      if (questionType === \"rating5\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"rating5\";\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(\"rating 5 note error\");\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n\r\n      // RATING10 question\r\n      if (questionType === \"rating10\") {\r\n        tempObj.id = `itemNum${j + 1}`;\r\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\r\n        if (isRequired === \"true\" || isRequired === true) {\r\n          isRequired = true;\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no-*?*-response\";\r\n        } else {\r\n          requiredAnswersObj[`itemNum${j + 1}`] = \"no response\";\r\n        }\r\n        tempObj.itemNum = j + 1;\r\n        tempObj.type = \"rating10\";\r\n        try {\r\n          tempObj.required = surveyData[j][0].attributes.required;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.required = \"false\";\r\n        }\r\n\r\n        try {\r\n          tempObj.label = surveyData[j][1].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.label = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.options = surveyData[j][0].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.options = \"\";\r\n        }\r\n\r\n        try {\r\n          tempObj.note = surveyData[j][2].elements[0].text;\r\n        } catch (error) {\r\n          console.log(error);\r\n          tempObj.note = \"\";\r\n        }\r\n\r\n        tempObj.hasBeenAnswered = false;\r\n\r\n        surveyQuestionArray.push(tempObj);\r\n      }\r\n    }\r\n    let resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n    if (!resultsSurvey) {\r\n      localStorage.setItem(\"resultsSurvey\", JSON.stringify(requiredAnswersObj));\r\n      localStorage.setItem(\r\n        \"resultsSurveyArchive\",\r\n        JSON.stringify(requiredAnswersObj)\r\n      );\r\n    }\r\n  }\r\n  let returnObj = {};\r\n  let shuffleCards = configObj?.shuffleCards;\r\n  returnObj.requiredAnswersObj = requiredAnswersObj;\r\n  returnObj.configObj = configObj;\r\n  returnObj.surveyQuestionObjArray = surveyQuestionArray;\r\n  returnObj.shuffleCards = shuffleCards;\r\n  return returnObj;\r\n};\r\n\r\nexport default processConfigXMLData;\r\n","import useStore from \"../globalState/useStore\";\r\n\r\nconst processMapXMLData = (dataObject) => {\r\n  const mapObj = {};\r\n  const data = dataObject.map;\r\n  const vColsObj = {};\r\n  const colInfoArray = [];\r\n\r\n  // COLUMN LOOP -> get card counts per column\r\n  for (let i = 0; i < data.column.length; i++) {\r\n    let keyVal;\r\n    let label = data.column[i]._attributes.id;\r\n    let labelInt = parseInt(label, 10);\r\n    if (labelInt < 0) {\r\n      keyVal = `columnN${Math.abs(labelInt)}`;\r\n      vColsObj[keyVal] = [];\r\n    } else {\r\n      keyVal = `column${labelInt}`;\r\n      vColsObj[keyVal] = [];\r\n    }\r\n    let tempObj = {};\r\n    tempObj.colNum = i + 1;\r\n    tempObj.label = label;\r\n    tempObj.colour = `#${data.column[i]._attributes.colour}`;\r\n    tempObj.numCards = data.column[i]._text;\r\n    colInfoArray.push(tempObj);\r\n  }\r\n\r\n  // ITEM LOOP -> get color arrays and q sort pattern\r\n  for (let j = 0; j < data.item.length; j++) {\r\n    let splitArray = [];\r\n    let value = data.item[j]._text;\r\n    let key = data.item[j]._attributes.id;\r\n    // numerical array ==> convert to integers\r\n    if (key === \"qSortPattern\") {\r\n      splitArray = value.split(\",\").map((x) => +x);\r\n    } else {\r\n      splitArray = value.split(\",\");\r\n    }\r\n    mapObj[key] = splitArray;\r\n  }\r\n\r\n  // create converter object for postsort\r\n  const postsortConvertObj = {};\r\n  const headerNumbers = [...mapObj.qSortHeaders];\r\n  for (let j = 0; j < headerNumbers.length; j++) {\r\n    let key = `column${headerNumbers[j]}`;\r\n    postsortConvertObj[key] = mapObj.qSortHeaderNumbers[j];\r\n  }\r\n  mapObj.postsortConvertObj = postsortConvertObj;\r\n\r\n  useStore.setState({ vColsObj: vColsObj });\r\n  const returnObj = {};\r\n  returnObj.vColsObj = vColsObj;\r\n  returnObj.mapObj = mapObj;\r\n  return returnObj;\r\n};\r\n\r\nexport default processMapXMLData;\r\n","import useStore from \"../globalState/useStore\";\r\n\r\nconst processLanguageXMLData = (dataObject) => {\r\n  try {\r\n    const data = dataObject.language.item;\r\n\r\n    const langObj = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n      langObj[data[i]._attributes.id] = data[i]._text;\r\n      useStore.setState({ [data[i]._attributes.id]: data[i]._text });\r\n    }\r\n\r\n    return langObj;\r\n  } catch (error) {\r\n    console.log(\"there was a language import error\");\r\n  }\r\n};\r\n\r\nexport default processLanguageXMLData;\r\n","import shuffle from \"lodash/shuffle\";\r\n\r\n// prep column setup array\r\nconst processStatementsXMLData = (dataObject, shuffleCards, vColsObj) => {\r\n  const data = dataObject.statements.statement;\r\n  let statementsArray = [];\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let tempObj = {};\r\n    tempObj.id = `s${data[i]._attributes.id}`;\r\n    tempObj.statementNum = data[i]._attributes.id;\r\n    tempObj.divColor = \"isUncertainStatement\";\r\n    tempObj.cardColor = \"yellowSortCard\";\r\n    tempObj.pinkChecked = false;\r\n    tempObj.yellowChecked = true;\r\n    tempObj.greenChecked = false;\r\n    tempObj.sortValue = 222;\r\n    tempObj.backgroundColor = \"#e0e0e0\";\r\n    tempObj.statement = data[i]._text.trim();\r\n    statementsArray.push(tempObj);\r\n  }\r\n\r\n  if (shuffleCards === true) {\r\n    const shuffledCards = shuffle(statementsArray);\r\n    statementsArray = [...shuffledCards];\r\n  }\r\n\r\n  let totalStatements = statementsArray.length;\r\n\r\n  const columnStatements = {};\r\n\r\n  columnStatements.vCols = vColsObj;\r\n  columnStatements.statementList = statementsArray;\r\n\r\n  localStorage.setItem(\"hasBeenLoaded\", true);\r\n  const returnObj = {};\r\n  returnObj.columnStatements = columnStatements;\r\n  returnObj.totalStatements = totalStatements;\r\n  return returnObj;\r\n};\r\n\r\nexport default processStatementsXMLData;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoadingScreen = () => {\r\n  return (\r\n    <Container>\r\n      <TextDiv>Loading</TextDiv>\r\n      <div>\r\n        <div id=\"loading\" />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextDiv = styled.div`\r\n  font-size: 88px;\r\n  font-style: italic;\r\n  font-weight: bold;\r\n  align-self: center;\r\n  margin-right: 70px;\r\n  margin-top: 40px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport convertObjectToResults from \"../sort/convertObjectToResults\";\r\nimport getObjectValues from \"lodash/values\";\r\n\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getPresortFinished = (state) => state.presortFinished;\r\nconst getSetTrigPrePrevNavModal = (state) =>\r\n  state.setTriggerPresortPreventNavModal;\r\nconst getCurrentPage = (state) => state.currentPage;\r\nconst getSetCheckReqQuesCompl = (state) =>\r\n  state.setCheckRequiredQuestionsComplete;\r\nconst getSetTrigSurvPrevNavModal = (state) =>\r\n  state.setTriggerSurveyPreventNavModal;\r\nconst getIsSortingFinished = (state) => state.isSortingFinished;\r\nconst getHasOverloadedColumn = (state) => state.hasOverloadedColumn;\r\nconst getSetTrigSortPrevNavModal = (state) =>\r\n  state.setTriggerSortPreventNavModal;\r\nconst getSetTrigSortOverColMod = (state) =>\r\n  state.setTriggerSortOverloadedColumnModal;\r\nconst getColumnStatements = (state) => state.columnStatements;\r\nconst getSetResults = (state) => state.setResults;\r\nconst getSetShowPostsortCommentHighlighting = (state) =>\r\n  state.setShowPostsortCommentHighlighting;\r\nconst getSetTriggerPostsortPreventNavModal = (state) =>\r\n  state.setTriggerPostsortPreventNavModal;\r\n\r\nconst LinkButton = (props) => {\r\n  let goToNextPage;\r\n\r\n  // GLOBAL STATE\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  const presortFinished = useStore(getPresortFinished);\r\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\r\n  const currentPage = useStore(getCurrentPage);\r\n  const setCheckRequiredQuestionsComplete = useStore(getSetCheckReqQuesCompl);\r\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\r\n  const isSortingFinished = useStore(getIsSortingFinished);\r\n  const hasOverloadedColumn = useStore(getHasOverloadedColumn);\r\n  const setTriggerSortPreventNavModal = useStore(getSetTrigSortPrevNavModal);\r\n  const setTriggerSortOverloadedColModal = useStore(getSetTrigSortOverColMod);\r\n  const columnStatements = useSettingsStore(getColumnStatements);\r\n  const setResults = useStore(getSetResults);\r\n  const setShowPostsortCommentHighlighting = useStore(\r\n    getSetShowPostsortCommentHighlighting\r\n  );\r\n  const setTriggerPostsortPreventNavModal = useStore(\r\n    getSetTriggerPostsortPreventNavModal\r\n  );\r\n\r\n  const allowUnforcedSorts = configObj.allowUnforcedSorts;\r\n  const postsortCommentsRequired = configObj.postsortCommentsRequired;\r\n\r\n  // PERSISTENT STATE\r\n  const sortColumns = JSON.parse(localStorage.getItem(\"sortColumns\")) || [];\r\n\r\n  const {\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props;\r\n\r\n  const checkForNextPageConditions = (\r\n    allowUnforcedSorts,\r\n    isPresortFinished\r\n  ) => {\r\n    // *** ReCalc Results ***\r\n    let sortResults1 = convertObjectToResults(columnStatements);\r\n\r\n    if (currentPage === \"presort\") {\r\n      if (isPresortFinished === false) {\r\n        setTriggerPresortPreventNavModal(true);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      if (isSortingFinished === false) {\r\n        // check to see if finished, but had sorting registration error\r\n        if (sortColumns?.imagesList?.length === 0) {\r\n          if (allowUnforcedSorts === true) {\r\n            // persist results to localStorage\r\n            setResults(sortResults1);\r\n            // localStorage.setItem(\"resultsSort\", JSON.stringify(sortResults1));\r\n            setTriggerSortPreventNavModal(false);\r\n            return true;\r\n          } else {\r\n            // if forced sort -> allow nav only if no overloaded columns\r\n            if (hasOverloadedColumn === true) {\r\n              setTriggerSortPreventNavModal(false);\r\n              setTriggerSortOverloadedColModal(true);\r\n              return false;\r\n            } else {\r\n              setResults(sortResults1);\r\n              // persist results to localStorage\r\n              // localStorage.setItem(\"resultsSort\", JSON.stringify(sortResults1));\r\n              setTriggerSortPreventNavModal(false);\r\n              return true;\r\n            }\r\n          }\r\n        } else {\r\n          // not finished sorting\r\n          setTriggerSortPreventNavModal(true);\r\n          return false;\r\n        }\r\n      } else {\r\n        // has finished sorting\r\n        if (allowUnforcedSorts === true) {\r\n          // unforced ok -> allow nav\r\n          setTriggerSortPreventNavModal(false);\r\n          return true;\r\n        } else {\r\n          // unforced not ok -> allow nav if no overloaded columns\r\n          if (hasOverloadedColumn === true) {\r\n            setTriggerSortPreventNavModal(false);\r\n            setTriggerSortOverloadedColModal(true);\r\n            return false;\r\n          } else {\r\n            setTriggerSortPreventNavModal(false);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (currentPage === \"postsort\") {\r\n      let postsortCommentCardCount = +localStorage.getItem(\r\n        \"postsortCommentCardCount\"\r\n      );\r\n      const required1 =\r\n        getObjectValues(\r\n          JSON.parse(localStorage.getItem(\"HC-requiredCommentsObj\"))\r\n        ) || [];\r\n      const required2 =\r\n        getObjectValues(\r\n          JSON.parse(localStorage.getItem(\"HC2-requiredCommentsObj\"))\r\n        ) || [];\r\n      const required3 =\r\n        getObjectValues(\r\n          JSON.parse(localStorage.getItem(\"LC-requiredCommentsObj\"))\r\n        ) || [];\r\n      const required4 =\r\n        getObjectValues(\r\n          JSON.parse(localStorage.getItem(\"LC2-requiredCommentsObj\"))\r\n        ) || [];\r\n\r\n      const checkArray2 = [\r\n        ...required1,\r\n        ...required2,\r\n        ...required3,\r\n        ...required4,\r\n      ];\r\n\r\n      if (\r\n        checkArray2.includes(\"false\") ||\r\n        checkArray2.includes(false) ||\r\n        checkArray2.length < postsortCommentCardCount\r\n      ) {\r\n        // answers required in configObj\r\n        if (postsortCommentsRequired === true) {\r\n          setShowPostsortCommentHighlighting(true);\r\n          setTriggerPostsortPreventNavModal(true);\r\n          return false;\r\n        }\r\n        return true;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (currentPage === \"survey\") {\r\n      let resultsSurvey = JSON.parse(localStorage.getItem(\"resultsSurvey\"));\r\n      let values = getObjectValues(resultsSurvey);\r\n      let includesNoResponse = values.includes(\"no-*?*-response\");\r\n      if (includesNoResponse) {\r\n        // to turn on yellow color for unanswered\r\n        setCheckRequiredQuestionsComplete(true);\r\n        setTriggerSurveyPreventNavModal(true);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // for pages without checks\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <NextButton\r\n      {...rest} // `children` is just another prop!\r\n      onClick={(event) => {\r\n        onClick && onClick(event);\r\n        goToNextPage = checkForNextPageConditions(\r\n          allowUnforcedSorts,\r\n          presortFinished\r\n        );\r\n        if (goToNextPage) {\r\n          history.push(to);\r\n        }\r\n      }}\r\n      tabindex=\"0\"\r\n    />\r\n  );\r\n};\r\nexport default withRouter(LinkButton);\r\n\r\nconst NextButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n  padding: 0.5em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  user-select: none;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\n// const getSetCardFontSize = (state) => state.setCardFontSize;\r\nconst getCardFontSizeSort = (state) => state.cardFontSizeSort;\r\nconst getSetCardFontSizeSort = (state) => state.setCardFontSizeSort;\r\nconst getCardFontSizePresort = (state) => state.cardFontSizePresort;\r\nconst getSetCardFontSizePresort = (state) => state.setCardFontSizePresort;\r\nconst getCardFontSizePostsort = (state) => state.cardFontSizePostsort;\r\nconst getSetCardFontSizePostsort = (state) => state.setCardFontSizePostsort;\r\nconst getCurrentPage = (state) => state.currentPage;\r\n\r\nconst FooterFontSizer = () => {\r\n  // GLOBAL STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  let cardFontSizeSort = useStore(getCardFontSizeSort);\r\n  let cardFontSizePostsort = useStore(getCardFontSizePostsort);\r\n  let cardFontSizePresort = useStore(getCardFontSizePresort);\r\n  const fontSizeText = ReactHtmlParser(decodeHTML(langObj.fontSizeText)) || \"\";\r\n  // const setCardFontSize = useStore(getSetCardFontSize);\r\n  const setCardFontSizeSort = useStore(getSetCardFontSizeSort);\r\n  const currentPage = useStore(getCurrentPage);\r\n  const cardFontSizeSortPersist = +localStorage.getItem(\"fontSizeSort\");\r\n  const cardFontSizePostsortPersist = +localStorage.getItem(\"fontSizePostsort\");\r\n  const cardFontSizePresortPersist = +localStorage.getItem(\"fontSizePresort\");\r\n  const setCardFontSizePostsort = useStore(getSetCardFontSizePostsort);\r\n  const setCardFontSizePresort = useStore(getSetCardFontSizePresort);\r\n\r\n  if (cardFontSizePresortPersist && currentPage === \"presort\") {\r\n    cardFontSizePresort = cardFontSizePresortPersist;\r\n  }\r\n\r\n  if (cardFontSizeSortPersist && currentPage === \"sort\") {\r\n    cardFontSizeSort = cardFontSizeSortPersist;\r\n  }\r\n\r\n  if (cardFontSizePostsortPersist && currentPage === \"postsort\") {\r\n    cardFontSizePostsort = cardFontSizePostsortPersist;\r\n  }\r\n\r\n  const increaseFontSize = () => {\r\n    if (currentPage === \"presort\") {\r\n      const currentSize = cardFontSizePresort;\r\n      const newSize = currentSize + 1;\r\n      localStorage.setItem(\"fontSizePresort\", JSON.stringify(newSize));\r\n      setCardFontSizePresort(newSize);\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      const currentSize = cardFontSizeSort;\r\n      const newSize = currentSize + 1;\r\n      localStorage.setItem(\"fontSizeSort\", JSON.stringify(newSize));\r\n      setCardFontSizeSort(newSize);\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      const currentSize = cardFontSizePostsort;\r\n      const newSize = currentSize + 1;\r\n      localStorage.setItem(\"fontSizePostsort\", JSON.stringify(newSize));\r\n      setCardFontSizePostsort(newSize);\r\n    }\r\n  };\r\n  const decreaseFontSize = () => {\r\n    if (currentPage === \"presort\") {\r\n      const currentSize = cardFontSizePresort;\r\n      const newSize = currentSize - 1;\r\n      localStorage.setItem(\"fontSizePresort\", JSON.stringify(newSize));\r\n      setCardFontSizePresort(newSize);\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      const currentSize = cardFontSizeSort;\r\n      const newSize = currentSize - 1;\r\n      localStorage.setItem(\"fontSizeSort\", JSON.stringify(newSize));\r\n      setCardFontSizeSort(newSize);\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      const currentSize = cardFontSizePostsort;\r\n      const newSize = currentSize - 1;\r\n      localStorage.setItem(\"fontSizePostsort\", JSON.stringify(newSize));\r\n      setCardFontSizePostsort(newSize);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SpanDiv>{fontSizeText}</SpanDiv>\r\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseFontSize}>\r\n        -\r\n      </SizeButton>\r\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseFontSize}>\r\n        +\r\n      </SizeButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FooterFontSizer;\r\n\r\nconst SizeButton = styled.button`\r\n  background: #337ab7;\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.4em;\r\n  font-weight: bold;\r\n  margin: 0 3px 0 3px;\r\n  padding: 0.25em 0.5em;\r\n  padding-bottom: ${(props) => props.padBottom};\r\n  height: 30px;\r\n  width: 35px;\r\n\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst SpanDiv = styled.div`\r\n  font-size: 16px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getCardHeightSort = (state) => state.cardHeightSort;\r\nconst getSetCardHeightSort = (state) => state.setCardHeightSort;\r\nconst getCardHeightPostsort = (state) => state.cardHeightPostsort;\r\nconst getSetCardHeightPostsort = (state) => state.setCardHeightPostsort;\r\nconst getCurrentPage = (state) => state.currentPage;\r\n\r\nconst CardHeightSizer = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n\r\n  let cardHeightSort = useStore(getCardHeightSort);\r\n  const cardHeightPersistSort = localStorage.getItem(\"cardHeightSort\");\r\n  let cardHeightPostsort = useStore(getCardHeightPostsort);\r\n  const cardHeightPersistPostsort = localStorage.getItem(\"cardHeightPostsort\");\r\n\r\n  const currentPage = useStore(getCurrentPage);\r\n  const setCardHeightSort = useStore(getSetCardHeightSort);\r\n  const setCardHeightPostsort = useStore(getSetCardHeightPostsort);\r\n\r\n  if (cardHeightPersistSort) {\r\n    cardHeightSort = cardHeightPersistSort;\r\n  }\r\n\r\n  if (cardHeightPersistPostsort) {\r\n    cardHeightPostsort = cardHeightPersistPostsort;\r\n  }\r\n\r\n  const cardHeightText =\r\n    ReactHtmlParser(decodeHTML(langObj.cardHeightText)) || \"\";\r\n\r\n  const increaseHeight = () => {\r\n    if (currentPage === \"sort\") {\r\n      const currentSize = +cardHeightSort;\r\n      const newSize = currentSize + 2;\r\n      localStorage.setItem(\"cardHeightSort\", JSON.stringify(newSize));\r\n      setCardHeightSort(newSize);\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      const currentSize = +cardHeightPostsort;\r\n      const newSize = currentSize + 2;\r\n      localStorage.setItem(\"cardHeightPostsort\", JSON.stringify(newSize));\r\n      setCardHeightPostsort(newSize);\r\n    }\r\n  };\r\n  const decreaseHeight = () => {\r\n    if (currentPage === \"sort\") {\r\n      const currentSize = +cardHeightSort;\r\n      const newSize = currentSize - 2;\r\n      localStorage.setItem(\"cardHeightSort\", JSON.stringify(newSize));\r\n      setCardHeightSort(newSize);\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      const currentSize = +cardHeightPostsort;\r\n      const newSize = currentSize - 2;\r\n      localStorage.setItem(\"cardHeightPostsort\", JSON.stringify(newSize));\r\n      setCardHeightPostsort(newSize);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SpanDiv>{cardHeightText}</SpanDiv>\r\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseHeight}>\r\n        -\r\n      </SizeButton>\r\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseHeight}>\r\n        +\r\n      </SizeButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardHeightSizer;\r\n\r\nconst SizeButton = styled.button`\r\n  background: #337ab7;\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 1.4em;\r\n  font-weight: bold;\r\n  margin: 0 3px 0 3px;\r\n  padding: 0.25em 0.5em;\r\n  padding-bottom: ${(props) => props.padBottom};\r\n  height: 30px;\r\n  width: 35px;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst SpanDiv = styled.div`\r\n  font-size: 16px;\r\n`;\r\n","const calcProgressScore = (\r\n  currentPage,\r\n  additionalProgress1,\r\n  additionalProgressSort,\r\n  showPostsort,\r\n  showSurvey,\r\n  additionalProgressState,\r\n  additionalProgressStateSort\r\n) => {\r\n  let adjustmentValue1 = 20;\r\n  let adjustmentValue2 = 50;\r\n  let adjustmentValue3 = 80;\r\n  if (showPostsort === false && showSurvey === true) {\r\n    adjustmentValue1 = 30;\r\n    adjustmentValue2 = 60;\r\n  }\r\n  if (showPostsort === true && showSurvey === false) {\r\n    adjustmentValue1 = 30;\r\n    adjustmentValue2 = 60;\r\n    adjustmentValue3 = 90;\r\n  }\r\n  if (showPostsort === false && showSurvey === false) {\r\n    adjustmentValue1 = 30;\r\n    adjustmentValue2 = 60;\r\n  }\r\n\r\n  let totalProgressScore;\r\n  let additionalProgress = 0;\r\n  if (additionalProgress1 !== +additionalProgressState) {\r\n    additionalProgress = +additionalProgressState;\r\n  }\r\n\r\n  if (additionalProgressSort !== +additionalProgressStateSort) {\r\n    additionalProgressSort = +additionalProgressStateSort;\r\n  }\r\n\r\n  if (currentPage === \"landing\") {\r\n    totalProgressScore = 10;\r\n    return totalProgressScore;\r\n  }\r\n  if (currentPage === \"presort\") {\r\n    totalProgressScore = +additionalProgress + adjustmentValue1;\r\n    return totalProgressScore;\r\n  }\r\n  if (currentPage === \"sort\") {\r\n    totalProgressScore = +additionalProgressSort + adjustmentValue2;\r\n    return totalProgressScore;\r\n  }\r\n  if (currentPage === \"postsort\") {\r\n    totalProgressScore = adjustmentValue3;\r\n    return totalProgressScore;\r\n  }\r\n  if (currentPage === \"survey\") {\r\n    totalProgressScore = 90;\r\n    return totalProgressScore;\r\n  }\r\n  if (currentPage === \"submit\") {\r\n    totalProgressScore = 100;\r\n    return totalProgressScore;\r\n  }\r\n};\r\n\r\nexport default calcProgressScore;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getCurrentPage = (state) => state.currentPage;\r\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\r\nconst getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\r\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\r\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\r\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\r\nconst getSetTriggerSubmitModal = (state) => state.setTriggerSubmitModal;\r\n\r\nconst HelpButton = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const currentPage = useStore(getCurrentPage);\r\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\r\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\r\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\r\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\r\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\r\n  const setTriggerSubmitModal = useStore(getSetTriggerSubmitModal);\r\n\r\n  const buttonText = ReactHtmlParser(decodeHTML(langObj.btnHelp)) || \"\";\r\n\r\n  const handleOnClick = () => {\r\n    if (currentPage === \"landing\") {\r\n      setTriggerLandingModal(true);\r\n    }\r\n    if (currentPage === \"presort\") {\r\n      setTriggerPresortModal(true);\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      setTriggerSortModal(true);\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      setTriggerPostsortModal(true);\r\n    }\r\n    if (currentPage === \"survey\") {\r\n      setTriggerSurveyModal(true);\r\n    }\r\n    if (currentPage === \"submit\") {\r\n      setTriggerSubmitModal(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledHelpButton tabindex=\"0\" onClick={handleOnClick}>\r\n      {buttonText}\r\n    </StyledHelpButton>\r\n  );\r\n};\r\nexport default HelpButton;\r\n\r\nconst StyledHelpButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n  padding: 0.5em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  justify-self: right;\r\n  margin-right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n\r\n/*\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n    box-shadow: inset 0 0 0 4px #666, 0 0 1px transparent;\r\n  }\r\n  */\r\n","const getNextPage = (currentPage, showPostsort, showSurvey) => {\r\n  if (showPostsort === true && showSurvey === true) {\r\n    if (currentPage === \"landing\") {\r\n      return `/presort`;\r\n    }\r\n    if (currentPage === \"presort\") {\r\n      return `/sort`;\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      return `/postsort`;\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      return `/survey`;\r\n    }\r\n    if (currentPage === \"survey\") {\r\n      return `/submit`;\r\n    }\r\n    if (currentPage === \"submit\") {\r\n      return `/`;\r\n    }\r\n    return `/nopagefound`;\r\n  }\r\n\r\n  if (showPostsort === false && showSurvey === true) {\r\n    if (currentPage === \"landing\") {\r\n      return `/presort`;\r\n    }\r\n    if (currentPage === \"presort\") {\r\n      return `/sort`;\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      return `/survey`;\r\n    }\r\n    if (currentPage === \"survey\") {\r\n      return `/submit`;\r\n    }\r\n    if (currentPage === \"submit\") {\r\n      return `/`;\r\n    }\r\n    return `/nopagefound`;\r\n  }\r\n\r\n  if (showPostsort === true && showSurvey === false) {\r\n    if (currentPage === \"landing\") {\r\n      return `/presort`;\r\n    }\r\n    if (currentPage === \"presort\") {\r\n      return `/sort`;\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      return `/postsort`;\r\n    }\r\n    if (currentPage === \"postsort\") {\r\n      return `/submit`;\r\n    }\r\n    if (currentPage === \"submit\") {\r\n      return `/`;\r\n    }\r\n    return `/nopagefound`;\r\n  }\r\n\r\n  if (showPostsort === false && showSurvey === false) {\r\n    if (currentPage === \"landing\") {\r\n      return `/presort`;\r\n    }\r\n    if (currentPage === \"presort\") {\r\n      return `/sort`;\r\n    }\r\n    if (currentPage === \"sort\") {\r\n      return `/submit`;\r\n    }\r\n    if (currentPage === \"submit\") {\r\n      return `/`;\r\n    }\r\n    return `/nopagefound`;\r\n  }\r\n};\r\n\r\nexport default getNextPage;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst BackButton = (props) => {\r\n  const {\r\n    history,\r\n    location,\r\n    match,\r\n    staticContext,\r\n    to,\r\n    onClick,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <NextButton\r\n      {...rest} // `children` is just another prop!\r\n      onClick={(event) => {\r\n        onClick && onClick(event);\r\n        history.push(to);\r\n      }}\r\n      tabindex=\"0\"\r\n    />\r\n  );\r\n};\r\nexport default withRouter(BackButton);\r\n\r\nconst NextButton = styled.button`\r\n  border-color: #2e6da4;\r\n  color: white;\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n  padding: 0.5em;\r\n  border-radius: 3px;\r\n  text-decoration: none;\r\n  width: auto;\r\n  justify-self: right;\r\n  margin-right: 35px;\r\n  display: flex;\r\n  align-items: center;\r\n  user-select: none;\r\n  justify-content: center;\r\n  background-color: ${({ theme, active }) =>\r\n    active ? theme.secondary : theme.primary};\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.secondary};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: ${({ theme }) => theme.focus};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NextButton from \"./NextButton\";\r\nimport FooterFontSizer from \"./FooterFontSizer\";\r\nimport CardHeightSizer from \"./CardHeightSizer\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport decodeHTML from \"../../utilities/decodeHTML\";\r\nimport calcProgressScore from \"./calcProgressScore\";\r\nimport HelpButton from \"./HelpButton\";\r\nimport getNextPage from \"./getNextPage\";\r\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\r\nimport useStore from \"../../globalState/useStore\";\r\nimport PostsortBackButton from \"./PostsortBackButton\";\r\n\r\nconst getLangObj = (state) => state.langObj;\r\nconst getConfigObj = (state) => state.configObj;\r\nconst getDisplayNextButton = (state) => state.displayNextButton;\r\nconst getCurrentPage = (state) => state.currentPage;\r\nconst getAdditionalProgress = (state) => state.progressScoreAdditional;\r\nconst getAdditionalProgressSort = (state) => state.progressScoreAdditionalSort;\r\nconst getLocalUsercode = (state) => state.localUsercode;\r\n\r\nconst StyledFooter = () => {\r\n  // STATE\r\n  const langObj = useSettingsStore(getLangObj);\r\n  const configObj = useSettingsStore(getConfigObj);\r\n  let displayNextButton = useStore(getDisplayNextButton);\r\n  const currentPage = useStore(getCurrentPage);\r\n  const additionalProgress = useStore(getAdditionalProgress);\r\n  const additionalProgressSort = useStore(getAdditionalProgressSort);\r\n  const localUsercode = useStore(getLocalUsercode);\r\n\r\n  let showAdjustmentContainer = true;\r\n  let showCardHeightSizer = true;\r\n  let displayHelpButton = true;\r\n  let showFooterFontSizer = true;\r\n\r\n  let showBackButton;\r\n  let backButtonText = langObj.postsortBackButtonText;\r\n\r\n  if (currentPage === \"postsort\" && configObj.showBackButton) {\r\n    showBackButton = true;\r\n  } else {\r\n    showBackButton = false;\r\n  }\r\n\r\n  let logoHtml = ReactHtmlParser(\r\n    decodeHTML(\r\n      `{{{center}}}{{{img src=\"./logo/logo.png\" height=\"40\" width=\"250\" /}}}{{{/center}}}`\r\n    )\r\n  );\r\n\r\n  const nextButtonText = ReactHtmlParser(decodeHTML(langObj.btnNext)) || \"\";\r\n\r\n  if (currentPage === \"sort\" && configObj.setupTarget === \"local\") {\r\n    const usercode = localUsercode;\r\n    const projectName = configObj.studyTitle;\r\n    const today = new Date();\r\n    const date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n    const time =\r\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    const dateTime = date + \" \" + time;\r\n\r\n    logoHtml = `${usercode} - ${projectName} - ${dateTime}`;\r\n  }\r\n\r\n  const showPostsort = configObj.showPostsort;\r\n  const showSurvey = configObj.showSurvey;\r\n  const useImages = configObj.useImages;\r\n\r\n  const totalProgressScore = calcProgressScore(\r\n    currentPage,\r\n    additionalProgress,\r\n    additionalProgressSort,\r\n    showPostsort,\r\n    showSurvey,\r\n    additionalProgress,\r\n    additionalProgressSort\r\n  );\r\n\r\n  if (currentPage === \"submit\") {\r\n    displayNextButton = false;\r\n  }\r\n\r\n  if (configObj.setupTarget === \"local\" && currentPage === \"landing\") {\r\n    displayNextButton = false;\r\n    displayHelpButton = false;\r\n  }\r\n  if (currentPage === \"submit\") {\r\n    displayHelpButton = false;\r\n  }\r\n\r\n  if (currentPage === \"presort\") {\r\n    if (configObj.useImages === true) {\r\n      showAdjustmentContainer = false;\r\n      showCardHeightSizer = false;\r\n    } else {\r\n      showAdjustmentContainer = true;\r\n      showCardHeightSizer = false;\r\n    }\r\n  }\r\n\r\n  if (currentPage === \"sort\") {\r\n    if (useImages === true) {\r\n      showAdjustmentContainer = true;\r\n      showCardHeightSizer = true;\r\n      showFooterFontSizer = false;\r\n    } else {\r\n      showAdjustmentContainer = true;\r\n      showCardHeightSizer = true;\r\n      showFooterFontSizer = true;\r\n    }\r\n  }\r\n\r\n  if (\r\n    currentPage === \"landing\" ||\r\n    currentPage === \"survey\" ||\r\n    currentPage === \"submit\"\r\n  ) {\r\n    showAdjustmentContainer = false;\r\n  }\r\n\r\n  let CenterContent = (\r\n    <React.Fragment>\r\n      {displayHelpButton && <HelpButton />}\r\n      {showAdjustmentContainer && (\r\n        <AdjustmentsContainer>\r\n          {showFooterFontSizer && <FooterFontSizer />}\r\n          {showCardHeightSizer && <CardHeightSizer />}\r\n        </AdjustmentsContainer>\r\n      )}\r\n      <ProgressBarDiv>\r\n        <ProgressBar\r\n          completed={totalProgressScore}\r\n          width={\"100px\"}\r\n          bgColor=\"#337ab7\"\r\n          labelColor=\"#f0f0f0\"\r\n          baseBgColor=\"lightgray\"\r\n        />\r\n      </ProgressBarDiv>\r\n    </React.Fragment>\r\n  );\r\n\r\n  const nextPage = getNextPage(currentPage, showPostsort, showSurvey);\r\n\r\n  return (\r\n    <StyledFooterDiv>\r\n      <LogoContainer>{logoHtml}</LogoContainer>\r\n      <CenterDiv>{CenterContent}</CenterDiv>\r\n      <ButtonDiv>\r\n        {showBackButton && (\r\n          <PostsortBackButton to={\"/sort\"}>{backButtonText}</PostsortBackButton>\r\n        )}\r\n        {displayNextButton && (\r\n          <NextButton to={nextPage}>{nextButtonText}</NextButton>\r\n        )}\r\n      </ButtonDiv>\r\n    </StyledFooterDiv>\r\n  );\r\n};\r\n\r\nexport default StyledFooter;\r\n\r\nconst StyledFooterDiv = styled.footer`\r\n  position: fixed;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  border-top: 1px solid lightgray;\r\n\r\n  display: inline-grid;\r\n  grid-template-columns: 16% 1fr 16%;\r\n  align-items: center;\r\n`;\r\n\r\nconst AdjustmentsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst ProgressBarDiv = styled.div`\r\n  align-self: center;\r\n  justify-self: center;\r\n  margin-left: 25px;\r\n`;\r\n\r\nconst LogoContainer = styled.div`\r\n  padding-top: 5px;\r\n  padding-left: 5px;\r\n  display: flex;\r\n  justify-self: start;\r\n  align-self: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst CenterDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ButtonDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n`;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./pages/landing/Landing\";\r\nimport PostsortPage from \"./pages/postsort/Postsort\";\r\nimport PresortPage from \"./pages/presort/Presort\";\r\nimport SortPage from \"./pages/sort/Sort\";\r\nimport SubmitPage from \"./pages/submit/Submit\";\r\nimport SurveyPage from \"./pages/survey/Survey\";\r\nimport NoPageFound from \"./utilities/NoPageFound\";\r\nimport axios from \"axios\";\r\nimport processConfigXMLData from \"./utilities/processConfigXMLData\";\r\nimport processMapXMLData from \"./utilities/processMapXMLData\";\r\nimport processLanguageXMLData from \"./utilities/processLanguageXMLData\";\r\nimport processStatementsXMLData from \"./utilities/processStatementsXMLData\";\r\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\r\nimport StyledFooter from \"./pages/footer/StyledFooter\";\r\nimport useSettingsStore from \"./globalState/useSettingsStore\";\r\nimport useStore from \"./globalState/useStore\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport shuffle from \"lodash/shuffle\";\r\nimport convert from \"xml-js\";\r\n\r\nconst getSetConfigObj = (state) => state.setConfigObj;\r\nconst getSetLangObj = (state) => state.setLangObj;\r\nconst getSetMapObj = (state) => state.setMapObj;\r\nconst getSetStatementsObj = (state) => state.setStatementsObj;\r\nconst getSetColumnStatements = (state) => state.setColumnStatements;\r\nconst getSetResetColumnStatements = (state) => state.setResetColumnStatements;\r\nconst getSetSurveyQuesObjArray = (state) => state.setSurveyQuestionObjArray;\r\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\r\nconst getSetDataLoaded = (state) => state.setDataLoaded;\r\nconst getDisplayGoodbyeMessage = (state) => state.displayGoodbyeMessage;\r\nconst getDisableRefreshCheck = (state) => state.disableRefreshCheck;\r\n\r\nfunction App() {\r\n  // STATE\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const setConfigObj = useSettingsStore(getSetConfigObj);\r\n  const setLangObj = useSettingsStore(getSetLangObj);\r\n  const setMapObj = useSettingsStore(getSetMapObj);\r\n  const setStatementsObj = useSettingsStore(getSetStatementsObj);\r\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\r\n  const setResetColumnStatements = useSettingsStore(\r\n    getSetResetColumnStatements\r\n  );\r\n  const setSurveyQuestionObjArray = useSettingsStore(getSetSurveyQuesObjArray);\r\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\r\n  const setDataLoaded = useStore(getSetDataLoaded);\r\n  const displayGoodbyeMessage = useStore(getDisplayGoodbyeMessage);\r\n  const disableRefreshCheck = useStore(getDisableRefreshCheck);\r\n\r\n  useEffect(() => {\r\n    const unloadCallback = (event) => {\r\n      const e = event || window.event;\r\n      e.preventDefault();\r\n      if (e) {\r\n        e.returnValue = \"\";\r\n      }\r\n      return \"\";\r\n    };\r\n\r\n    if (displayGoodbyeMessage || disableRefreshCheck) {\r\n      window.removeEventListener(\"beforeunload\", unloadCallback);\r\n    } else {\r\n      window.addEventListener(\"beforeunload\", unloadCallback);\r\n      return () => {\r\n        //cleanup function\r\n        window.removeEventListener(\"beforeunload\", unloadCallback);\r\n      };\r\n    }\r\n  }, [displayGoodbyeMessage, disableRefreshCheck]);\r\n\r\n  useEffect(() => {\r\n    let shuffleCards;\r\n    let vColsObj;\r\n    let imagesArray = [];\r\n\r\n    (async () => {\r\n      await axios\r\n        .get(\"./settings/language.xml\", {\r\n          \"Content-Type\": \"application/xml; charset=utf-8\",\r\n        })\r\n        .then(function (response) {\r\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\r\n          const languageData = convert.xml2js(response.data, options);\r\n          let langObj = processLanguageXMLData(languageData);\r\n          setLangObj(langObj);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      await axios\r\n        .get(\"./settings/config.xml\", {\r\n          \"Content-Type\": \"application/xml; charset=utf-8\",\r\n        })\r\n        .then(function (response) {\r\n          const options = { compact: false, ignoreComment: true, spaces: 2 };\r\n          const configData = convert.xml2js(response.data, options);\r\n          let info = processConfigXMLData(configData);\r\n          shuffleCards = info.shuffleCards;\r\n\r\n          setConfigObj(info.configObj);\r\n          setSurveyQuestionObjArray(info.surveyQuestionObjArray);\r\n          setRequiredAnswersObj(info.requiredAnswersObj);\r\n\r\n          if (info.configObj.useImages === true) {\r\n            for (let i = 0; i < info.configObj.numImages; i++) {\r\n              let item = {};\r\n              item.backgroundColor = \"white\";\r\n              item.element = (\r\n                // eslint-disable-next-line\r\n                <img\r\n                  src={`/settings/images/image${i + 1}.${\r\n                    info.configObj.imageFileType\r\n                  }`}\r\n                  alt={`image${i + 1}`}\r\n                  className=\"dragObject\"\r\n                />\r\n              );\r\n              item.cardColor = \"yellowSortCard\";\r\n              item.divColor = \"isUncertainStatement\";\r\n              item.pinkChecked = false;\r\n              item.yellowChecked = true;\r\n              item.greenChecked = false;\r\n              item.sortValue = 222;\r\n              item.id = `image${i + 1}`;\r\n              item.statement = `image${i + 1}`;\r\n              item.statementNum = `${i + 1}`;\r\n\r\n              imagesArray.push(item);\r\n            }\r\n\r\n            if (info.configObj.shuffleCards === true) {\r\n              const shuffledCards = shuffle(imagesArray);\r\n              imagesArray = [...shuffledCards];\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      await axios\r\n        .get(\"./settings/map.xml\", {\r\n          \"Content-Type\": \"application/xml; charset=utf-8\",\r\n        })\r\n        .then(function (response) {\r\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\r\n          const mapData = convert.xml2js(response.data, options);\r\n          let data = processMapXMLData(mapData);\r\n          vColsObj = data.vColsObj;\r\n          setMapObj(data.mapObj);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      await axios\r\n        .get(\"./settings/statements.xml\", {\r\n          \"Content-Type\": \"application/xml; charset=utf-8\",\r\n        })\r\n        .then(function (response) {\r\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\r\n          const statementsData = convert.xml2js(response.data, options);\r\n          const statementsObj = processStatementsXMLData(\r\n            statementsData,\r\n            shuffleCards,\r\n            vColsObj\r\n          );\r\n          // add for images setup\r\n          statementsObj.columnStatements.imagesList = imagesArray;\r\n          setColumnStatements(statementsObj.columnStatements);\r\n          const resetColumnStatements = cloneDeep(\r\n            statementsObj.columnStatements\r\n          );\r\n          setResetColumnStatements(resetColumnStatements);\r\n          setStatementsObj(statementsObj);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n\r\n      await setDataLoaded(true);\r\n      await setLoading(false);\r\n    })();\r\n  }, [\r\n    setConfigObj,\r\n    setLangObj,\r\n    setStatementsObj,\r\n    setColumnStatements,\r\n    setRequiredAnswersObj,\r\n    setSurveyQuestionObjArray,\r\n    setMapObj,\r\n    setDataLoaded,\r\n    setResetColumnStatements,\r\n  ]);\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/presort\" component={PresortPage} />\r\n          <Route exact path=\"/sort\" component={SortPage} />\r\n          <Route exact path=\"/postsort\" component={PostsortPage} />\r\n          <Route exact path=\"/survey\" component={SurveyPage} />\r\n          <Route exact path=\"/submit\" component={SubmitPage} />\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route component={NoPageFound} />\r\n        </Switch>\r\n        <Suspense>\r\n          <StyledFooter />\r\n        </Suspense>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./styles/globalCSS\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\r\n\r\nconst theme = {\r\n  primary: \"#337ab7\",\r\n  secondary: \"#285f8f\",\r\n  focus: \"#63a0d4\",\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <React.Suspense fallback={<LoadingScreen />}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </React.Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}